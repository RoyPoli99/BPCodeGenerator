,Generation,Individual,Fitness,Wins,Losses,Draws,Block_Violations,Misses,Blocks,Deadlocks,Forks,Code
0,1.0,10.0,45.12038523274478,19.0,5.0,26.0,57.0,16.0,32.0,0.0,23.0,"function behaviorSet1(input) {
bp.registerBThread(""O_Player_Thread_1_1"", function(){
bp.sync({waitFor:[X(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[5].x, input[5].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[2].x, input[2].y), O(input[3].x, input[3].y)]},9);
});

}
var inputs_1 = [[{x: 0, y: 1}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 1, y: 1}, {x: 2, y: 1}],
[{x: 0, y: 2}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 0}],
[{x: 1, y: 0}, {x: 1, y: 0}, {x: 2, y: 2}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 2}],
[{x: 1, y: 1}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 2}],
[{x: 1, y: 2}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 1, y: 2}],
[{x: 1, y: 2}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 1, y: 1}, {x: 0, y: 2}, {x: 2, y: 0}],
[{x: 1, y: 2}, {x: 2, y: 1}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 2}]]
inputs_1.forEach(function (input) {
behaviorSet1(input);
});

function behaviorSet2(input) {
bp.registerBThread(""O_Player_Thread_2_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[2].x, input[2].y), X(input[1].x, input[1].y), O(input[4].x, input[4].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[4].x, input[4].y), O(input[1].x, input[1].y)]},3);
});

}
var inputs_2 = [[{x: 1, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 2, y: 1}, {x: 0, y: 0}]]
inputs_2.forEach(function (input) {
behaviorSet2(input);
});

function behaviorSet3(input) {
bp.registerBThread(""O_Player_Thread_3_1"", function(){
bp.sync({waitFor:[O(input[1].x, input[1].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[1].x, input[1].y), O(input[2].x, input[2].y)]},7);
});

bp.registerBThread(""O_Player_Thread_3_2"", function(){
bp.sync({waitFor:[O(input[1].x, input[1].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[2].x, input[2].y)]},10);
});

bp.registerBThread(""O_Player_Thread_3_3"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y)]},4);
});

bp.registerBThread(""O_Player_Thread_3_4"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y), O(input[1].x, input[1].y)]});
bp.sync({waitFor:[X(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y), O(input[1].x, input[1].y)]},11);
});

}
var inputs_3 = [[{x: 0, y: 2}, {x: 2, y: 2}, {x: 2, y: 2}],
[{x: 2, y: 1}, {x: 0, y: 2}, {x: 1, y: 2}],
[{x: 2, y: 0}, {x: 2, y: 0}, {x: 1, y: 0}],
[{x: 2, y: 2}, {x: 1, y: 2}, {x: 0, y: 2}],
[{x: 2, y: 2}, {x: 0, y: 0}, {x: 2, y: 2}],
[{x: 0, y: 0}, {x: 1, y: 0}, {x: 0, y: 1}]]
inputs_3.forEach(function (input) {
behaviorSet3(input);
});

function behaviorSet4(input) {
bp.registerBThread(""O_Player_Thread_4_1"", function(){
bp.sync({request:[O(input[5].x, input[5].y), O(input[6].x, input[6].y), O(input[3].x, input[3].y)]},6);
});

}
var inputs_4 = [[{x: 0, y: 0}, {x: 1, y: 1}, {x: 2, y: 1}, {x: 1, y: 0}, {x: 1, y: 0}, {x: 2, y: 2}, {x: 2, y: 0}],
[{x: 1, y: 1}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 0, y: 1}, {x: 2, y: 0}, {x: 0, y: 2}]]
inputs_4.forEach(function (input) {
behaviorSet4(input);
});

function behaviorSet5(input) {
bp.registerBThread(""O_Player_Thread_5_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[0].x, input[0].y), X(input[2].x, input[2].y), X(input[6].x, input[6].y)]});
bp.sync({request:[O(input[5].x, input[5].y), O(input[0].x, input[0].y), O(input[4].x, input[4].y)]},9);
});

bp.registerBThread(""O_Player_Thread_5_2"", function(){
bp.sync({request:[O(input[0].x, input[0].y), O(input[6].x, input[6].y)]},7);
});

bp.registerBThread(""O_Player_Thread_5_3"", function(){
bp.sync({waitFor:[O(input[3].x, input[3].y), O(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[3].x, input[3].y)]});
bp.sync({request:[O(input[6].x, input[6].y), O(input[0].x, input[0].y), O(input[3].x, input[3].y), O(input[1].x, input[1].y)]},11);
});

bp.registerBThread(""O_Player_Thread_5_4"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), O(input[0].x, input[0].y)]});
bp.sync({waitFor:[O(input[6].x, input[6].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[2].x, input[2].y), O(input[1].x, input[1].y)]},2);
});

bp.registerBThread(""O_Player_Thread_5_5"", function(){
bp.sync({waitFor:[O(input[4].x, input[4].y), O(input[1].x, input[1].y), O(input[5].x, input[5].y), O(input[6].x, input[6].y)]});
bp.sync({request:[O(input[2].x, input[2].y)]},2);
});

}
var inputs_5 = [[{x: 0, y: 1}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 2}, {x: 1, y: 0}, {x: 1, y: 2}],
[{x: 2, y: 0}, {x: 0, y: 1}, {x: 0, y: 2}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 0, y: 0}, {x: 0, y: 2}],
[{x: 0, y: 0}, {x: 2, y: 0}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 1, y: 0}, {x: 0, y: 2}, {x: 2, y: 0}],
[{x: 2, y: 2}, {x: 0, y: 1}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 1, y: 0}, {x: 1, y: 2}],
[{x: 0, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 2, y: 2}]]
inputs_5.forEach(function (input) {
behaviorSet5(input);
});

function behaviorSet6(input) {
bp.registerBThread(""O_Player_Thread_6_1"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[1].x, input[1].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y)]},6);
});

bp.registerBThread(""O_Player_Thread_6_2"", function(){
bp.sync({request:[O(input[2].x, input[2].y)]},2);
});

bp.registerBThread(""O_Player_Thread_6_3"", function(){
bp.sync({request:[O(input[2].x, input[2].y), O(input[1].x, input[1].y), O(input[2].x, input[2].y)]},7);
});

bp.registerBThread(""O_Player_Thread_6_4"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[1].x, input[1].y)]},2);
});

}
var inputs_6 = [[{x: 0, y: 0}, {x: 0, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 2}, {x: 0, y: 2}]]
inputs_6.forEach(function (input) {
behaviorSet6(input);
});

function behaviorSet7(input) {
bp.registerBThread(""O_Player_Thread_7_1"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y), X(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[3].x, input[3].y)]},3);
});

bp.registerBThread(""O_Player_Thread_7_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[3].x, input[3].y)]},7);
});

bp.registerBThread(""O_Player_Thread_7_3"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[3].x, input[3].y)]},11);
});

bp.registerBThread(""O_Player_Thread_7_4"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[3].x, input[3].y)]},5);
});

}
var inputs_7 = [[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 2, y: 2}],
[{x: 1, y: 0}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 1, y: 1}],
[{x: 0, y: 0}, {x: 2, y: 2}, {x: 0, y: 2}, {x: 1, y: 0}],
[{x: 1, y: 0}, {x: 1, y: 0}, {x: 0, y: 0}, {x: 2, y: 2}],
[{x: 1, y: 2}, {x: 0, y: 0}, {x: 2, y: 2}, {x: 2, y: 1}],
[{x: 2, y: 1}, {x: 0, y: 0}, {x: 0, y: 0}, {x: 0, y: 2}]]
inputs_7.forEach(function (input) {
behaviorSet7(input);
});

function behaviorSet8(input) {
bp.registerBThread(""O_Player_Thread_8_1"", function(){
bp.sync({waitFor:[X(input[4].x, input[4].y)]});
bp.sync({waitFor:[X(input[3].x, input[3].y), O(input[4].x, input[4].y), X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[2].x, input[2].y)]},6);
});

bp.registerBThread(""O_Player_Thread_8_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[4].x, input[4].y)]},8);
});

bp.registerBThread(""O_Player_Thread_8_3"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y), O(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[4].x, input[4].y)]});
bp.sync({waitFor:[O(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[3].x, input[3].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[4].x, input[4].y), O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[4].x, input[4].y)]},6);
});

}
var inputs_8 = [[{x: 0, y: 1}, {x: 2, y: 0}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}],
[{x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 2}]]
inputs_8.forEach(function (input) {
behaviorSet8(input);
});

function behaviorSet9(input) {
bp.registerBThread(""O_Player_Thread_9_1"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},9);
});

bp.registerBThread(""O_Player_Thread_9_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},2);
});

bp.registerBThread(""O_Player_Thread_9_3"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y), O(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},1);
});

bp.registerBThread(""O_Player_Thread_9_4"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), O(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y), O(input[0].x, input[0].y), X(input[0].x, input[0].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},3);
});

}
var inputs_9 = [[{x: 0, y: 0}],
[{x: 1, y: 1}],
[{x: 0, y: 0}],
[{x: 2, y: 1}]]
inputs_9.forEach(function (input) {
behaviorSet9(input);
});

function behaviorSet10(input) {
bp.registerBThread(""O_Player_Thread_10_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},8);
});

bp.registerBThread(""O_Player_Thread_10_2"", function(){
bp.sync({request:[O(input[0].x, input[0].y)]},1);
});

}
var inputs_10 = [[{x: 0, y: 0}, {x: 0, y: 1}, {x: 1, y: 0}],
[{x: 2, y: 1}, {x: 2, y: 0}, {x: 2, y: 2}],
[{x: 0, y: 2}, {x: 0, y: 2}, {x: 1, y: 0}],
[{x: 2, y: 1}, {x: 1, y: 2}, {x: 0, y: 0}],
[{x: 0, y: 2}, {x: 0, y: 0}, {x: 2, y: 2}],
[{x: 2, y: 2}, {x: 1, y: 0}, {x: 0, y: 0}],
[{x: 1, y: 2}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 2}, {x: 2, y: 1}, {x: 2, y: 0}]]
inputs_10.forEach(function (input) {
behaviorSet10(input);
});

"
1,1.0,9.0,44.38775510204081,19.0,6.0,25.0,60.0,19.0,38.0,0.0,23.0,"function behaviorSet1(input) {
bp.registerBThread(""O_Player_Thread_1_1"", function(){
bp.sync({waitFor:[X(input[4].x, input[4].y), O(input[4].x, input[4].y)]});
bp.sync({request:[O(input[6].x, input[6].y)]},5);
});

bp.registerBThread(""O_Player_Thread_1_2"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[1].x, input[1].y), X(input[5].x, input[5].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[1].x, input[1].y), O(input[5].x, input[5].y), O(input[4].x, input[4].y)]},9);
});

}
var inputs_1 = [[{x: 2, y: 1}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 1, y: 2}],
[{x: 0, y: 1}, {x: 1, y: 1}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 2, y: 1}, {x: 0, y: 0}],
[{x: 0, y: 2}, {x: 2, y: 1}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 1, y: 2}]]
inputs_1.forEach(function (input) {
behaviorSet1(input);
});

function behaviorSet2(input) {
bp.registerBThread(""O_Player_Thread_2_1"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y), O(input[3].x, input[3].y)]});
bp.sync({waitFor:[X(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[3].x, input[3].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y)]},10);
});

bp.registerBThread(""O_Player_Thread_2_2"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y), X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_2_3"", function(){
bp.sync({request:[O(input[3].x, input[3].y), O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[1].x, input[1].y)]},6);
});

bp.registerBThread(""O_Player_Thread_2_4"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y)]},11);
});

bp.registerBThread(""O_Player_Thread_2_5"", function(){
bp.sync({request:[O(input[2].x, input[2].y)]},7);
});

}
var inputs_2 = [[{x: 2, y: 2}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 2, y: 1}],
[{x: 0, y: 0}, {x: 1, y: 2}, {x: 0, y: 0}, {x: 0, y: 1}],
[{x: 0, y: 1}, {x: 0, y: 1}, {x: 1, y: 1}, {x: 2, y: 1}]]
inputs_2.forEach(function (input) {
behaviorSet2(input);
});

function behaviorSet3(input) {
bp.registerBThread(""O_Player_Thread_3_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y)]},9);
});

bp.registerBThread(""O_Player_Thread_3_2"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), O(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y)]},4);
});

bp.registerBThread(""O_Player_Thread_3_3"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y), X(input[2].x, input[2].y), O(input[1].x, input[1].y), X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y)]},10);
});

bp.registerBThread(""O_Player_Thread_3_4"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[1].x, input[1].y)]});
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},11);
});

bp.registerBThread(""O_Player_Thread_3_5"", function(){
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},10);
});

}
var inputs_3 = [[{x: 1, y: 1}, {x: 0, y: 1}, {x: 2, y: 1}],
[{x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 2}],
[{x: 2, y: 0}, {x: 2, y: 1}, {x: 0, y: 0}],
[{x: 2, y: 0}, {x: 0, y: 2}, {x: 0, y: 1}],
[{x: 2, y: 1}, {x: 1, y: 2}, {x: 0, y: 2}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}]]
inputs_3.forEach(function (input) {
behaviorSet3(input);
});

function behaviorSet4(input) {
bp.registerBThread(""O_Player_Thread_4_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[8].x, input[8].y)]});
bp.sync({waitFor:[X(input[4].x, input[4].y), O(input[4].x, input[4].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[3].x, input[3].y)]},10);
});

}
var inputs_4 = [[{x: 1, y: 2}, {x: 0, y: 1}, {x: 1, y: 2}, {x: 1, y: 2}, {x: 1, y: 0}, {x: 0, y: 2}, {x: 2, y: 2}, {x: 0, y: 0}, {x: 1, y: 1}]]
inputs_4.forEach(function (input) {
behaviorSet4(input);
});

function behaviorSet5(input) {
bp.registerBThread(""O_Player_Thread_5_1"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), O(input[0].x, input[0].y)]});
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_5_2"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), O(input[0].x, input[0].y)]});
bp.sync({waitFor:[X(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},5);
});

bp.registerBThread(""O_Player_Thread_5_3"", function(){
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},5);
});

}
var inputs_5 = [[{x: 2, y: 1}],
[{x: 0, y: 2}],
[{x: 1, y: 1}],
[{x: 1, y: 2}],
[{x: 2, y: 2}],
[{x: 0, y: 1}]]
inputs_5.forEach(function (input) {
behaviorSet5(input);
});

function behaviorSet6(input) {
bp.registerBThread(""O_Player_Thread_6_1"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y), O(input[2].x, input[2].y), X(input[1].x, input[1].y)]});
bp.sync({waitFor:[O(input[5].x, input[5].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[3].x, input[3].y)]});
bp.sync({request:[O(input[4].x, input[4].y)]},8);
});

bp.registerBThread(""O_Player_Thread_6_2"", function(){
bp.sync({waitFor:[X(input[7].x, input[7].y), O(input[7].x, input[7].y), X(input[8].x, input[8].y)]});
bp.sync({request:[O(input[6].x, input[6].y), O(input[0].x, input[0].y), O(input[7].x, input[7].y), O(input[6].x, input[6].y)]},1);
});

}
var inputs_6 = [[{x: 2, y: 1}, {x: 2, y: 0}, {x: 2, y: 0}, {x: 1, y: 2}, {x: 1, y: 2}, {x: 0, y: 1}, {x: 2, y: 2}, {x: 1, y: 0}, {x: 0, y: 0}],
[{x: 0, y: 1}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 0, y: 2}],
[{x: 2, y: 1}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 0}, {x: 2, y: 2}],
[{x: 0, y: 1}, {x: 1, y: 0}, {x: 0, y: 0}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 1, y: 2}, {x: 0, y: 1}, {x: 2, y: 0}, {x: 0, y: 1}],
[{x: 2, y: 2}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 1}, {x: 2, y: 0}, {x: 1, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 0, y: 1}, {x: 1, y: 0}],
[{x: 0, y: 1}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 1, y: 0}, {x: 1, y: 0}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 2, y: 0}],
[{x: 1, y: 0}, {x: 0, y: 1}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 1, y: 2}, {x: 0, y: 2}, {x: 1, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}],
[{x: 1, y: 0}, {x: 1, y: 0}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 1, y: 1}, {x: 0, y: 2}, {x: 2, y: 2}, {x: 1, y: 0}, {x: 1, y: 0}]]
inputs_6.forEach(function (input) {
behaviorSet6(input);
});

function behaviorSet7(input) {
bp.registerBThread(""O_Player_Thread_7_1"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},2);
});

bp.registerBThread(""O_Player_Thread_7_2"", function(){
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},6);
});

bp.registerBThread(""O_Player_Thread_7_3"", function(){
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},8);
});

bp.registerBThread(""O_Player_Thread_7_4"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({waitFor:[X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},7);
});

}
var inputs_7 = [[{x: 0, y: 2}]]
inputs_7.forEach(function (input) {
behaviorSet7(input);
});

function behaviorSet8(input) {
bp.registerBThread(""O_Player_Thread_8_1"", function(){
bp.sync({waitFor:[X(input[3].x, input[3].y), X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},11);
});

}
var inputs_8 = [[{x: 2, y: 1}, {x: 1, y: 2}, {x: 1, y: 1}, {x: 1, y: 0}, {x: 0, y: 0}],
[{x: 1, y: 0}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 2}, {x: 2, y: 0}]]
inputs_8.forEach(function (input) {
behaviorSet8(input);
});

function behaviorSet9(input) {
bp.registerBThread(""O_Player_Thread_9_1"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},5);
});

}
var inputs_9 = [[{x: 0, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 2, y: 1}],
[{x: 0, y: 0}, {x: 1, y: 0}, {x: 0, y: 1}, {x: 1, y: 1}],
[{x: 2, y: 0}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 1}]]
inputs_9.forEach(function (input) {
behaviorSet9(input);
});

function behaviorSet10(input) {
bp.registerBThread(""O_Player_Thread_10_1"", function(){
bp.sync({request:[O(input[3].x, input[3].y), O(input[4].x, input[4].y)]},11);
});

bp.registerBThread(""O_Player_Thread_10_2"", function(){
bp.sync({request:[O(input[3].x, input[3].y)]},9);
});

bp.registerBThread(""O_Player_Thread_10_3"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y), X(input[2].x, input[2].y), X(input[0].x, input[0].y), O(input[3].x, input[3].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[3].x, input[3].y), O(input[1].x, input[1].y)]},4);
});

bp.registerBThread(""O_Player_Thread_10_4"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[4].x, input[4].y)]},8);
});

}
var inputs_10 = [[{x: 2, y: 1}, {x: 0, y: 1}, {x: 1, y: 2}, {x: 0, y: 1}, {x: 1, y: 0}],
[{x: 1, y: 2}, {x: 0, y: 1}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 0, y: 2}],
[{x: 1, y: 2}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}, {x: 0, y: 0}],
[{x: 2, y: 0}, {x: 2, y: 1}, {x: 0, y: 2}, {x: 1, y: 0}, {x: 0, y: 1}],
[{x: 0, y: 1}, {x: 2, y: 1}, {x: 0, y: 2}, {x: 0, y: 2}, {x: 2, y: 0}],
[{x: 0, y: 1}, {x: 1, y: 0}, {x: 1, y: 0}, {x: 0, y: 1}, {x: 2, y: 1}],
[{x: 0, y: 2}, {x: 1, y: 2}, {x: 0, y: 2}, {x: 2, y: 2}, {x: 2, y: 0}],
[{x: 0, y: 2}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}],
[{x: 1, y: 1}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 2, y: 0}, {x: 2, y: 1}]]
inputs_10.forEach(function (input) {
behaviorSet10(input);
});

"
2,1.0,8.0,35.64285714285714,12.0,6.0,32.0,63.0,23.0,37.0,0.0,20.0,"function behaviorSet1(input) {
bp.registerBThread(""O_Player_Thread_1_1"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[5].x, input[5].y)]},10);
});

bp.registerBThread(""O_Player_Thread_1_2"", function(){
bp.sync({waitFor:[O(input[4].x, input[4].y), X(input[3].x, input[3].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[5].x, input[5].y), O(input[0].x, input[0].y)]},3);
});

bp.registerBThread(""O_Player_Thread_1_3"", function(){
bp.sync({waitFor:[O(input[4].x, input[4].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},1);
});

bp.registerBThread(""O_Player_Thread_1_4"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y), O(input[6].x, input[6].y), O(input[1].x, input[1].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[3].x, input[3].y)]},6);
});

}
var inputs_1 = [[{x: 1, y: 2}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 2, y: 1}]]
inputs_1.forEach(function (input) {
behaviorSet1(input);
});

function behaviorSet2(input) {
bp.registerBThread(""O_Player_Thread_2_1"", function(){
bp.sync({request:[O(input[3].x, input[3].y)]},10);
});

bp.registerBThread(""O_Player_Thread_2_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[1].x, input[1].y), O(input[3].x, input[3].y)]},4);
});

bp.registerBThread(""O_Player_Thread_2_3"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), O(input[3].x, input[3].y), O(input[2].x, input[2].y), O(input[1].x, input[1].y)]});
bp.sync({waitFor:[X(input[3].x, input[3].y), X(input[1].x, input[1].y), X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[2].x, input[2].y), O(input[3].x, input[3].y)]},3);
});

}
var inputs_2 = [[{x: 2, y: 2}, {x: 2, y: 2}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 2, y: 0}, {x: 1, y: 2}, {x: 1, y: 1}, {x: 1, y: 0}],
[{x: 1, y: 0}, {x: 0, y: 2}, {x: 1, y: 0}, {x: 2, y: 1}],
[{x: 0, y: 0}, {x: 1, y: 1}, {x: 1, y: 0}, {x: 2, y: 0}],
[{x: 0, y: 1}, {x: 2, y: 2}, {x: 0, y: 0}, {x: 1, y: 1}],
[{x: 1, y: 1}, {x: 1, y: 1}, {x: 2, y: 1}, {x: 1, y: 0}],
[{x: 1, y: 2}, {x: 0, y: 1}, {x: 1, y: 1}, {x: 0, y: 0}]]
inputs_2.forEach(function (input) {
behaviorSet2(input);
});

function behaviorSet3(input) {
bp.registerBThread(""O_Player_Thread_3_1"", function(){
bp.sync({request:[O(input[0].x, input[0].y)]},6);
});

bp.registerBThread(""O_Player_Thread_3_2"", function(){
bp.sync({request:[O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},2);
});

bp.registerBThread(""O_Player_Thread_3_3"", function(){
bp.sync({request:[O(input[2].x, input[2].y)]},5);
});

bp.registerBThread(""O_Player_Thread_3_4"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y), X(input[1].x, input[1].y)]});
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},11);
});

bp.registerBThread(""O_Player_Thread_3_5"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y)]});
bp.sync({waitFor:[X(input[0].x, input[0].y), O(input[0].x, input[0].y), X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[1].x, input[1].y)]},2);
});

}
var inputs_3 = [[{x: 2, y: 2}, {x: 1, y: 0}, {x: 2, y: 1}],
[{x: 1, y: 1}, {x: 1, y: 2}, {x: 1, y: 2}],
[{x: 1, y: 0}, {x: 2, y: 1}, {x: 2, y: 1}],
[{x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 0}],
[{x: 1, y: 1}, {x: 2, y: 2}, {x: 2, y: 2}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}]]
inputs_3.forEach(function (input) {
behaviorSet3(input);
});

function behaviorSet4(input) {
bp.registerBThread(""O_Player_Thread_4_1"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[6].x, input[6].y), O(input[4].x, input[4].y)]},9);
});

bp.registerBThread(""O_Player_Thread_4_2"", function(){
bp.sync({waitFor:[O(input[7].x, input[7].y), X(input[1].x, input[1].y), X(input[4].x, input[4].y)]});
bp.sync({request:[O(input[5].x, input[5].y), O(input[2].x, input[2].y)]},10);
});

}
var inputs_4 = [[{x: 1, y: 2}, {x: 1, y: 2}, {x: 2, y: 1}, {x: 1, y: 2}, {x: 2, y: 2}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 2, y: 0}],
[{x: 0, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 2, y: 0}, {x: 2, y: 0}],
[{x: 0, y: 2}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 2, y: 0}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 1}, {x: 2, y: 2}, {x: 0, y: 2}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 1, y: 2}, {x: 1, y: 2}, {x: 2, y: 0}],
[{x: 2, y: 2}, {x: 1, y: 0}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 0, y: 1}],
[{x: 1, y: 2}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 1, y: 2}, {x: 1, y: 0}, {x: 0, y: 2}, {x: 2, y: 2}, {x: 2, y: 2}],
[{x: 1, y: 2}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 1, y: 0}, {x: 0, y: 0}, {x: 0, y: 0}, {x: 1, y: 2}, {x: 1, y: 0}, {x: 0, y: 1}],
[{x: 0, y: 2}, {x: 1, y: 2}, {x: 0, y: 0}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 1, y: 0}, {x: 2, y: 2}, {x: 1, y: 1}, {x: 0, y: 2}],
[{x: 0, y: 0}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 1, y: 0}, {x: 0, y: 1}, {x: 1, y: 0}, {x: 2, y: 1}]]
inputs_4.forEach(function (input) {
behaviorSet4(input);
});

function behaviorSet5(input) {
bp.registerBThread(""O_Player_Thread_5_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},8);
});

bp.registerBThread(""O_Player_Thread_5_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y)]});
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},9);
});

}
var inputs_5 = [[{x: 2, y: 1}, {x: 1, y: 1}],
[{x: 0, y: 0}, {x: 0, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}],
[{x: 0, y: 2}, {x: 1, y: 0}]]
inputs_5.forEach(function (input) {
behaviorSet5(input);
});

function behaviorSet6(input) {
bp.registerBThread(""O_Player_Thread_6_1"", function(){
bp.sync({waitFor:[X(input[7].x, input[7].y), X(input[6].x, input[6].y), O(input[3].x, input[3].y)]});
bp.sync({waitFor:[O(input[4].x, input[4].y), X(input[5].x, input[5].y)]});
bp.sync({request:[O(input[4].x, input[4].y)]},11);
});

bp.registerBThread(""O_Player_Thread_6_2"", function(){
bp.sync({waitFor:[O(input[1].x, input[1].y), X(input[8].x, input[8].y), O(input[7].x, input[7].y), X(input[7].x, input[7].y)]});
bp.sync({request:[O(input[7].x, input[7].y), O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[4].x, input[4].y)]},2);
});

bp.registerBThread(""O_Player_Thread_6_3"", function(){
bp.sync({request:[O(input[7].x, input[7].y), O(input[4].x, input[4].y)]},8);
});

bp.registerBThread(""O_Player_Thread_6_4"", function(){
bp.sync({waitFor:[O(input[1].x, input[1].y), O(input[3].x, input[3].y), O(input[5].x, input[5].y)]});
bp.sync({waitFor:[O(input[5].x, input[5].y)]});
bp.sync({request:[O(input[4].x, input[4].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[3].x, input[3].y)]},8);
});

bp.registerBThread(""O_Player_Thread_6_5"", function(){
bp.sync({waitFor:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[7].x, input[7].y), X(input[1].x, input[1].y)]});
bp.sync({waitFor:[X(input[8].x, input[8].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[7].x, input[7].y), O(input[7].x, input[7].y), O(input[6].x, input[6].y)]},8);
});

}
var inputs_6 = [[{x: 0, y: 2}, {x: 1, y: 2}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 1, y: 2}],
[{x: 0, y: 0}, {x: 1, y: 1}, {x: 2, y: 1}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 1, y: 0}, {x: 2, y: 2}],
[{x: 1, y: 1}, {x: 1, y: 1}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 0, y: 1}, {x: 1, y: 0}, {x: 1, y: 0}, {x: 1, y: 0}],
[{x: 2, y: 2}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 0, y: 1}, {x: 2, y: 0}, {x: 1, y: 2}, {x: 2, y: 2}],
[{x: 0, y: 1}, {x: 0, y: 1}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 2}, {x: 0, y: 0}],
[{x: 1, y: 2}, {x: 1, y: 2}, {x: 2, y: 2}, {x: 1, y: 2}, {x: 1, y: 2}, {x: 0, y: 1}, {x: 1, y: 0}, {x: 0, y: 1}, {x: 2, y: 1}],
[{x: 2, y: 1}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 2, y: 2}, {x: 2, y: 0}],
[{x: 1, y: 2}, {x: 2, y: 2}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 0, y: 2}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 1, y: 2}, {x: 1, y: 2}],
[{x: 2, y: 1}, {x: 0, y: 2}, {x: 1, y: 1}, {x: 0, y: 2}, {x: 1, y: 2}, {x: 1, y: 2}, {x: 2, y: 2}, {x: 2, y: 1}, {x: 2, y: 1}]]
inputs_6.forEach(function (input) {
behaviorSet6(input);
});

function behaviorSet7(input) {
bp.registerBThread(""O_Player_Thread_7_1"", function(){
bp.sync({request:[O(input[1].x, input[1].y)]},11);
});

bp.registerBThread(""O_Player_Thread_7_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({waitFor:[X(input[0].x, input[0].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[1].x, input[1].y)]},8);
});

bp.registerBThread(""O_Player_Thread_7_3"", function(){
bp.sync({request:[O(input[0].x, input[0].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},7);
});

bp.registerBThread(""O_Player_Thread_7_4"", function(){
bp.sync({waitFor:[O(input[1].x, input[1].y), O(input[1].x, input[1].y)]});
bp.sync({waitFor:[O(input[2].x, input[2].y), X(input[2].x, input[2].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},11);
});

}
var inputs_7 = [[{x: 1, y: 1}, {x: 0, y: 2}, {x: 0, y: 1}],
[{x: 0, y: 2}, {x: 2, y: 0}, {x: 2, y: 2}],
[{x: 1, y: 0}, {x: 2, y: 2}, {x: 1, y: 1}],
[{x: 0, y: 2}, {x: 0, y: 0}, {x: 1, y: 2}],
[{x: 1, y: 1}, {x: 2, y: 2}, {x: 1, y: 1}],
[{x: 1, y: 1}, {x: 0, y: 2}, {x: 2, y: 1}],
[{x: 0, y: 1}, {x: 1, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 0}, {x: 1, y: 2}, {x: 2, y: 2}],
[{x: 0, y: 2}, {x: 1, y: 2}, {x: 2, y: 1}]]
inputs_7.forEach(function (input) {
behaviorSet7(input);
});

function behaviorSet8(input) {
bp.registerBThread(""O_Player_Thread_8_1"", function(){
bp.sync({request:[O(input[2].x, input[2].y)]},9);
});

bp.registerBThread(""O_Player_Thread_8_2"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[3].x, input[3].y), X(input[2].x, input[2].y), X(input[0].x, input[0].y), O(input[3].x, input[3].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[1].x, input[1].y)]},1);
});

}
var inputs_8 = [[{x: 2, y: 1}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 0, y: 0}],
[{x: 2, y: 2}, {x: 1, y: 2}, {x: 1, y: 2}, {x: 2, y: 0}],
[{x: 0, y: 1}, {x: 1, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 1}, {x: 1, y: 2}, {x: 2, y: 2}, {x: 1, y: 1}],
[{x: 0, y: 1}, {x: 1, y: 2}, {x: 1, y: 2}, {x: 0, y: 0}],
[{x: 2, y: 1}, {x: 2, y: 2}, {x: 2, y: 1}, {x: 2, y: 2}],
[{x: 0, y: 0}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 2, y: 0}]]
inputs_8.forEach(function (input) {
behaviorSet8(input);
});

function behaviorSet9(input) {
bp.registerBThread(""O_Player_Thread_9_1"", function(){
bp.sync({request:[O(input[6].x, input[6].y), O(input[0].x, input[0].y), O(input[5].x, input[5].y)]},9);
});

bp.registerBThread(""O_Player_Thread_9_2"", function(){
bp.sync({waitFor:[O(input[6].x, input[6].y), O(input[3].x, input[3].y), O(input[1].x, input[1].y)]});
bp.sync({request:[O(input[5].x, input[5].y)]},2);
});

bp.registerBThread(""O_Player_Thread_9_3"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y)]});
bp.sync({waitFor:[O(input[4].x, input[4].y), X(input[5].x, input[5].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[4].x, input[4].y), O(input[4].x, input[4].y), O(input[0].x, input[0].y)]},7);
});

}
var inputs_9 = [[{x: 2, y: 1}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 2, y: 2}],
[{x: 1, y: 1}, {x: 2, y: 1}, {x: 1, y: 0}, {x: 2, y: 2}, {x: 0, y: 1}, {x: 2, y: 0}, {x: 2, y: 0}],
[{x: 2, y: 2}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 0, y: 0}, {x: 2, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 1, y: 0}, {x: 2, y: 1}, {x: 0, y: 2}, {x: 1, y: 2}],
[{x: 1, y: 0}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 2, y: 2}, {x: 0, y: 2}]]
inputs_9.forEach(function (input) {
behaviorSet9(input);
});

function behaviorSet10(input) {
bp.registerBThread(""O_Player_Thread_10_1"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},2);
});

bp.registerBThread(""O_Player_Thread_10_2"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), O(input[0].x, input[0].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},11);
});

bp.registerBThread(""O_Player_Thread_10_3"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},3);
});

}
var inputs_10 = [[{x: 1, y: 2}],
[{x: 2, y: 2}],
[{x: 2, y: 1}],
[{x: 1, y: 2}],
[{x: 0, y: 2}],
[{x: 0, y: 0}],
[{x: 2, y: 1}],
[{x: 2, y: 0}],
[{x: 1, y: 2}]]
inputs_10.forEach(function (input) {
behaviorSet10(input);
});

"
3,1.0,2.0,39.78021978021978,14.0,9.0,27.0,55.0,21.0,36.0,0.0,27.0,"function behaviorSet1(input) {
bp.registerBThread(""O_Player_Thread_1_1"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y), X(input[2].x, input[2].y), O(input[2].x, input[2].y), O(input[1].x, input[1].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[1].x, input[1].y)]},7);
});

bp.registerBThread(""O_Player_Thread_1_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[1].x, input[1].y)]},4);
});

bp.registerBThread(""O_Player_Thread_1_3"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), O(input[1].x, input[1].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y)]},11);
});

}
var inputs_1 = [[{x: 2, y: 1}, {x: 1, y: 0}, {x: 2, y: 1}],
[{x: 1, y: 0}, {x: 2, y: 2}, {x: 1, y: 2}]]
inputs_1.forEach(function (input) {
behaviorSet1(input);
});

function behaviorSet2(input) {
bp.registerBThread(""O_Player_Thread_2_1"", function(){
bp.sync({waitFor:[O(input[3].x, input[3].y)]});
bp.sync({request:[O(input[2].x, input[2].y)]},10);
});

bp.registerBThread(""O_Player_Thread_2_2"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y), X(input[1].x, input[1].y), O(input[0].x, input[0].y)]});
bp.sync({waitFor:[O(input[2].x, input[2].y), O(input[1].x, input[1].y), O(input[3].x, input[3].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},10);
});

bp.registerBThread(""O_Player_Thread_2_3"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[2].x, input[2].y), X(input[3].x, input[3].y), X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},5);
});

}
var inputs_2 = [[{x: 2, y: 0}, {x: 2, y: 1}, {x: 0, y: 2}, {x: 2, y: 1}],
[{x: 2, y: 2}, {x: 0, y: 2}, {x: 2, y: 2}, {x: 2, y: 2}],
[{x: 2, y: 2}, {x: 1, y: 2}, {x: 1, y: 1}, {x: 1, y: 2}],
[{x: 0, y: 2}, {x: 2, y: 0}, {x: 2, y: 0}, {x: 0, y: 2}],
[{x: 1, y: 0}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 1, y: 2}],
[{x: 0, y: 1}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 2, y: 1}],
[{x: 1, y: 0}, {x: 0, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}],
[{x: 0, y: 1}, {x: 1, y: 0}, {x: 2, y: 0}, {x: 0, y: 2}]]
inputs_2.forEach(function (input) {
behaviorSet2(input);
});

function behaviorSet3(input) {
bp.registerBThread(""O_Player_Thread_3_1"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},3);
});

bp.registerBThread(""O_Player_Thread_3_2"", function(){
bp.sync({waitFor:[O(input[1].x, input[1].y)]});
bp.sync({waitFor:[O(input[1].x, input[1].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},3);
});

bp.registerBThread(""O_Player_Thread_3_3"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[0].x, input[0].y), X(input[1].x, input[1].y), X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},3);
});

bp.registerBThread(""O_Player_Thread_3_4"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y)]},5);
});

bp.registerBThread(""O_Player_Thread_3_5"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), O(input[1].x, input[1].y), X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},2);
});

}
var inputs_3 = [[{x: 2, y: 2}, {x: 0, y: 2}],
[{x: 0, y: 0}, {x: 0, y: 1}]]
inputs_3.forEach(function (input) {
behaviorSet3(input);
});

function behaviorSet4(input) {
bp.registerBThread(""O_Player_Thread_4_1"", function(){
bp.sync({request:[O(input[0].x, input[0].y)]},2);
});

bp.registerBThread(""O_Player_Thread_4_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y), O(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},4);
});

}
var inputs_4 = [[{x: 1, y: 0}],
[{x: 2, y: 2}],
[{x: 0, y: 0}],
[{x: 1, y: 2}],
[{x: 1, y: 2}]]
inputs_4.forEach(function (input) {
behaviorSet4(input);
});

function behaviorSet5(input) {
bp.registerBThread(""O_Player_Thread_5_1"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[0].x, input[0].y), O(input[0].x, input[0].y)]});
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},3);
});

bp.registerBThread(""O_Player_Thread_5_2"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},1);
});

}
var inputs_5 = [[{x: 1, y: 0}],
[{x: 0, y: 0}],
[{x: 2, y: 0}],
[{x: 1, y: 2}],
[{x: 0, y: 0}],
[{x: 2, y: 0}]]
inputs_5.forEach(function (input) {
behaviorSet5(input);
});

function behaviorSet6(input) {
bp.registerBThread(""O_Player_Thread_6_1"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y), X(input[0].x, input[0].y)]});
bp.sync({waitFor:[X(input[6].x, input[6].y), O(input[8].x, input[8].y)]});
bp.sync({request:[O(input[2].x, input[2].y)]},9);
});

bp.registerBThread(""O_Player_Thread_6_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({waitFor:[X(input[0].x, input[0].y), O(input[8].x, input[8].y)]});
bp.sync({request:[O(input[5].x, input[5].y), O(input[7].x, input[7].y), O(input[8].x, input[8].y), O(input[8].x, input[8].y)]},11);
});

bp.registerBThread(""O_Player_Thread_6_3"", function(){
bp.sync({waitFor:[O(input[3].x, input[3].y), O(input[8].x, input[8].y), O(input[4].x, input[4].y)]});
bp.sync({waitFor:[O(input[7].x, input[7].y), O(input[7].x, input[7].y), X(input[7].x, input[7].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[8].x, input[8].y)]},1);
});

}
var inputs_6 = [[{x: 1, y: 0}, {x: 2, y: 1}, {x: 1, y: 2}, {x: 2, y: 2}, {x: 0, y: 1}, {x: 1, y: 2}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 0, y: 0}],
[{x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 2}, {x: 0, y: 2}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 0, y: 1}, {x: 1, y: 2}, {x: 2, y: 2}]]
inputs_6.forEach(function (input) {
behaviorSet6(input);
});

function behaviorSet7(input) {
bp.registerBThread(""O_Player_Thread_7_1"", function(){
bp.sync({request:[O(input[2].x, input[2].y), O(input[2].x, input[2].y)]},2);
});

}
var inputs_7 = [[{x: 1, y: 2}, {x: 0, y: 1}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 1, y: 1}]]
inputs_7.forEach(function (input) {
behaviorSet7(input);
});

function behaviorSet8(input) {
bp.registerBThread(""O_Player_Thread_8_1"", function(){
bp.sync({request:[O(input[7].x, input[7].y)]},1);
});

bp.registerBThread(""O_Player_Thread_8_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[4].x, input[4].y), O(input[6].x, input[6].y), O(input[3].x, input[3].y)]},10);
});

}
var inputs_8 = [[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 2}, {x: 1, y: 0}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 2, y: 0}, {x: 2, y: 0}, {x: 2, y: 0}]]
inputs_8.forEach(function (input) {
behaviorSet8(input);
});

function behaviorSet9(input) {
bp.registerBThread(""O_Player_Thread_9_1"", function(){
bp.sync({request:[O(input[6].x, input[6].y), O(input[3].x, input[3].y)]},3);
});

bp.registerBThread(""O_Player_Thread_9_2"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y), O(input[3].x, input[3].y), X(input[5].x, input[5].y), X(input[6].x, input[6].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[2].x, input[2].y), O(input[1].x, input[1].y)]},9);
});

bp.registerBThread(""O_Player_Thread_9_3"", function(){
bp.sync({waitFor:[X(input[3].x, input[3].y)]});
bp.sync({request:[O(input[6].x, input[6].y)]},2);
});

bp.registerBThread(""O_Player_Thread_9_4"", function(){
bp.sync({request:[O(input[2].x, input[2].y), O(input[3].x, input[3].y), O(input[1].x, input[1].y)]},6);
});

bp.registerBThread(""O_Player_Thread_9_5"", function(){
bp.sync({waitFor:[X(input[3].x, input[3].y), X(input[4].x, input[4].y), O(input[4].x, input[4].y), X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[6].x, input[6].y)]},8);
});

}
var inputs_9 = [[{x: 0, y: 1}, {x: 0, y: 1}, {x: 2, y: 2}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 0, y: 0}, {x: 2, y: 1}],
[{x: 0, y: 2}, {x: 0, y: 0}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 0, y: 1}, {x: 1, y: 1}, {x: 0, y: 2}],
[{x: 0, y: 1}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 0, y: 1}, {x: 2, y: 2}, {x: 2, y: 1}, {x: 0, y: 0}],
[{x: 2, y: 0}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 1}, {x: 0, y: 2}, {x: 1, y: 1}, {x: 0, y: 2}],
[{x: 0, y: 2}, {x: 1, y: 1}, {x: 1, y: 0}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}],
[{x: 0, y: 1}, {x: 1, y: 0}, {x: 1, y: 0}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 2, y: 2}, {x: 1, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 0, y: 0}],
[{x: 1, y: 1}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 2, y: 1}, {x: 0, y: 2}, {x: 0, y: 0}]]
inputs_9.forEach(function (input) {
behaviorSet9(input);
});

function behaviorSet10(input) {
bp.registerBThread(""O_Player_Thread_10_1"", function(){
bp.sync({waitFor:[O(input[3].x, input[3].y)]});
bp.sync({waitFor:[O(input[4].x, input[4].y), X(input[8].x, input[8].y), O(input[5].x, input[5].y), O(input[7].x, input[7].y)]});
bp.sync({request:[O(input[4].x, input[4].y), O(input[5].x, input[5].y), O(input[8].x, input[8].y), O(input[7].x, input[7].y)]},4);
});

bp.registerBThread(""O_Player_Thread_10_2"", function(){
bp.sync({waitFor:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), X(input[8].x, input[8].y), X(input[6].x, input[6].y)]});
bp.sync({request:[O(input[5].x, input[5].y), O(input[2].x, input[2].y)]},8);
});

bp.registerBThread(""O_Player_Thread_10_3"", function(){
bp.sync({request:[O(input[7].x, input[7].y)]},8);
});

bp.registerBThread(""O_Player_Thread_10_4"", function(){
bp.sync({waitFor:[X(input[5].x, input[5].y), X(input[7].x, input[7].y)]});
bp.sync({waitFor:[X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[7].x, input[7].y), O(input[7].x, input[7].y), O(input[8].x, input[8].y), O(input[2].x, input[2].y)]},11);
});

bp.registerBThread(""O_Player_Thread_10_5"", function(){
bp.sync({waitFor:[X(input[8].x, input[8].y), O(input[4].x, input[4].y), O(input[3].x, input[3].y)]});
bp.sync({waitFor:[X(input[8].x, input[8].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[5].x, input[5].y), O(input[1].x, input[1].y), O(input[8].x, input[8].y)]},2);
});

}
var inputs_10 = [[{x: 2, y: 2}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 0, y: 0}, {x: 1, y: 2}, {x: 1, y: 0}, {x: 1, y: 0}, {x: 2, y: 1}, {x: 0, y: 2}],
[{x: 0, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 2, y: 2}, {x: 2, y: 2}],
[{x: 1, y: 2}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 0, y: 0}, {x: 2, y: 2}, {x: 0, y: 0}, {x: 0, y: 0}, {x: 2, y: 2}, {x: 2, y: 0}],
[{x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 1}, {x: 1, y: 0}, {x: 0, y: 0}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 1, y: 1}, {x: 1, y: 2}],
[{x: 2, y: 0}, {x: 0, y: 1}, {x: 2, y: 0}, {x: 0, y: 0}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 1, y: 0}]]
inputs_10.forEach(function (input) {
behaviorSet10(input);
});

"
4,1.0,7.0,38.29545454545455,15.0,6.0,29.0,67.0,25.0,43.0,0.0,18.0,"function behaviorSet1(input) {
bp.registerBThread(""O_Player_Thread_1_1"", function(){
bp.sync({waitFor:[O(input[5].x, input[5].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[5].x, input[5].y)]},2);
});

}
var inputs_1 = [[{x: 0, y: 1}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 0, y: 2}, {x: 1, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 0}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 1, y: 0}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 2, y: 1}],
[{x: 0, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 1}],
[{x: 1, y: 1}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 1}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 1, y: 0}, {x: 0, y: 2}]]
inputs_1.forEach(function (input) {
behaviorSet1(input);
});

function behaviorSet2(input) {
bp.registerBThread(""O_Player_Thread_2_1"", function(){
bp.sync({request:[O(input[6].x, input[6].y), O(input[3].x, input[3].y), O(input[2].x, input[2].y), O(input[2].x, input[2].y)]},4);
});

bp.registerBThread(""O_Player_Thread_2_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[5].x, input[5].y), X(input[7].x, input[7].y)]});
bp.sync({request:[O(input[7].x, input[7].y)]},2);
});

bp.registerBThread(""O_Player_Thread_2_3"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[0].x, input[0].y)]},8);
});

}
var inputs_2 = [[{x: 1, y: 0}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 2, y: 2}, {x: 1, y: 2}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 2, y: 2}, {x: 1, y: 1}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 1, y: 0}],
[{x: 2, y: 2}, {x: 1, y: 2}, {x: 0, y: 2}, {x: 1, y: 2}, {x: 1, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 0, y: 2}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 0, y: 2}],
[{x: 1, y: 0}, {x: 0, y: 0}, {x: 0, y: 1}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 0, y: 2}]]
inputs_2.forEach(function (input) {
behaviorSet2(input);
});

function behaviorSet3(input) {
bp.registerBThread(""O_Player_Thread_3_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[1].x, input[1].y), X(input[2].x, input[2].y), X(input[2].x, input[2].y)]});
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[2].x, input[2].y), O(input[2].x, input[2].y)]},8);
});

bp.registerBThread(""O_Player_Thread_3_2"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[1].x, input[1].y), X(input[2].x, input[2].y), O(input[2].x, input[2].y), X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[2].x, input[2].y)]},1);
});

}
var inputs_3 = [[{x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}],
[{x: 1, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}],
[{x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 0}]]
inputs_3.forEach(function (input) {
behaviorSet3(input);
});

function behaviorSet4(input) {
bp.registerBThread(""O_Player_Thread_4_1"", function(){
bp.sync({waitFor:[O(input[4].x, input[4].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_4_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[3].x, input[3].y)]},8);
});

}
var inputs_4 = [[{x: 2, y: 0}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 2, y: 1}, {x: 1, y: 0}],
[{x: 2, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 0, y: 0}],
[{x: 0, y: 2}, {x: 1, y: 2}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 0, y: 0}],
[{x: 1, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 2, y: 0}, {x: 0, y: 0}],
[{x: 2, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 2, y: 2}]]
inputs_4.forEach(function (input) {
behaviorSet4(input);
});

function behaviorSet5(input) {
bp.registerBThread(""O_Player_Thread_5_1"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[1].x, input[1].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},3);
});

bp.registerBThread(""O_Player_Thread_5_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},9);
});

bp.registerBThread(""O_Player_Thread_5_3"", function(){
bp.sync({request:[O(input[0].x, input[0].y), O(input[2].x, input[2].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y)]},4);
});

}
var inputs_5 = [[{x: 1, y: 0}, {x: 1, y: 1}, {x: 1, y: 2}],
[{x: 2, y: 2}, {x: 0, y: 2}, {x: 2, y: 1}]]
inputs_5.forEach(function (input) {
behaviorSet5(input);
});

function behaviorSet6(input) {
bp.registerBThread(""O_Player_Thread_6_1"", function(){
bp.sync({waitFor:[O(input[1].x, input[1].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_6_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[1].x, input[1].y), O(input[1].x, input[1].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},10);
});

bp.registerBThread(""O_Player_Thread_6_3"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_6_4"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[1].x, input[1].y)]},3);
});

}
var inputs_6 = [[{x: 0, y: 2}, {x: 1, y: 0}],
[{x: 0, y: 0}, {x: 1, y: 2}]]
inputs_6.forEach(function (input) {
behaviorSet6(input);
});

function behaviorSet7(input) {
bp.registerBThread(""O_Player_Thread_7_1"", function(){
bp.sync({request:[O(input[4].x, input[4].y), O(input[3].x, input[3].y), O(input[1].x, input[1].y), O(input[4].x, input[4].y)]},2);
});

}
var inputs_7 = [[{x: 0, y: 1}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 1, y: 2}, {x: 1, y: 2}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 1, y: 2}],
[{x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 0, y: 2}],
[{x: 0, y: 1}, {x: 0, y: 2}, {x: 1, y: 1}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 2, y: 0}],
[{x: 1, y: 2}, {x: 0, y: 2}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 0, y: 0}, {x: 1, y: 2}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 2}, {x: 2, y: 1}]]
inputs_7.forEach(function (input) {
behaviorSet7(input);
});

function behaviorSet8(input) {
bp.registerBThread(""O_Player_Thread_8_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[0].x, input[0].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_8_2"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[1].x, input[1].y)]},4);
});

bp.registerBThread(""O_Player_Thread_8_3"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[1].x, input[1].y), O(input[0].x, input[0].y), X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[1].x, input[1].y)]},3);
});

}
var inputs_8 = [[{x: 1, y: 2}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 2, y: 2}],
[{x: 2, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}],
[{x: 0, y: 0}, {x: 2, y: 2}]]
inputs_8.forEach(function (input) {
behaviorSet8(input);
});

function behaviorSet9(input) {
bp.registerBThread(""O_Player_Thread_9_1"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y)]});
bp.sync({waitFor:[X(input[3].x, input[3].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},2);
});

bp.registerBThread(""O_Player_Thread_9_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y), O(input[2].x, input[2].y)]},8);
});

}
var inputs_9 = [[{x: 2, y: 0}, {x: 1, y: 2}, {x: 1, y: 2}, {x: 0, y: 1}],
[{x: 2, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}],
[{x: 0, y: 0}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 2, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}, {x: 1, y: 2}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}],
[{x: 1, y: 2}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 1, y: 0}]]
inputs_9.forEach(function (input) {
behaviorSet9(input);
});

function behaviorSet10(input) {
bp.registerBThread(""O_Player_Thread_10_1"", function(){
bp.sync({waitFor:[X(input[5].x, input[5].y)]});
bp.sync({waitFor:[O(input[3].x, input[3].y), O(input[6].x, input[6].y), X(input[2].x, input[2].y), X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[5].x, input[5].y), O(input[7].x, input[7].y)]},6);
});

bp.registerBThread(""O_Player_Thread_10_2"", function(){
bp.sync({request:[O(input[6].x, input[6].y)]},2);
});

bp.registerBThread(""O_Player_Thread_10_3"", function(){
bp.sync({waitFor:[X(input[7].x, input[7].y), O(input[3].x, input[3].y), O(input[6].x, input[6].y), O(input[5].x, input[5].y)]});
bp.sync({waitFor:[O(input[7].x, input[7].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[4].x, input[4].y), O(input[3].x, input[3].y), O(input[6].x, input[6].y), O(input[4].x, input[4].y)]},5);
});

bp.registerBThread(""O_Player_Thread_10_4"", function(){
bp.sync({waitFor:[X(input[4].x, input[4].y)]});
bp.sync({waitFor:[X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[4].x, input[4].y), O(input[7].x, input[7].y), O(input[3].x, input[3].y), O(input[2].x, input[2].y)]},9);
});

bp.registerBThread(""O_Player_Thread_10_5"", function(){
bp.sync({waitFor:[X(input[5].x, input[5].y), O(input[2].x, input[2].y), O(input[6].x, input[6].y)]});
bp.sync({request:[O(input[5].x, input[5].y), O(input[0].x, input[0].y), O(input[7].x, input[7].y)]},1);
});

}
var inputs_10 = [[{x: 1, y: 1}, {x: 0, y: 2}, {x: 1, y: 2}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 2}, {x: 0, y: 1}],
[{x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 1}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 0, y: 1}, {x: 2, y: 2}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 1}],
[{x: 1, y: 0}, {x: 1, y: 0}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}],
[{x: 0, y: 0}, {x: 1, y: 0}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 2, y: 2}, {x: 0, y: 0}],
[{x: 2, y: 1}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 1, y: 2}, {x: 2, y: 1}, {x: 0, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 2, y: 2}, {x: 2, y: 2}],
[{x: 0, y: 1}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 2, y: 0}, {x: 2, y: 2}]]
inputs_10.forEach(function (input) {
behaviorSet10(input);
});

"
5,1.0,5.0,31.741509003875084,13.0,3.0,34.0,73.0,28.0,34.0,0.0,18.0,"function behaviorSet1(input) {
bp.registerBThread(""O_Player_Thread_1_1"", function(){
bp.sync({request:[O(input[2].x, input[2].y), O(input[1].x, input[1].y), O(input[3].x, input[3].y)]},11);
});

bp.registerBThread(""O_Player_Thread_1_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y)]},5);
});

}
var inputs_1 = [[{x: 2, y: 1}, {x: 2, y: 0}, {x: 1, y: 2}, {x: 0, y: 2}],
[{x: 2, y: 2}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}],
[{x: 1, y: 1}, {x: 1, y: 2}, {x: 2, y: 1}, {x: 1, y: 1}],
[{x: 0, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 1, y: 2}],
[{x: 1, y: 0}, {x: 2, y: 2}, {x: 1, y: 2}, {x: 1, y: 2}],
[{x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 0}, {x: 1, y: 2}],
[{x: 1, y: 1}, {x: 1, y: 1}, {x: 0, y: 1}, {x: 1, y: 2}]]
inputs_1.forEach(function (input) {
behaviorSet1(input);
});

function behaviorSet2(input) {
bp.registerBThread(""O_Player_Thread_2_1"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[1].x, input[1].y)]});
bp.sync({waitFor:[X(input[0].x, input[0].y), O(input[1].x, input[1].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},7);
});

}
var inputs_2 = [[{x: 2, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 0}, {x: 2, y: 1}]]
inputs_2.forEach(function (input) {
behaviorSet2(input);
});

function behaviorSet3(input) {
bp.registerBThread(""O_Player_Thread_3_1"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[4].x, input[4].y), O(input[4].x, input[4].y), O(input[4].x, input[4].y)]},2);
});

bp.registerBThread(""O_Player_Thread_3_2"", function(){
bp.sync({waitFor:[X(input[4].x, input[4].y), X(input[0].x, input[0].y)]});
bp.sync({waitFor:[X(input[4].x, input[4].y), X(input[5].x, input[5].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y)]},11);
});

bp.registerBThread(""O_Player_Thread_3_3"", function(){
bp.sync({waitFor:[O(input[1].x, input[1].y), O(input[4].x, input[4].y), O(input[5].x, input[5].y), X(input[2].x, input[2].y)]});
bp.sync({waitFor:[X(input[5].x, input[5].y), X(input[1].x, input[1].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[4].x, input[4].y), O(input[0].x, input[0].y), O(input[5].x, input[5].y), O(input[5].x, input[5].y)]},11);
});

}
var inputs_3 = [[{x: 1, y: 1}, {x: 2, y: 2}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 2, y: 2}, {x: 2, y: 1}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 2, y: 2}, {x: 2, y: 2}],
[{x: 1, y: 2}, {x: 0, y: 1}, {x: 2, y: 2}, {x: 1, y: 0}, {x: 0, y: 2}, {x: 2, y: 2}],
[{x: 1, y: 0}, {x: 1, y: 1}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}],
[{x: 2, y: 1}, {x: 1, y: 2}, {x: 1, y: 0}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 1}, {x: 1, y: 0}, {x: 1, y: 0}, {x: 0, y: 2}, {x: 2, y: 2}, {x: 1, y: 0}]]
inputs_3.forEach(function (input) {
behaviorSet3(input);
});

function behaviorSet4(input) {
bp.registerBThread(""O_Player_Thread_4_1"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), O(input[5].x, input[5].y), X(input[6].x, input[6].y)]});
bp.sync({waitFor:[X(input[2].x, input[2].y), X(input[2].x, input[2].y), O(input[5].x, input[5].y), O(input[6].x, input[6].y)]});
bp.sync({request:[O(input[1].x, input[1].y)]},4);
});

bp.registerBThread(""O_Player_Thread_4_2"", function(){
bp.sync({request:[O(input[8].x, input[8].y)]},1);
});

bp.registerBThread(""O_Player_Thread_4_3"", function(){
bp.sync({waitFor:[X(input[3].x, input[3].y)]});
bp.sync({waitFor:[X(input[7].x, input[7].y), X(input[3].x, input[3].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[7].x, input[7].y), O(input[4].x, input[4].y)]},5);
});

}
var inputs_4 = [[{x: 1, y: 2}, {x: 1, y: 0}, {x: 1, y: 0}, {x: 0, y: 2}, {x: 1, y: 0}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 0}],
[{x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 2, y: 1}, {x: 2, y: 2}]]
inputs_4.forEach(function (input) {
behaviorSet4(input);
});

function behaviorSet5(input) {
bp.registerBThread(""O_Player_Thread_5_1"", function(){
bp.sync({waitFor:[O(input[1].x, input[1].y), X(input[4].x, input[4].y), X(input[5].x, input[5].y), O(input[3].x, input[3].y)]});
bp.sync({waitFor:[O(input[2].x, input[2].y), X(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[4].x, input[4].y)]},10);
});

bp.registerBThread(""O_Player_Thread_5_2"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[4].x, input[4].y), O(input[4].x, input[4].y)]});
bp.sync({waitFor:[X(input[3].x, input[3].y), X(input[5].x, input[5].y), O(input[3].x, input[3].y)]});
bp.sync({request:[O(input[4].x, input[4].y), O(input[3].x, input[3].y)]},4);
});

bp.registerBThread(""O_Player_Thread_5_3"", function(){
bp.sync({waitFor:[X(input[5].x, input[5].y), O(input[5].x, input[5].y), X(input[3].x, input[3].y), X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[4].x, input[4].y), O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_5_4"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y), O(input[1].x, input[1].y), X(input[0].x, input[0].y)]});
bp.sync({waitFor:[X(input[4].x, input[4].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[5].x, input[5].y)]},10);
});

bp.registerBThread(""O_Player_Thread_5_5"", function(){
bp.sync({request:[O(input[0].x, input[0].y)]},8);
});

}
var inputs_5 = [[{x: 2, y: 2}, {x: 1, y: 0}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 0, y: 2}],
[{x: 0, y: 0}, {x: 1, y: 0}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 1, y: 2}, {x: 0, y: 2}],
[{x: 2, y: 2}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 2}],
[{x: 2, y: 0}, {x: 1, y: 1}, {x: 2, y: 2}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 0, y: 2}],
[{x: 2, y: 1}, {x: 2, y: 2}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 1, y: 0}],
[{x: 2, y: 2}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 2}],
[{x: 2, y: 1}, {x: 2, y: 2}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 2, y: 1}]]
inputs_5.forEach(function (input) {
behaviorSet5(input);
});

function behaviorSet6(input) {
bp.registerBThread(""O_Player_Thread_6_1"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y), X(input[0].x, input[0].y), O(input[1].x, input[1].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y)]},9);
});

bp.registerBThread(""O_Player_Thread_6_2"", function(){
bp.sync({waitFor:[O(input[1].x, input[1].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},9);
});

bp.registerBThread(""O_Player_Thread_6_3"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[2].x, input[2].y), X(input[0].x, input[0].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[2].x, input[2].y)]},6);
});

bp.registerBThread(""O_Player_Thread_6_4"", function(){
bp.sync({request:[O(input[2].x, input[2].y), O(input[1].x, input[1].y)]},2);
});

}
var inputs_6 = [[{x: 0, y: 1}, {x: 2, y: 2}, {x: 0, y: 2}],
[{x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}],
[{x: 2, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}],
[{x: 2, y: 2}, {x: 0, y: 1}, {x: 2, y: 0}],
[{x: 2, y: 2}, {x: 0, y: 1}, {x: 1, y: 2}],
[{x: 1, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}],
[{x: 1, y: 2}, {x: 0, y: 1}, {x: 0, y: 2}],
[{x: 0, y: 1}, {x: 1, y: 0}, {x: 2, y: 1}]]
inputs_6.forEach(function (input) {
behaviorSet6(input);
});

function behaviorSet7(input) {
bp.registerBThread(""O_Player_Thread_7_1"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y), X(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[2].x, input[2].y), X(input[1].x, input[1].y), O(input[3].x, input[3].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},5);
});

bp.registerBThread(""O_Player_Thread_7_2"", function(){
bp.sync({request:[O(input[3].x, input[3].y), O(input[2].x, input[2].y)]},4);
});

bp.registerBThread(""O_Player_Thread_7_3"", function(){
bp.sync({waitFor:[O(input[4].x, input[4].y), X(input[2].x, input[2].y), O(input[4].x, input[4].y), X(input[0].x, input[0].y)]});
bp.sync({waitFor:[O(input[1].x, input[1].y), X(input[3].x, input[3].y), O(input[2].x, input[2].y), X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[2].x, input[2].y)]},11);
});

bp.registerBThread(""O_Player_Thread_7_4"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[0].x, input[0].y), O(input[1].x, input[1].y), O(input[1].x, input[1].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[4].x, input[4].y)]},11);
});

bp.registerBThread(""O_Player_Thread_7_5"", function(){
bp.sync({request:[O(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[1].x, input[1].y), O(input[1].x, input[1].y)]},1);
});

}
var inputs_7 = [[{x: 1, y: 2}, {x: 0, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 2, y: 1}]]
inputs_7.forEach(function (input) {
behaviorSet7(input);
});

function behaviorSet8(input) {
bp.registerBThread(""O_Player_Thread_8_1"", function(){
bp.sync({request:[O(input[3].x, input[3].y), O(input[0].x, input[0].y)]},11);
});

bp.registerBThread(""O_Player_Thread_8_2"", function(){
bp.sync({request:[O(input[2].x, input[2].y), O(input[7].x, input[7].y), O(input[1].x, input[1].y)]},9);
});

bp.registerBThread(""O_Player_Thread_8_3"", function(){
bp.sync({request:[O(input[2].x, input[2].y), O(input[6].x, input[6].y)]},8);
});

bp.registerBThread(""O_Player_Thread_8_4"", function(){
bp.sync({waitFor:[O(input[7].x, input[7].y), X(input[7].x, input[7].y), X(input[0].x, input[0].y), O(input[5].x, input[5].y)]});
bp.sync({waitFor:[O(input[6].x, input[6].y)]});
bp.sync({request:[O(input[5].x, input[5].y), O(input[3].x, input[3].y), O(input[5].x, input[5].y)]},4);
});

bp.registerBThread(""O_Player_Thread_8_5"", function(){
bp.sync({waitFor:[O(input[4].x, input[4].y), X(input[3].x, input[3].y), X(input[4].x, input[4].y)]});
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[1].x, input[1].y), O(input[5].x, input[5].y)]});
bp.sync({request:[O(input[7].x, input[7].y), O(input[4].x, input[4].y)]},10);
});

}
var inputs_8 = [[{x: 2, y: 0}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 1, y: 0}],
[{x: 2, y: 2}, {x: 1, y: 2}, {x: 0, y: 2}, {x: 1, y: 2}, {x: 1, y: 2}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 0, y: 1}]]
inputs_8.forEach(function (input) {
behaviorSet8(input);
});

function behaviorSet9(input) {
bp.registerBThread(""O_Player_Thread_9_1"", function(){
bp.sync({waitFor:[O(input[3].x, input[3].y), X(input[1].x, input[1].y), X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[1].x, input[1].y)]},4);
});

bp.registerBThread(""O_Player_Thread_9_2"", function(){
bp.sync({waitFor:[O(input[3].x, input[3].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[4].x, input[4].y), O(input[0].x, input[0].y)]},6);
});

bp.registerBThread(""O_Player_Thread_9_3"", function(){
bp.sync({request:[O(input[1].x, input[1].y)]},6);
});

bp.registerBThread(""O_Player_Thread_9_4"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), O(input[4].x, input[4].y), O(input[3].x, input[3].y)]});
bp.sync({waitFor:[O(input[4].x, input[4].y), X(input[1].x, input[1].y), X(input[3].x, input[3].y)]});
bp.sync({request:[O(input[4].x, input[4].y), O(input[0].x, input[0].y)]},4);
});

}
var inputs_9 = [[{x: 0, y: 2}, {x: 2, y: 1}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 2, y: 1}],
[{x: 0, y: 1}, {x: 1, y: 1}, {x: 2, y: 2}, {x: 0, y: 1}, {x: 2, y: 2}]]
inputs_9.forEach(function (input) {
behaviorSet9(input);
});

function behaviorSet10(input) {
bp.registerBThread(""O_Player_Thread_10_1"", function(){
bp.sync({waitFor:[O(input[1].x, input[1].y), X(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[1].x, input[1].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},10);
});

bp.registerBThread(""O_Player_Thread_10_2"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},11);
});

bp.registerBThread(""O_Player_Thread_10_3"", function(){
bp.sync({request:[O(input[0].x, input[0].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y)]},10);
});

}
var inputs_10 = [[{x: 1, y: 0}, {x: 0, y: 0}],
[{x: 1, y: 2}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 0, y: 0}],
[{x: 2, y: 0}, {x: 1, y: 2}],
[{x: 2, y: 1}, {x: 1, y: 1}],
[{x: 1, y: 1}, {x: 1, y: 1}],
[{x: 1, y: 1}, {x: 2, y: 2}],
[{x: 0, y: 2}, {x: 2, y: 0}]]
inputs_10.forEach(function (input) {
behaviorSet10(input);
});

"
6,1.0,3.0,34.34633027522936,12.0,4.0,34.0,75.0,20.0,34.0,0.0,19.0,"function behaviorSet1(input) {
bp.registerBThread(""O_Player_Thread_1_1"", function(){
bp.sync({waitFor:[O(input[7].x, input[7].y), O(input[6].x, input[6].y), O(input[7].x, input[7].y), O(input[6].x, input[6].y)]});
bp.sync({waitFor:[X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y)]},4);
});

bp.registerBThread(""O_Player_Thread_1_2"", function(){
bp.sync({waitFor:[X(input[4].x, input[4].y), X(input[0].x, input[0].y), O(input[7].x, input[7].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[4].x, input[4].y), O(input[4].x, input[4].y)]},1);
});

bp.registerBThread(""O_Player_Thread_1_3"", function(){
bp.sync({waitFor:[O(input[1].x, input[1].y)]});
bp.sync({waitFor:[X(input[7].x, input[7].y)]});
bp.sync({request:[O(input[7].x, input[7].y), O(input[7].x, input[7].y), O(input[1].x, input[1].y)]},1);
});

}
var inputs_1 = [[{x: 2, y: 0}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 1, y: 2}, {x: 1, y: 0}, {x: 1, y: 2}],
[{x: 0, y: 2}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 1, y: 0}, {x: 0, y: 2}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 2}],
[{x: 0, y: 1}, {x: 1, y: 0}, {x: 1, y: 0}, {x: 2, y: 0}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 1, y: 0}],
[{x: 2, y: 2}, {x: 0, y: 0}, {x: 0, y: 1}, {x: 2, y: 0}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 1, y: 0}, {x: 0, y: 2}],
[{x: 0, y: 1}, {x: 2, y: 0}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 2, y: 2}, {x: 0, y: 0}, {x: 0, y: 1}, {x: 1, y: 1}],
[{x: 0, y: 2}, {x: 2, y: 0}, {x: 1, y: 2}, {x: 0, y: 0}, {x: 0, y: 0}, {x: 0, y: 0}, {x: 0, y: 0}, {x: 0, y: 1}],
[{x: 0, y: 1}, {x: 2, y: 2}, {x: 1, y: 2}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 1, y: 2}, {x: 2, y: 2}, {x: 2, y: 2}]]
inputs_1.forEach(function (input) {
behaviorSet1(input);
});

function behaviorSet2(input) {
bp.registerBThread(""O_Player_Thread_2_1"", function(){
bp.sync({waitFor:[O(input[5].x, input[5].y), O(input[5].x, input[5].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[6].x, input[6].y), O(input[0].x, input[0].y)]},5);
});

bp.registerBThread(""O_Player_Thread_2_2"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y), O(input[5].x, input[5].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},10);
});

bp.registerBThread(""O_Player_Thread_2_3"", function(){
bp.sync({waitFor:[O(input[3].x, input[3].y), X(input[3].x, input[3].y), X(input[3].x, input[3].y), X(input[4].x, input[4].y)]});
bp.sync({waitFor:[X(input[5].x, input[5].y), X(input[4].x, input[4].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},9);
});

}
var inputs_2 = [[{x: 1, y: 1}, {x: 2, y: 2}, {x: 0, y: 2}, {x: 2, y: 2}, {x: 1, y: 0}, {x: 2, y: 2}, {x: 2, y: 2}],
[{x: 0, y: 1}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}],
[{x: 2, y: 0}, {x: 0, y: 0}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 0, y: 2}, {x: 0, y: 2}]]
inputs_2.forEach(function (input) {
behaviorSet2(input);
});

function behaviorSet3(input) {
bp.registerBThread(""O_Player_Thread_3_1"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y), X(input[0].x, input[0].y), X(input[4].x, input[4].y)]});
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[1].x, input[1].y)]});
bp.sync({request:[O(input[2].x, input[2].y)]},9);
});

bp.registerBThread(""O_Player_Thread_3_2"", function(){
bp.sync({waitFor:[O(input[1].x, input[1].y)]});
bp.sync({waitFor:[X(input[4].x, input[4].y)]});
bp.sync({request:[O(input[4].x, input[4].y)]},1);
});

bp.registerBThread(""O_Player_Thread_3_3"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[4].x, input[4].y)]});
bp.sync({waitFor:[X(input[3].x, input[3].y)]});
bp.sync({request:[O(input[1].x, input[1].y)]},9);
});

bp.registerBThread(""O_Player_Thread_3_4"", function(){
bp.sync({waitFor:[O(input[4].x, input[4].y), O(input[1].x, input[1].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[1].x, input[1].y), O(input[4].x, input[4].y)]},5);
});

bp.registerBThread(""O_Player_Thread_3_5"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[3].x, input[3].y), O(input[1].x, input[1].y)]},3);
});

}
var inputs_3 = [[{x: 2, y: 1}, {x: 0, y: 2}, {x: 2, y: 2}, {x: 0, y: 0}, {x: 2, y: 0}],
[{x: 2, y: 2}, {x: 1, y: 0}, {x: 2, y: 1}, {x: 1, y: 2}, {x: 2, y: 2}],
[{x: 0, y: 0}, {x: 2, y: 2}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 0, y: 1}],
[{x: 0, y: 1}, {x: 2, y: 0}, {x: 0, y: 2}, {x: 2, y: 2}, {x: 0, y: 0}],
[{x: 1, y: 2}, {x: 2, y: 2}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 0, y: 2}],
[{x: 0, y: 0}, {x: 0, y: 2}, {x: 1, y: 2}, {x: 1, y: 2}, {x: 0, y: 0}],
[{x: 0, y: 1}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 0, y: 1}]]
inputs_3.forEach(function (input) {
behaviorSet3(input);
});

function behaviorSet4(input) {
bp.registerBThread(""O_Player_Thread_4_1"", function(){
bp.sync({request:[O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},4);
});

bp.registerBThread(""O_Player_Thread_4_2"", function(){
bp.sync({request:[O(input[3].x, input[3].y), O(input[1].x, input[1].y), O(input[3].x, input[3].y), O(input[2].x, input[2].y)]},9);
});

}
var inputs_4 = [[{x: 0, y: 0}, {x: 1, y: 0}, {x: 2, y: 0}, {x: 1, y: 2}],
[{x: 0, y: 1}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 0, y: 0}],
[{x: 1, y: 2}, {x: 1, y: 0}, {x: 0, y: 2}, {x: 0, y: 2}],
[{x: 0, y: 2}, {x: 1, y: 1}, {x: 0, y: 1}, {x: 1, y: 2}],
[{x: 1, y: 2}, {x: 1, y: 1}, {x: 0, y: 1}, {x: 1, y: 2}],
[{x: 1, y: 0}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 0, y: 1}],
[{x: 2, y: 0}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}],
[{x: 1, y: 1}, {x: 2, y: 2}, {x: 1, y: 2}, {x: 1, y: 2}],
[{x: 0, y: 1}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 0, y: 0}]]
inputs_4.forEach(function (input) {
behaviorSet4(input);
});

function behaviorSet5(input) {
bp.registerBThread(""O_Player_Thread_5_1"", function(){
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},4);
});

bp.registerBThread(""O_Player_Thread_5_2"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y), X(input[0].x, input[0].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},9);
});

}
var inputs_5 = [[{x: 1, y: 1}, {x: 1, y: 1}, {x: 2, y: 2}],
[{x: 2, y: 1}, {x: 2, y: 0}, {x: 2, y: 2}],
[{x: 0, y: 0}, {x: 1, y: 2}, {x: 1, y: 1}],
[{x: 0, y: 0}, {x: 2, y: 0}, {x: 0, y: 1}],
[{x: 1, y: 2}, {x: 2, y: 1}, {x: 0, y: 0}]]
inputs_5.forEach(function (input) {
behaviorSet5(input);
});

function behaviorSet6(input) {
bp.registerBThread(""O_Player_Thread_6_1"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y)]},5);
});

bp.registerBThread(""O_Player_Thread_6_2"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},1);
});

}
var inputs_6 = [[{x: 1, y: 1}, {x: 1, y: 0}],
[{x: 2, y: 0}, {x: 0, y: 0}],
[{x: 0, y: 2}, {x: 1, y: 0}],
[{x: 2, y: 1}, {x: 0, y: 2}],
[{x: 2, y: 0}, {x: 2, y: 2}],
[{x: 0, y: 2}, {x: 0, y: 2}],
[{x: 0, y: 1}, {x: 1, y: 1}],
[{x: 0, y: 1}, {x: 1, y: 0}],
[{x: 1, y: 1}, {x: 0, y: 1}]]
inputs_6.forEach(function (input) {
behaviorSet6(input);
});

function behaviorSet7(input) {
bp.registerBThread(""O_Player_Thread_7_1"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), O(input[8].x, input[8].y)]});
bp.sync({waitFor:[O(input[4].x, input[4].y), O(input[4].x, input[4].y), O(input[6].x, input[6].y)]});
bp.sync({request:[O(input[7].x, input[7].y), O(input[2].x, input[2].y), O(input[5].x, input[5].y), O(input[7].x, input[7].y)]},1);
});

bp.registerBThread(""O_Player_Thread_7_2"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y), O(input[7].x, input[7].y)]});
bp.sync({waitFor:[X(input[4].x, input[4].y), X(input[8].x, input[8].y)]});
bp.sync({request:[O(input[5].x, input[5].y), O(input[3].x, input[3].y), O(input[7].x, input[7].y)]},10);
});

}
var inputs_7 = [[{x: 1, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 0, y: 1}, {x: 1, y: 1}, {x: 0, y: 2}, {x: 1, y: 1}]]
inputs_7.forEach(function (input) {
behaviorSet7(input);
});

function behaviorSet8(input) {
bp.registerBThread(""O_Player_Thread_8_1"", function(){
bp.sync({waitFor:[X(input[3].x, input[3].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y), X(input[1].x, input[1].y)]});
bp.sync({waitFor:[O(input[2].x, input[2].y), X(input[2].x, input[2].y), X(input[2].x, input[2].y), X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[1].x, input[1].y)]},4);
});

bp.registerBThread(""O_Player_Thread_8_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y)]},8);
});

bp.registerBThread(""O_Player_Thread_8_3"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[3].x, input[3].y)]},6);
});

}
var inputs_8 = [[{x: 1, y: 0}, {x: 1, y: 1}, {x: 2, y: 1}, {x: 1, y: 1}],
[{x: 1, y: 2}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 0, y: 0}],
[{x: 0, y: 2}, {x: 1, y: 2}, {x: 2, y: 1}, {x: 0, y: 0}],
[{x: 0, y: 0}, {x: 1, y: 0}, {x: 0, y: 2}, {x: 2, y: 2}],
[{x: 2, y: 2}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 0, y: 0}]]
inputs_8.forEach(function (input) {
behaviorSet8(input);
});

function behaviorSet9(input) {
bp.registerBThread(""O_Player_Thread_9_1"", function(){
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[1].x, input[1].y), O(input[1].x, input[1].y)]},2);
});

}
var inputs_9 = [[{x: 2, y: 2}, {x: 0, y: 2}],
[{x: 1, y: 1}, {x: 1, y: 0}],
[{x: 2, y: 2}, {x: 0, y: 2}]]
inputs_9.forEach(function (input) {
behaviorSet9(input);
});

function behaviorSet10(input) {
bp.registerBThread(""O_Player_Thread_10_1"", function(){
bp.sync({request:[O(input[2].x, input[2].y), O(input[4].x, input[4].y), O(input[3].x, input[3].y), O(input[6].x, input[6].y)]},8);
});

bp.registerBThread(""O_Player_Thread_10_2"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), O(input[5].x, input[5].y), O(input[6].x, input[6].y)]});
bp.sync({request:[O(input[5].x, input[5].y), O(input[6].x, input[6].y), O(input[4].x, input[4].y)]},5);
});

bp.registerBThread(""O_Player_Thread_10_3"", function(){
bp.sync({waitFor:[X(input[6].x, input[6].y), X(input[5].x, input[5].y), O(input[1].x, input[1].y)]});
bp.sync({request:[O(input[1].x, input[1].y)]},7);
});

bp.registerBThread(""O_Player_Thread_10_4"", function(){
bp.sync({waitFor:[O(input[5].x, input[5].y), X(input[3].x, input[3].y), O(input[1].x, input[1].y)]});
bp.sync({waitFor:[O(input[5].x, input[5].y), X(input[1].x, input[1].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[4].x, input[4].y), O(input[1].x, input[1].y), O(input[5].x, input[5].y)]},1);
});

}
var inputs_10 = [[{x: 0, y: 0}, {x: 0, y: 0}, {x: 2, y: 2}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 0, y: 1}, {x: 2, y: 2}],
[{x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 1}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 1, y: 1}, {x: 0, y: 2}, {x: 2, y: 2}],
[{x: 2, y: 0}, {x: 0, y: 2}, {x: 1, y: 0}, {x: 0, y: 1}, {x: 1, y: 2}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 1, y: 0}],
[{x: 0, y: 2}, {x: 0, y: 2}, {x: 1, y: 2}, {x: 0, y: 2}, {x: 1, y: 1}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 0, y: 1}]]
inputs_10.forEach(function (input) {
behaviorSet10(input);
});

"
7,1.0,4.0,29.711375212224105,7.0,12.0,31.0,72.0,24.0,42.0,0.0,21.0,"function behaviorSet1(input) {
bp.registerBThread(""O_Player_Thread_1_1"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[1].x, input[1].y)]},9);
});

bp.registerBThread(""O_Player_Thread_1_2"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[2].x, input[2].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[1].x, input[1].y)]},11);
});

bp.registerBThread(""O_Player_Thread_1_3"", function(){
bp.sync({request:[O(input[1].x, input[1].y)]},9);
});

}
var inputs_1 = [[{x: 0, y: 1}, {x: 2, y: 2}, {x: 2, y: 1}],
[{x: 0, y: 0}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 2}, {x: 1, y: 1}, {x: 0, y: 0}],
[{x: 0, y: 2}, {x: 1, y: 2}, {x: 2, y: 1}],
[{x: 1, y: 2}, {x: 0, y: 2}, {x: 2, y: 2}],
[{x: 1, y: 2}, {x: 0, y: 2}, {x: 1, y: 1}],
[{x: 2, y: 2}, {x: 0, y: 0}, {x: 0, y: 0}],
[{x: 0, y: 2}, {x: 1, y: 0}, {x: 1, y: 2}],
[{x: 1, y: 1}, {x: 1, y: 2}, {x: 1, y: 0}]]
inputs_1.forEach(function (input) {
behaviorSet1(input);
});

function behaviorSet2(input) {
bp.registerBThread(""O_Player_Thread_2_1"", function(){
bp.sync({waitFor:[O(input[3].x, input[3].y), O(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({waitFor:[O(input[2].x, input[2].y), O(input[1].x, input[1].y), O(input[2].x, input[2].y), X(input[5].x, input[5].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[4].x, input[4].y)]},3);
});

bp.registerBThread(""O_Player_Thread_2_2"", function(){
bp.sync({waitFor:[O(input[4].x, input[4].y), X(input[2].x, input[2].y), X(input[3].x, input[3].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[0].x, input[0].y), O(input[4].x, input[4].y), O(input[0].x, input[0].y)]},1);
});

bp.registerBThread(""O_Player_Thread_2_3"", function(){
bp.sync({waitFor:[X(input[3].x, input[3].y)]});
bp.sync({waitFor:[O(input[5].x, input[5].y), O(input[2].x, input[2].y), X(input[3].x, input[3].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[3].x, input[3].y)]},8);
});

}
var inputs_2 = [[{x: 2, y: 1}, {x: 0, y: 1}, {x: 1, y: 0}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 0, y: 0}]]
inputs_2.forEach(function (input) {
behaviorSet2(input);
});

function behaviorSet3(input) {
bp.registerBThread(""O_Player_Thread_3_1"", function(){
bp.sync({request:[O(input[2].x, input[2].y), O(input[2].x, input[2].y), O(input[4].x, input[4].y)]},5);
});

bp.registerBThread(""O_Player_Thread_3_2"", function(){
bp.sync({waitFor:[O(input[4].x, input[4].y), O(input[3].x, input[3].y), O(input[3].x, input[3].y)]});
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[4].x, input[4].y)]},2);
});

bp.registerBThread(""O_Player_Thread_3_3"", function(){
bp.sync({waitFor:[O(input[4].x, input[4].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_3_4"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y), O(input[0].x, input[0].y)]});
bp.sync({waitFor:[O(input[5].x, input[5].y), X(input[2].x, input[2].y), O(input[3].x, input[3].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[1].x, input[1].y), O(input[3].x, input[3].y), O(input[5].x, input[5].y)]},10);
});

}
var inputs_3 = [[{x: 1, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}, {x: 1, y: 0}, {x: 2, y: 1}, {x: 2, y: 1}],
[{x: 1, y: 2}, {x: 1, y: 0}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 2, y: 1}, {x: 1, y: 0}],
[{x: 2, y: 0}, {x: 1, y: 2}, {x: 0, y: 1}, {x: 1, y: 2}, {x: 2, y: 2}, {x: 2, y: 0}],
[{x: 2, y: 0}, {x: 2, y: 1}, {x: 0, y: 2}, {x: 2, y: 2}, {x: 2, y: 1}, {x: 1, y: 1}],
[{x: 1, y: 0}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 2, y: 2}, {x: 1, y: 1}, {x: 1, y: 0}],
[{x: 2, y: 0}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}, {x: 0, y: 2}, {x: 1, y: 1}],
[{x: 1, y: 2}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 1, y: 0}, {x: 2, y: 2}, {x: 1, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 0}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}, {x: 1, y: 1}],
[{x: 1, y: 0}, {x: 1, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}, {x: 1, y: 2}]]
inputs_3.forEach(function (input) {
behaviorSet3(input);
});

function behaviorSet4(input) {
bp.registerBThread(""O_Player_Thread_4_1"", function(){
bp.sync({request:[O(input[5].x, input[5].y), O(input[5].x, input[5].y), O(input[6].x, input[6].y)]},4);
});

}
var inputs_4 = [[{x: 2, y: 1}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 2, y: 0}, {x: 1, y: 1}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 0, y: 1}, {x: 1, y: 1}],
[{x: 1, y: 0}, {x: 2, y: 1}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 2}, {x: 2, y: 2}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 2, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 2, y: 0}],
[{x: 1, y: 1}, {x: 0, y: 1}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 1, y: 2}, {x: 0, y: 0}, {x: 0, y: 0}, {x: 0, y: 1}],
[{x: 2, y: 2}, {x: 1, y: 2}, {x: 0, y: 1}, {x: 0, y: 2}, {x: 0, y: 2}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 0, y: 0}, {x: 0, y: 2}],
[{x: 0, y: 2}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 0, y: 0}, {x: 0, y: 0}, {x: 0, y: 0}, {x: 0, y: 1}, {x: 2, y: 0}, {x: 0, y: 0}],
[{x: 1, y: 1}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 1, y: 2}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 2, y: 2}, {x: 1, y: 2}, {x: 2, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 2}, {x: 1, y: 0}, {x: 2, y: 0}, {x: 2, y: 0}, {x: 0, y: 2}, {x: 1, y: 1}, {x: 0, y: 1}, {x: 0, y: 2}]]
inputs_4.forEach(function (input) {
behaviorSet4(input);
});

function behaviorSet5(input) {
bp.registerBThread(""O_Player_Thread_5_1"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[5].x, input[5].y)]});
bp.sync({waitFor:[O(input[1].x, input[1].y), X(input[0].x, input[0].y), X(input[8].x, input[8].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[5].x, input[5].y), O(input[8].x, input[8].y), O(input[1].x, input[1].y)]},11);
});

bp.registerBThread(""O_Player_Thread_5_2"", function(){
bp.sync({waitFor:[X(input[4].x, input[4].y), O(input[5].x, input[5].y), O(input[8].x, input[8].y)]});
bp.sync({waitFor:[X(input[2].x, input[2].y), X(input[0].x, input[0].y), O(input[7].x, input[7].y)]});
bp.sync({request:[O(input[6].x, input[6].y), O(input[0].x, input[0].y), O(input[6].x, input[6].y), O(input[3].x, input[3].y)]},7);
});

}
var inputs_5 = [[{x: 2, y: 2}, {x: 2, y: 2}, {x: 0, y: 1}, {x: 1, y: 1}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 1}],
[{x: 2, y: 0}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 0, y: 2}, {x: 1, y: 2}, {x: 1, y: 1}, {x: 1, y: 0}, {x: 0, y: 1}, {x: 2, y: 2}],
[{x: 0, y: 0}, {x: 1, y: 0}, {x: 0, y: 2}, {x: 1, y: 2}, {x: 2, y: 2}, {x: 1, y: 2}, {x: 2, y: 2}, {x: 1, y: 2}, {x: 1, y: 1}],
[{x: 0, y: 1}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 0, y: 0}, {x: 2, y: 2}, {x: 0, y: 1}, {x: 2, y: 0}, {x: 0, y: 0}],
[{x: 1, y: 2}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 1, y: 2}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 1, y: 1}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 2}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 2, y: 2}],
[{x: 0, y: 1}, {x: 1, y: 0}, {x: 1, y: 0}, {x: 2, y: 1}, {x: 0, y: 1}, {x: 2, y: 0}, {x: 0, y: 0}, {x: 1, y: 2}, {x: 2, y: 1}],
[{x: 2, y: 1}, {x: 0, y: 0}, {x: 2, y: 0}, {x: 2, y: 0}, {x: 1, y: 1}, {x: 1, y: 0}, {x: 2, y: 2}, {x: 0, y: 2}, {x: 1, y: 0}],
[{x: 1, y: 0}, {x: 1, y: 2}, {x: 2, y: 2}, {x: 0, y: 2}, {x: 2, y: 2}, {x: 0, y: 0}, {x: 1, y: 2}, {x: 1, y: 1}, {x: 1, y: 1}]]
inputs_5.forEach(function (input) {
behaviorSet5(input);
});

function behaviorSet6(input) {
bp.registerBThread(""O_Player_Thread_6_1"", function(){
bp.sync({request:[O(input[6].x, input[6].y), O(input[2].x, input[2].y), O(input[6].x, input[6].y), O(input[1].x, input[1].y)]},1);
});

}
var inputs_6 = [[{x: 2, y: 0}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 1, y: 0}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 1, y: 2}],
[{x: 0, y: 1}, {x: 2, y: 1}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 2, y: 0}, {x: 2, y: 0}, {x: 0, y: 0}, {x: 2, y: 0}],
[{x: 2, y: 1}, {x: 1, y: 1}, {x: 2, y: 2}, {x: 2, y: 1}, {x: 0, y: 2}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 1, y: 0}],
[{x: 1, y: 0}, {x: 0, y: 1}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 1, y: 0}, {x: 1, y: 0}, {x: 2, y: 2}, {x: 2, y: 1}],
[{x: 2, y: 1}, {x: 0, y: 2}, {x: 1, y: 2}, {x: 1, y: 1}, {x: 2, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 2, y: 2}],
[{x: 2, y: 1}, {x: 0, y: 1}, {x: 0, y: 2}, {x: 1, y: 0}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 0, y: 1}, {x: 0, y: 0}],
[{x: 2, y: 2}, {x: 0, y: 2}, {x: 0, y: 2}, {x: 1, y: 1}, {x: 0, y: 1}, {x: 2, y: 0}, {x: 0, y: 0}, {x: 1, y: 0}],
[{x: 0, y: 1}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 2, y: 0}]]
inputs_6.forEach(function (input) {
behaviorSet6(input);
});

function behaviorSet7(input) {
bp.registerBThread(""O_Player_Thread_7_1"", function(){
bp.sync({request:[O(input[3].x, input[3].y), O(input[2].x, input[2].y)]},9);
});

}
var inputs_7 = [[{x: 0, y: 2}, {x: 2, y: 1}, {x: 1, y: 2}, {x: 2, y: 1}],
[{x: 1, y: 2}, {x: 1, y: 0}, {x: 2, y: 0}, {x: 2, y: 1}],
[{x: 2, y: 0}, {x: 2, y: 2}, {x: 1, y: 0}, {x: 0, y: 2}],
[{x: 2, y: 1}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}],
[{x: 0, y: 0}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 1, y: 2}],
[{x: 1, y: 1}, {x: 1, y: 0}, {x: 1, y: 0}, {x: 2, y: 0}],
[{x: 2, y: 2}, {x: 1, y: 0}, {x: 2, y: 2}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 1, y: 2}, {x: 2, y: 1}, {x: 1, y: 1}],
[{x: 0, y: 2}, {x: 0, y: 2}, {x: 1, y: 1}, {x: 0, y: 2}]]
inputs_7.forEach(function (input) {
behaviorSet7(input);
});

function behaviorSet8(input) {
bp.registerBThread(""O_Player_Thread_8_1"", function(){
bp.sync({request:[O(input[0].x, input[0].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},9);
});

}
var inputs_8 = [[{x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 2, y: 1}, {x: 2, y: 1}],
[{x: 0, y: 0}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}]]
inputs_8.forEach(function (input) {
behaviorSet8(input);
});

function behaviorSet9(input) {
bp.registerBThread(""O_Player_Thread_9_1"", function(){
bp.sync({waitFor:[O(input[7].x, input[7].y), O(input[5].x, input[5].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[8].x, input[8].y), O(input[1].x, input[1].y)]},2);
});

}
var inputs_9 = [[{x: 2, y: 2}, {x: 0, y: 1}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 2}, {x: 1, y: 2}, {x: 1, y: 1}, {x: 2, y: 0}],
[{x: 2, y: 1}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 0, y: 1}, {x: 2, y: 2}, {x: 1, y: 2}, {x: 0, y: 1}, {x: 1, y: 1}, {x: 1, y: 2}]]
inputs_9.forEach(function (input) {
behaviorSet9(input);
});

function behaviorSet10(input) {
bp.registerBThread(""O_Player_Thread_10_1"", function(){
bp.sync({waitFor:[X(input[3].x, input[3].y), X(input[4].x, input[4].y)]});
bp.sync({request:[O(input[2].x, input[2].y)]},10);
});

bp.registerBThread(""O_Player_Thread_10_2"", function(){
bp.sync({waitFor:[X(input[8].x, input[8].y), X(input[0].x, input[0].y), O(input[5].x, input[5].y)]});
bp.sync({request:[O(input[8].x, input[8].y), O(input[0].x, input[0].y), O(input[1].x, input[1].y), O(input[6].x, input[6].y)]},4);
});

bp.registerBThread(""O_Player_Thread_10_3"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y), O(input[8].x, input[8].y), O(input[3].x, input[3].y), O(input[1].x, input[1].y)]});
bp.sync({waitFor:[X(input[5].x, input[5].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[6].x, input[6].y), O(input[1].x, input[1].y)]},2);
});

bp.registerBThread(""O_Player_Thread_10_4"", function(){
bp.sync({request:[O(input[6].x, input[6].y), O(input[7].x, input[7].y)]},9);
});

bp.registerBThread(""O_Player_Thread_10_5"", function(){
bp.sync({waitFor:[O(input[7].x, input[7].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[4].x, input[4].y)]});
bp.sync({request:[O(input[6].x, input[6].y), O(input[5].x, input[5].y)]},5);
});

}
var inputs_10 = [[{x: 0, y: 2}, {x: 0, y: 1}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 1, y: 0}, {x: 0, y: 1}, {x: 1, y: 0}, {x: 0, y: 1}, {x: 1, y: 1}],
[{x: 2, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 1}, {x: 0, y: 2}, {x: 1, y: 0}, {x: 2, y: 2}, {x: 0, y: 2}, {x: 0, y: 2}],
[{x: 2, y: 0}, {x: 2, y: 0}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 0}],
[{x: 1, y: 1}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 1, y: 0}, {x: 2, y: 1}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 2, y: 0}],
[{x: 0, y: 0}, {x: 1, y: 1}, {x: 2, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 1}, {x: 0, y: 2}],
[{x: 0, y: 0}, {x: 2, y: 0}, {x: 1, y: 1}, {x: 0, y: 2}, {x: 1, y: 0}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 0, y: 2}, {x: 1, y: 2}],
[{x: 1, y: 1}, {x: 2, y: 1}, {x: 0, y: 1}, {x: 1, y: 2}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 0, y: 0}, {x: 2, y: 2}]]
inputs_10.forEach(function (input) {
behaviorSet10(input);
});

"
8,1.0,6.0,37.62534670364839,15.0,8.0,27.0,65.0,28.0,44.0,0.0,23.0,"function behaviorSet1(input) {
bp.registerBThread(""O_Player_Thread_1_1"", function(){
bp.sync({waitFor:[O(input[7].x, input[7].y), O(input[7].x, input[7].y)]});
bp.sync({waitFor:[X(input[5].x, input[5].y), O(input[8].x, input[8].y)]});
bp.sync({request:[O(input[6].x, input[6].y), O(input[3].x, input[3].y), O(input[1].x, input[1].y)]},2);
});

bp.registerBThread(""O_Player_Thread_1_2"", function(){
bp.sync({waitFor:[X(input[4].x, input[4].y), X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[7].x, input[7].y), O(input[6].x, input[6].y)]},5);
});

bp.registerBThread(""O_Player_Thread_1_3"", function(){
bp.sync({waitFor:[X(input[6].x, input[6].y), X(input[3].x, input[3].y), O(input[6].x, input[6].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[8].x, input[8].y)]},3);
});

bp.registerBThread(""O_Player_Thread_1_4"", function(){
bp.sync({request:[O(input[0].x, input[0].y), O(input[2].x, input[2].y)]},1);
});

bp.registerBThread(""O_Player_Thread_1_5"", function(){
bp.sync({request:[O(input[4].x, input[4].y), O(input[0].x, input[0].y), O(input[3].x, input[3].y)]},6);
});

}
var inputs_1 = [[{x: 2, y: 1}, {x: 2, y: 1}, {x: 1, y: 0}, {x: 2, y: 0}, {x: 0, y: 0}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 1, y: 2}, {x: 1, y: 1}],
[{x: 1, y: 1}, {x: 0, y: 2}, {x: 1, y: 1}, {x: 0, y: 1}, {x: 0, y: 2}, {x: 1, y: 1}, {x: 0, y: 1}, {x: 1, y: 0}, {x: 1, y: 0}]]
inputs_1.forEach(function (input) {
behaviorSet1(input);
});

function behaviorSet2(input) {
bp.registerBThread(""O_Player_Thread_2_1"", function(){
bp.sync({request:[O(input[2].x, input[2].y), O(input[1].x, input[1].y)]},3);
});

bp.registerBThread(""O_Player_Thread_2_2"", function(){
bp.sync({waitFor:[X(input[6].x, input[6].y)]});
bp.sync({waitFor:[O(input[1].x, input[1].y), O(input[5].x, input[5].y), X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[0].x, input[0].y)]},3);
});

}
var inputs_2 = [[{x: 1, y: 2}, {x: 2, y: 2}, {x: 2, y: 1}, {x: 2, y: 2}, {x: 1, y: 1}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 1, y: 2}],
[{x: 0, y: 2}, {x: 2, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 2, y: 2}, {x: 0, y: 0}, {x: 1, y: 0}],
[{x: 0, y: 1}, {x: 1, y: 2}, {x: 1, y: 1}, {x: 2, y: 2}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 0, y: 0}, {x: 1, y: 2}],
[{x: 0, y: 1}, {x: 2, y: 2}, {x: 1, y: 0}, {x: 2, y: 0}, {x: 2, y: 0}, {x: 1, y: 1}, {x: 2, y: 1}, {x: 2, y: 0}],
[{x: 1, y: 1}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 1, y: 2}, {x: 1, y: 2}, {x: 1, y: 1}, {x: 1, y: 1}],
[{x: 1, y: 0}, {x: 0, y: 1}, {x: 2, y: 0}, {x: 1, y: 1}, {x: 2, y: 2}, {x: 0, y: 0}, {x: 0, y: 1}, {x: 2, y: 1}]]
inputs_2.forEach(function (input) {
behaviorSet2(input);
});

function behaviorSet3(input) {
bp.registerBThread(""O_Player_Thread_3_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},7);
});

bp.registerBThread(""O_Player_Thread_3_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y)]},8);
});

}
var inputs_3 = [[{x: 0, y: 0}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 2, y: 0}],
[{x: 2, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}]]
inputs_3.forEach(function (input) {
behaviorSet3(input);
});

function behaviorSet4(input) {
bp.registerBThread(""O_Player_Thread_4_1"", function(){
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},10);
});

bp.registerBThread(""O_Player_Thread_4_2"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[1].x, input[1].y)]},8);
});

bp.registerBThread(""O_Player_Thread_4_3"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y)]},6);
});

bp.registerBThread(""O_Player_Thread_4_4"", function(){
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y)]},2);
});

}
var inputs_4 = [[{x: 1, y: 1}, {x: 2, y: 0}, {x: 0, y: 1}],
[{x: 1, y: 2}, {x: 2, y: 1}, {x: 1, y: 1}],
[{x: 2, y: 0}, {x: 0, y: 2}, {x: 2, y: 0}],
[{x: 1, y: 1}, {x: 0, y: 2}, {x: 2, y: 2}],
[{x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 2}],
[{x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 2}],
[{x: 1, y: 0}, {x: 2, y: 2}, {x: 0, y: 0}]]
inputs_4.forEach(function (input) {
behaviorSet4(input);
});

function behaviorSet5(input) {
bp.registerBThread(""O_Player_Thread_5_1"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[1].x, input[1].y)]},1);
});

bp.registerBThread(""O_Player_Thread_5_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), O(input[1].x, input[1].y), O(input[4].x, input[4].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[0].x, input[0].y)]},9);
});

bp.registerBThread(""O_Player_Thread_5_3"", function(){
bp.sync({request:[O(input[0].x, input[0].y), O(input[3].x, input[3].y), O(input[4].x, input[4].y)]},10);
});

bp.registerBThread(""O_Player_Thread_5_4"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[4].x, input[4].y), X(input[1].x, input[1].y)]});
bp.sync({waitFor:[O(input[4].x, input[4].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[4].x, input[4].y)]},1);
});

bp.registerBThread(""O_Player_Thread_5_5"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[4].x, input[4].y)]},10);
});

}
var inputs_5 = [[{x: 2, y: 1}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 1, y: 2}, {x: 0, y: 2}],
[{x: 2, y: 1}, {x: 0, y: 1}, {x: 1, y: 0}, {x: 0, y: 2}, {x: 0, y: 2}],
[{x: 1, y: 0}, {x: 1, y: 2}, {x: 0, y: 2}, {x: 1, y: 1}, {x: 0, y: 0}],
[{x: 2, y: 0}, {x: 1, y: 2}, {x: 2, y: 2}, {x: 0, y: 2}, {x: 0, y: 2}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 1, y: 1}, {x: 1, y: 2}]]
inputs_5.forEach(function (input) {
behaviorSet5(input);
});

function behaviorSet6(input) {
bp.registerBThread(""O_Player_Thread_6_1"", function(){
bp.sync({request:[O(input[4].x, input[4].y)]},10);
});

bp.registerBThread(""O_Player_Thread_6_2"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[0].x, input[0].y)]},1);
});

bp.registerBThread(""O_Player_Thread_6_3"", function(){
bp.sync({waitFor:[O(input[3].x, input[3].y), O(input[5].x, input[5].y)]});
bp.sync({request:[O(input[1].x, input[1].y)]},3);
});

bp.registerBThread(""O_Player_Thread_6_4"", function(){
bp.sync({request:[O(input[3].x, input[3].y), O(input[2].x, input[2].y)]},4);
});

bp.registerBThread(""O_Player_Thread_6_5"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[3].x, input[3].y), O(input[0].x, input[0].y)]},6);
});

}
var inputs_6 = [[{x: 2, y: 0}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 2}, {x: 1, y: 1}, {x: 1, y: 0}],
[{x: 2, y: 1}, {x: 2, y: 1}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 1, y: 0}, {x: 2, y: 2}],
[{x: 0, y: 0}, {x: 2, y: 2}, {x: 0, y: 1}, {x: 1, y: 0}, {x: 2, y: 2}, {x: 1, y: 0}],
[{x: 1, y: 2}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}, {x: 1, y: 0}, {x: 1, y: 1}],
[{x: 1, y: 0}, {x: 0, y: 0}, {x: 2, y: 0}, {x: 1, y: 1}, {x: 0, y: 1}, {x: 1, y: 2}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 2, y: 2}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}],
[{x: 1, y: 2}, {x: 0, y: 0}, {x: 1, y: 2}, {x: 0, y: 1}, {x: 1, y: 0}, {x: 0, y: 1}],
[{x: 0, y: 2}, {x: 0, y: 2}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 1, y: 2}]]
inputs_6.forEach(function (input) {
behaviorSet6(input);
});

function behaviorSet7(input) {
bp.registerBThread(""O_Player_Thread_7_1"", function(){
bp.sync({waitFor:[O(input[3].x, input[3].y), X(input[5].x, input[5].y), X(input[4].x, input[4].y), O(input[6].x, input[6].y)]});
bp.sync({waitFor:[X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[5].x, input[5].y)]},11);
});

bp.registerBThread(""O_Player_Thread_7_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[6].x, input[6].y)]},4);
});

bp.registerBThread(""O_Player_Thread_7_3"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[6].x, input[6].y), O(input[0].x, input[0].y)]},10);
});

bp.registerBThread(""O_Player_Thread_7_4"", function(){
bp.sync({waitFor:[O(input[3].x, input[3].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[4].x, input[4].y)]},5);
});

}
var inputs_7 = [[{x: 2, y: 2}, {x: 2, y: 1}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 0, y: 1}, {x: 2, y: 2}],
[{x: 1, y: 1}, {x: 2, y: 2}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 2, y: 2}],
[{x: 1, y: 1}, {x: 1, y: 0}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 2, y: 2}, {x: 0, y: 1}],
[{x: 0, y: 1}, {x: 2, y: 0}, {x: 0, y: 2}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 1, y: 1}, {x: 1, y: 1}]]
inputs_7.forEach(function (input) {
behaviorSet7(input);
});

function behaviorSet8(input) {
bp.registerBThread(""O_Player_Thread_8_1"", function(){
bp.sync({waitFor:[O(input[3].x, input[3].y), X(input[0].x, input[0].y), O(input[1].x, input[1].y), O(input[6].x, input[6].y)]});
bp.sync({request:[O(input[1].x, input[1].y)]},4);
});

bp.registerBThread(""O_Player_Thread_8_2"", function(){
bp.sync({waitFor:[X(input[4].x, input[4].y), O(input[3].x, input[3].y)]});
bp.sync({waitFor:[O(input[3].x, input[3].y), X(input[5].x, input[5].y), X(input[1].x, input[1].y), X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[3].x, input[3].y), O(input[6].x, input[6].y), O(input[6].x, input[6].y)]},1);
});

bp.registerBThread(""O_Player_Thread_8_3"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[6].x, input[6].y), O(input[6].x, input[6].y), O(input[0].x, input[0].y), O(input[4].x, input[4].y)]},10);
});

}
var inputs_8 = [[{x: 2, y: 2}, {x: 2, y: 0}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 0, y: 1}, {x: 0, y: 2}],
[{x: 1, y: 1}, {x: 0, y: 2}, {x: 1, y: 0}, {x: 2, y: 0}, {x: 1, y: 1}, {x: 2, y: 1}, {x: 0, y: 2}],
[{x: 1, y: 1}, {x: 2, y: 1}, {x: 1, y: 0}, {x: 2, y: 0}, {x: 1, y: 2}, {x: 0, y: 1}, {x: 2, y: 0}],
[{x: 1, y: 2}, {x: 2, y: 2}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 1, y: 0}],
[{x: 1, y: 0}, {x: 0, y: 2}, {x: 1, y: 2}, {x: 0, y: 0}, {x: 2, y: 2}, {x: 1, y: 0}, {x: 1, y: 2}],
[{x: 2, y: 2}, {x: 1, y: 1}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 0}, {x: 2, y: 0}, {x: 0, y: 2}]]
inputs_8.forEach(function (input) {
behaviorSet8(input);
});

function behaviorSet9(input) {
bp.registerBThread(""O_Player_Thread_9_1"", function(){
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},2);
});

bp.registerBThread(""O_Player_Thread_9_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},10);
});

bp.registerBThread(""O_Player_Thread_9_3"", function(){
bp.sync({request:[O(input[0].x, input[0].y)]},11);
});

bp.registerBThread(""O_Player_Thread_9_4"", function(){
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},8);
});

}
var inputs_9 = [[{x: 1, y: 0}],
[{x: 2, y: 0}]]
inputs_9.forEach(function (input) {
behaviorSet9(input);
});

function behaviorSet10(input) {
bp.registerBThread(""O_Player_Thread_10_1"", function(){
bp.sync({request:[O(input[3].x, input[3].y), O(input[2].x, input[2].y), O(input[2].x, input[2].y)]},6);
});

}
var inputs_10 = [[{x: 0, y: 2}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}],
[{x: 2, y: 2}, {x: 2, y: 2}, {x: 1, y: 2}, {x: 1, y: 2}],
[{x: 2, y: 2}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}],
[{x: 2, y: 0}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 0}],
[{x: 0, y: 2}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 1, y: 2}],
[{x: 0, y: 0}, {x: 0, y: 2}, {x: 1, y: 2}, {x: 1, y: 1}],
[{x: 0, y: 1}, {x: 1, y: 1}, {x: 2, y: 1}, {x: 0, y: 0}],
[{x: 0, y: 1}, {x: 0, y: 1}, {x: 1, y: 1}, {x: 0, y: 2}],
[{x: 0, y: 0}, {x: 0, y: 1}, {x: 1, y: 1}, {x: 0, y: 1}]]
inputs_10.forEach(function (input) {
behaviorSet10(input);
});

"
9,1.0,1.0,41.666666666666664,19.0,3.0,28.0,60.0,19.0,30.0,0.0,13.0,"function behaviorSet1(input) {
bp.registerBThread(""O_Player_Thread_1_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[1].x, input[1].y)]},3);
});

}
var inputs_1 = [[{x: 2, y: 2}, {x: 0, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}, {x: 1, y: 0}, {x: 0, y: 1}]]
inputs_1.forEach(function (input) {
behaviorSet1(input);
});

function behaviorSet2(input) {
bp.registerBThread(""O_Player_Thread_2_1"", function(){
bp.sync({waitFor:[X(input[3].x, input[3].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[5].x, input[5].y)]});
bp.sync({waitFor:[X(input[5].x, input[5].y), O(input[8].x, input[8].y), X(input[8].x, input[8].y)]});
bp.sync({request:[O(input[8].x, input[8].y), O(input[2].x, input[2].y)]},2);
});

bp.registerBThread(""O_Player_Thread_2_2"", function(){
bp.sync({waitFor:[X(input[6].x, input[6].y), O(input[7].x, input[7].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[6].x, input[6].y), O(input[7].x, input[7].y), O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},8);
});

bp.registerBThread(""O_Player_Thread_2_3"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y)]});
bp.sync({waitFor:[O(input[3].x, input[3].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[8].x, input[8].y), O(input[2].x, input[2].y), O(input[7].x, input[7].y)]},7);
});

}
var inputs_2 = [[{x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 1, y: 2}, {x: 1, y: 2}, {x: 0, y: 1}, {x: 2, y: 0}, {x: 0, y: 2}],
[{x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 2, y: 0}, {x: 1, y: 1}],
[{x: 0, y: 1}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 0, y: 2}, {x: 2, y: 2}, {x: 1, y: 2}, {x: 0, y: 1}],
[{x: 1, y: 2}, {x: 1, y: 1}, {x: 2, y: 1}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 2, y: 2}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 2, y: 1}],
[{x: 1, y: 2}, {x: 0, y: 1}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 0, y: 1}, {x: 1, y: 2}, {x: 1, y: 0}, {x: 1, y: 0}, {x: 2, y: 0}],
[{x: 1, y: 0}, {x: 2, y: 2}, {x: 0, y: 1}, {x: 2, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 1, y: 2}, {x: 0, y: 0}, {x: 1, y: 1}],
[{x: 0, y: 2}, {x: 2, y: 2}, {x: 1, y: 1}, {x: 2, y: 2}, {x: 0, y: 1}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 0, y: 0}, {x: 0, y: 0}]]
inputs_2.forEach(function (input) {
behaviorSet2(input);
});

function behaviorSet3(input) {
bp.registerBThread(""O_Player_Thread_3_1"", function(){
bp.sync({waitFor:[X(input[4].x, input[4].y)]});
bp.sync({waitFor:[X(input[4].x, input[4].y), O(input[7].x, input[7].y), O(input[7].x, input[7].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[5].x, input[5].y), O(input[3].x, input[3].y)]},10);
});

bp.registerBThread(""O_Player_Thread_3_2"", function(){
bp.sync({request:[O(input[3].x, input[3].y), O(input[2].x, input[2].y)]},11);
});

}
var inputs_3 = [[{x: 0, y: 0}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 2, y: 1}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 2, y: 0}],
[{x: 0, y: 0}, {x: 0, y: 0}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 0, y: 2}, {x: 1, y: 1}],
[{x: 1, y: 0}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 2, y: 2}, {x: 1, y: 1}, {x: 2, y: 1}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 0, y: 2}],
[{x: 2, y: 2}, {x: 1, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 0, y: 0}],
[{x: 0, y: 0}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 1, y: 0}, {x: 2, y: 2}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 1, y: 0}, {x: 2, y: 1}],
[{x: 2, y: 2}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 1, y: 2}, {x: 2, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 1, y: 2}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 1, y: 2}, {x: 1, y: 0}, {x: 2, y: 0}, {x: 1, y: 2}, {x: 1, y: 1}, {x: 2, y: 1}]]
inputs_3.forEach(function (input) {
behaviorSet3(input);
});

function behaviorSet4(input) {
bp.registerBThread(""O_Player_Thread_4_1"", function(){
bp.sync({waitFor:[X(input[7].x, input[7].y), O(input[3].x, input[3].y)]});
bp.sync({request:[O(input[7].x, input[7].y)]},10);
});

bp.registerBThread(""O_Player_Thread_4_2"", function(){
bp.sync({request:[O(input[4].x, input[4].y)]},4);
});

bp.registerBThread(""O_Player_Thread_4_3"", function(){
bp.sync({waitFor:[O(input[1].x, input[1].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[0].x, input[0].y)]},4);
});

bp.registerBThread(""O_Player_Thread_4_4"", function(){
bp.sync({request:[O(input[1].x, input[1].y)]},1);
});

bp.registerBThread(""O_Player_Thread_4_5"", function(){
bp.sync({waitFor:[X(input[3].x, input[3].y), O(input[3].x, input[3].y)]});
bp.sync({request:[O(input[4].x, input[4].y)]},11);
});

}
var inputs_4 = [[{x: 1, y: 1}, {x: 0, y: 1}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 1, y: 0}, {x: 2, y: 1}, {x: 0, y: 1}, {x: 0, y: 0}],
[{x: 0, y: 1}, {x: 1, y: 2}, {x: 0, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 2, y: 1}, {x: 1, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 1}, {x: 1, y: 0}, {x: 2, y: 2}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 0, y: 1}, {x: 1, y: 2}, {x: 0, y: 1}],
[{x: 0, y: 2}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 0, y: 2}, {x: 2, y: 2}, {x: 1, y: 0}, {x: 0, y: 1}, {x: 2, y: 0}],
[{x: 1, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 1, y: 2}, {x: 2, y: 0}],
[{x: 1, y: 2}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 2, y: 1}, {x: 0, y: 2}, {x: 2, y: 2}, {x: 2, y: 1}, {x: 1, y: 0}],
[{x: 2, y: 0}, {x: 0, y: 1}, {x: 1, y: 0}, {x: 2, y: 2}, {x: 0, y: 1}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}]]
inputs_4.forEach(function (input) {
behaviorSet4(input);
});

function behaviorSet5(input) {
bp.registerBThread(""O_Player_Thread_5_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[7].x, input[7].y), O(input[5].x, input[5].y)]},11);
});

bp.registerBThread(""O_Player_Thread_5_2"", function(){
bp.sync({waitFor:[X(input[5].x, input[5].y), X(input[6].x, input[6].y)]});
bp.sync({request:[O(input[8].x, input[8].y), O(input[2].x, input[2].y), O(input[8].x, input[8].y)]},4);
});

}
var inputs_5 = [[{x: 1, y: 0}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 1}, {x: 2, y: 0}, {x: 0, y: 0}],
[{x: 2, y: 0}, {x: 0, y: 0}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 0, y: 1}, {x: 2, y: 0}, {x: 1, y: 1}],
[{x: 1, y: 0}, {x: 0, y: 1}, {x: 1, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}],
[{x: 0, y: 1}, {x: 2, y: 1}, {x: 1, y: 2}, {x: 1, y: 0}, {x: 2, y: 2}, {x: 1, y: 0}, {x: 0, y: 1}, {x: 2, y: 0}, {x: 0, y: 1}],
[{x: 0, y: 2}, {x: 2, y: 2}, {x: 1, y: 0}, {x: 0, y: 1}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 0, y: 0}]]
inputs_5.forEach(function (input) {
behaviorSet5(input);
});

function behaviorSet6(input) {
bp.registerBThread(""O_Player_Thread_6_1"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y)]});
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[4].x, input[4].y), O(input[3].x, input[3].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[5].x, input[5].y)]},5);
});

bp.registerBThread(""O_Player_Thread_6_2"", function(){
bp.sync({request:[O(input[3].x, input[3].y), O(input[5].x, input[5].y), O(input[0].x, input[0].y)]},10);
});

bp.registerBThread(""O_Player_Thread_6_3"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y), X(input[1].x, input[1].y), O(input[1].x, input[1].y)]});
bp.sync({waitFor:[O(input[5].x, input[5].y), O(input[1].x, input[1].y), O(input[3].x, input[3].y), X(input[5].x, input[5].y)]});
bp.sync({request:[O(input[4].x, input[4].y), O(input[2].x, input[2].y)]},3);
});

bp.registerBThread(""O_Player_Thread_6_4"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), O(input[1].x, input[1].y), O(input[4].x, input[4].y), X(input[5].x, input[5].y)]});
bp.sync({request:[O(input[5].x, input[5].y), O(input[4].x, input[4].y)]},11);
});

}
var inputs_6 = [[{x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 1, y: 0}, {x: 2, y: 2}, {x: 2, y: 1}],
[{x: 2, y: 0}, {x: 0, y: 0}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 2, y: 0}]]
inputs_6.forEach(function (input) {
behaviorSet6(input);
});

function behaviorSet7(input) {
bp.registerBThread(""O_Player_Thread_7_1"", function(){
bp.sync({waitFor:[O(input[3].x, input[3].y), X(input[2].x, input[2].y), O(input[4].x, input[4].y), O(input[1].x, input[1].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[6].x, input[6].y), O(input[0].x, input[0].y)]},4);
});

bp.registerBThread(""O_Player_Thread_7_2"", function(){
bp.sync({waitFor:[O(input[1].x, input[1].y), O(input[1].x, input[1].y)]});
bp.sync({waitFor:[X(input[0].x, input[0].y), O(input[6].x, input[6].y), X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[7].x, input[7].y), O(input[6].x, input[6].y), O(input[4].x, input[4].y)]},2);
});

bp.registerBThread(""O_Player_Thread_7_3"", function(){
bp.sync({waitFor:[O(input[5].x, input[5].y), O(input[6].x, input[6].y)]});
bp.sync({request:[O(input[7].x, input[7].y), O(input[7].x, input[7].y)]},11);
});

bp.registerBThread(""O_Player_Thread_7_4"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y), O(input[5].x, input[5].y), O(input[6].x, input[6].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[7].x, input[7].y)]},9);
});

}
var inputs_7 = [[{x: 0, y: 1}, {x: 0, y: 2}, {x: 1, y: 2}, {x: 0, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 0, y: 0}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 2, y: 2}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 1, y: 2}, {x: 0, y: 2}],
[{x: 0, y: 2}, {x: 2, y: 0}, {x: 1, y: 1}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 0, y: 0}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 2, y: 0}, {x: 2, y: 0}, {x: 1, y: 1}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 1, y: 2}, {x: 1, y: 1}],
[{x: 1, y: 0}, {x: 1, y: 2}, {x: 2, y: 2}, {x: 1, y: 1}, {x: 2, y: 2}, {x: 1, y: 2}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 0, y: 1}, {x: 2, y: 2}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 2, y: 0}]]
inputs_7.forEach(function (input) {
behaviorSet7(input);
});

function behaviorSet8(input) {
bp.registerBThread(""O_Player_Thread_8_1"", function(){
bp.sync({request:[O(input[3].x, input[3].y), O(input[4].x, input[4].y), O(input[0].x, input[0].y)]},5);
});

bp.registerBThread(""O_Player_Thread_8_2"", function(){
bp.sync({waitFor:[X(input[4].x, input[4].y)]});
bp.sync({request:[O(input[4].x, input[4].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},11);
});

bp.registerBThread(""O_Player_Thread_8_3"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[4].x, input[4].y), O(input[3].x, input[3].y)]},11);
});

bp.registerBThread(""O_Player_Thread_8_4"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), O(input[4].x, input[4].y), O(input[4].x, input[4].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[4].x, input[4].y)]},9);
});

bp.registerBThread(""O_Player_Thread_8_5"", function(){
bp.sync({waitFor:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), X(input[3].x, input[3].y), X(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[4].x, input[4].y), O(input[1].x, input[1].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[1].x, input[1].y), O(input[3].x, input[3].y)]},8);
});

}
var inputs_8 = [[{x: 0, y: 2}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}, {x: 2, y: 1}],
[{x: 0, y: 1}, {x: 2, y: 2}, {x: 1, y: 0}, {x: 2, y: 1}, {x: 1, y: 0}],
[{x: 2, y: 2}, {x: 0, y: 0}, {x: 0, y: 0}, {x: 0, y: 0}, {x: 2, y: 0}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 0, y: 0}, {x: 2, y: 2}, {x: 2, y: 0}],
[{x: 0, y: 1}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 0, y: 0}, {x: 2, y: 0}],
[{x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 0, y: 2}],
[{x: 2, y: 1}, {x: 0, y: 1}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 0, y: 1}, {x: 1, y: 1}, {x: 0, y: 2}, {x: 2, y: 0}]]
inputs_8.forEach(function (input) {
behaviorSet8(input);
});

function behaviorSet9(input) {
bp.registerBThread(""O_Player_Thread_9_1"", function(){
bp.sync({waitFor:[O(input[3].x, input[3].y), O(input[0].x, input[0].y), X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[4].x, input[4].y)]},9);
});

bp.registerBThread(""O_Player_Thread_9_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), O(input[2].x, input[2].y), X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[2].x, input[2].y)]},1);
});

bp.registerBThread(""O_Player_Thread_9_3"", function(){
bp.sync({waitFor:[O(input[4].x, input[4].y), O(input[3].x, input[3].y), O(input[3].x, input[3].y), X(input[3].x, input[3].y)]});
bp.sync({waitFor:[X(input[3].x, input[3].y), X(input[4].x, input[4].y)]});
bp.sync({request:[O(input[4].x, input[4].y)]},4);
});

bp.registerBThread(""O_Player_Thread_9_4"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y), O(input[0].x, input[0].y), X(input[3].x, input[3].y), O(input[4].x, input[4].y)]});
bp.sync({request:[O(input[2].x, input[2].y)]},4);
});

}
var inputs_9 = [[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 2}, {x: 0, y: 1}, {x: 0, y: 0}],
[{x: 1, y: 2}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 1, y: 0}, {x: 2, y: 0}],
[{x: 2, y: 1}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 2, y: 2}],
[{x: 2, y: 0}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 2, y: 0}],
[{x: 1, y: 1}, {x: 2, y: 0}, {x: 1, y: 2}, {x: 1, y: 2}, {x: 0, y: 0}],
[{x: 2, y: 2}, {x: 2, y: 1}, {x: 1, y: 2}, {x: 0, y: 0}, {x: 1, y: 1}],
[{x: 0, y: 1}, {x: 0, y: 2}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 1, y: 2}],
[{x: 1, y: 1}, {x: 1, y: 2}, {x: 1, y: 2}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 1}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 0, y: 2}, {x: 2, y: 2}]]
inputs_9.forEach(function (input) {
behaviorSet9(input);
});

function behaviorSet10(input) {
bp.registerBThread(""O_Player_Thread_10_1"", function(){
bp.sync({waitFor:[O(input[6].x, input[6].y)]});
bp.sync({request:[O(input[4].x, input[4].y), O(input[0].x, input[0].y)]},8);
});

bp.registerBThread(""O_Player_Thread_10_2"", function(){
bp.sync({request:[O(input[4].x, input[4].y), O(input[3].x, input[3].y), O(input[5].x, input[5].y), O(input[3].x, input[3].y)]},7);
});

bp.registerBThread(""O_Player_Thread_10_3"", function(){
bp.sync({waitFor:[X(input[5].x, input[5].y), O(input[2].x, input[2].y), O(input[3].x, input[3].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[4].x, input[4].y), X(input[4].x, input[4].y), O(input[4].x, input[4].y)]});
bp.sync({request:[O(input[3].x, input[3].y)]},2);
});

bp.registerBThread(""O_Player_Thread_10_4"", function(){
bp.sync({waitFor:[O(input[3].x, input[3].y)]});
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[1].x, input[1].y), O(input[4].x, input[4].y)]});
bp.sync({request:[O(input[4].x, input[4].y), O(input[6].x, input[6].y), O(input[5].x, input[5].y), O(input[2].x, input[2].y)]},7);
});

bp.registerBThread(""O_Player_Thread_10_5"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[5].x, input[5].y)]});
bp.sync({request:[O(input[5].x, input[5].y)]},11);
});

}
var inputs_10 = [[{x: 2, y: 0}, {x: 2, y: 1}, {x: 1, y: 0}, {x: 0, y: 1}, {x: 1, y: 0}, {x: 2, y: 1}, {x: 0, y: 2}],
[{x: 0, y: 2}, {x: 2, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 1, y: 2}, {x: 2, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 1}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 2, y: 2}, {x: 0, y: 0}, {x: 1, y: 2}],
[{x: 2, y: 2}, {x: 1, y: 2}, {x: 1, y: 0}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 2}],
[{x: 0, y: 1}, {x: 1, y: 0}, {x: 1, y: 0}, {x: 2, y: 2}, {x: 1, y: 2}, {x: 0, y: 0}, {x: 2, y: 2}]]
inputs_10.forEach(function (input) {
behaviorSet10(input);
});

"
10,2.0,2.0,37.83670033670033,10.0,9.0,31.0,54.0,17.0,34.0,0.0,19.0,"function behaviorSet1(input) {
bp.registerBThread(""O_Player_Thread_1_1"", function(){
bp.sync({waitFor:[O(input[5].x, input[5].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[5].x, input[5].y)]},2);
});

}
var inputs_1 = [[{x: 0, y: 1}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 0, y: 2}, {x: 1, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 0}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 1, y: 0}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 2, y: 1}],
[{x: 0, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 1}],
[{x: 1, y: 1}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 1}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 1, y: 0}, {x: 0, y: 2}]]
inputs_1.forEach(function (input) {
behaviorSet1(input);
});

function behaviorSet2(input) {
bp.registerBThread(""O_Player_Thread_2_1"", function(){
bp.sync({request:[O(input[6].x, input[6].y), O(input[3].x, input[3].y), O(input[2].x, input[2].y), O(input[2].x, input[2].y)]},4);
});

bp.registerBThread(""O_Player_Thread_2_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[5].x, input[5].y), X(input[7].x, input[7].y)]});
bp.sync({request:[O(input[7].x, input[7].y)]},2);
});

bp.registerBThread(""O_Player_Thread_2_3"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[0].x, input[0].y)]},8);
});

}
var inputs_2 = [[{x: 1, y: 0}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 2, y: 2}, {x: 1, y: 2}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 2, y: 2}, {x: 1, y: 1}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 1, y: 0}],
[{x: 2, y: 2}, {x: 1, y: 2}, {x: 0, y: 2}, {x: 1, y: 2}, {x: 1, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 0, y: 2}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 0, y: 2}],
[{x: 1, y: 0}, {x: 0, y: 0}, {x: 0, y: 1}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 0, y: 2}]]
inputs_2.forEach(function (input) {
behaviorSet2(input);
});

function behaviorSet3(input) {
bp.registerBThread(""O_Player_Thread_3_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[1].x, input[1].y), X(input[2].x, input[2].y), X(input[2].x, input[2].y)]});
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[2].x, input[2].y), O(input[2].x, input[2].y)]},8);
});

bp.registerBThread(""O_Player_Thread_3_2"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[2].x, input[2].y), O(input[2].x, input[2].y), X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[2].x, input[2].y)]},1);
});

}
var inputs_3 = [[{x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}],
[{x: 1, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}],
[{x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 0}]]
inputs_3.forEach(function (input) {
behaviorSet3(input);
});

function behaviorSet4(input) {
bp.registerBThread(""O_Player_Thread_4_1"", function(){
bp.sync({waitFor:[O(input[4].x, input[4].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_4_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[3].x, input[3].y)]},8);
});

}
var inputs_4 = [[{x: 2, y: 0}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 2, y: 1}, {x: 1, y: 0}],
[{x: 2, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 0, y: 0}],
[{x: 0, y: 2}, {x: 1, y: 2}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 0, y: 0}],
[{x: 1, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 2, y: 0}, {x: 0, y: 0}],
[{x: 2, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 2, y: 2}]]
inputs_4.forEach(function (input) {
behaviorSet4(input);
});

function behaviorSet5(input) {
bp.registerBThread(""O_Player_Thread_5_1"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[1].x, input[1].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},3);
});

bp.registerBThread(""O_Player_Thread_5_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},9);
});

bp.registerBThread(""O_Player_Thread_5_3"", function(){
bp.sync({request:[O(input[0].x, input[0].y), O(input[2].x, input[2].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y)]},4);
});

}
var inputs_5 = [[{x: 1, y: 0}, {x: 1, y: 1}, {x: 1, y: 2}],
[{x: 2, y: 2}, {x: 0, y: 2}, {x: 2, y: 1}]]
inputs_5.forEach(function (input) {
behaviorSet5(input);
});

function behaviorSet6(input) {
bp.registerBThread(""O_Player_Thread_6_1"", function(){
bp.sync({waitFor:[O(input[1].x, input[1].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_6_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[1].x, input[1].y), O(input[1].x, input[1].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},10);
});

bp.registerBThread(""O_Player_Thread_6_3"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_6_4"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[1].x, input[1].y)]},3);
});

}
var inputs_6 = [[{x: 0, y: 2}, {x: 1, y: 0}],
[{x: 0, y: 0}, {x: 1, y: 2}]]
inputs_6.forEach(function (input) {
behaviorSet6(input);
});

function behaviorSet7(input) {
bp.registerBThread(""O_Player_Thread_7_1"", function(){
bp.sync({request:[O(input[4].x, input[4].y), O(input[3].x, input[3].y), O(input[1].x, input[1].y), O(input[4].x, input[4].y)]},2);
});

}
var inputs_7 = [[{x: 0, y: 1}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 1, y: 2}, {x: 1, y: 2}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 1, y: 2}],
[{x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 0, y: 2}],
[{x: 0, y: 1}, {x: 0, y: 2}, {x: 1, y: 1}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 2, y: 0}],
[{x: 1, y: 2}, {x: 0, y: 2}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 0, y: 0}, {x: 1, y: 2}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 2}, {x: 2, y: 1}]]
inputs_7.forEach(function (input) {
behaviorSet7(input);
});

function behaviorSet8(input) {
bp.registerBThread(""O_Player_Thread_8_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[0].x, input[0].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_8_2"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[1].x, input[1].y)]},4);
});

bp.registerBThread(""O_Player_Thread_8_3"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[1].x, input[1].y), O(input[0].x, input[0].y), X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[1].x, input[1].y)]},3);
});

}
var inputs_8 = [[{x: 1, y: 2}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 2, y: 2}],
[{x: 2, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}],
[{x: 0, y: 0}, {x: 2, y: 2}]]
inputs_8.forEach(function (input) {
behaviorSet8(input);
});

function behaviorSet9(input) {
bp.registerBThread(""O_Player_Thread_9_1"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y)]});
bp.sync({waitFor:[X(input[3].x, input[3].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},2);
});

bp.registerBThread(""O_Player_Thread_9_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y), O(input[2].x, input[2].y)]},8);
});

}
var inputs_9 = [[{x: 2, y: 0}, {x: 1, y: 2}, {x: 1, y: 2}, {x: 0, y: 1}],
[{x: 2, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}],
[{x: 0, y: 0}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 2, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}, {x: 1, y: 2}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}],
[{x: 1, y: 2}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 1, y: 0}]]
inputs_9.forEach(function (input) {
behaviorSet9(input);
});

function behaviorSet10(input) {
bp.registerBThread(""O_Player_Thread_10_1"", function(){
bp.sync({waitFor:[X(input[5].x, input[5].y)]});
bp.sync({waitFor:[O(input[3].x, input[3].y), O(input[6].x, input[6].y), X(input[2].x, input[2].y), X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[5].x, input[5].y), O(input[7].x, input[7].y)]},6);
});

bp.registerBThread(""O_Player_Thread_10_2"", function(){
bp.sync({request:[O(input[6].x, input[6].y)]},2);
});

bp.registerBThread(""O_Player_Thread_10_3"", function(){
bp.sync({waitFor:[X(input[7].x, input[7].y), O(input[3].x, input[3].y), O(input[6].x, input[6].y), O(input[5].x, input[5].y)]});
bp.sync({waitFor:[O(input[7].x, input[7].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[4].x, input[4].y), O(input[3].x, input[3].y), O(input[6].x, input[6].y), O(input[4].x, input[4].y)]},5);
});

bp.registerBThread(""O_Player_Thread_10_4"", function(){
bp.sync({waitFor:[X(input[4].x, input[4].y)]});
bp.sync({waitFor:[X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[4].x, input[4].y), O(input[7].x, input[7].y), O(input[3].x, input[3].y), O(input[2].x, input[2].y)]},9);
});

bp.registerBThread(""O_Player_Thread_10_5"", function(){
bp.sync({waitFor:[X(input[5].x, input[5].y), O(input[2].x, input[2].y), O(input[6].x, input[6].y)]});
bp.sync({request:[O(input[5].x, input[5].y), O(input[0].x, input[0].y), O(input[7].x, input[7].y)]},1);
});

}
var inputs_10 = [[{x: 1, y: 1}, {x: 0, y: 2}, {x: 1, y: 2}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 2}, {x: 0, y: 1}],
[{x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 1}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 0, y: 1}, {x: 2, y: 2}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 1}],
[{x: 1, y: 0}, {x: 1, y: 0}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}],
[{x: 0, y: 0}, {x: 1, y: 0}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 2, y: 2}, {x: 0, y: 0}],
[{x: 2, y: 1}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 1, y: 2}, {x: 2, y: 1}, {x: 0, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 2, y: 2}, {x: 2, y: 2}],
[{x: 0, y: 1}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 2, y: 0}, {x: 2, y: 2}]]
inputs_10.forEach(function (input) {
behaviorSet10(input);
});

"
11,2.0,1.0,27.8494623655914,8.0,5.0,37.0,66.0,22.0,27.0,0.0,16.0,"function behaviorSet1(input) {
bp.registerBThread(""O_Player_Thread_1_1"", function(){
bp.sync({waitFor:[X(input[4].x, input[4].y), O(input[4].x, input[4].y)]});
bp.sync({request:[O(input[6].x, input[6].y)]},5);
});

bp.registerBThread(""O_Player_Thread_1_2"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[1].x, input[1].y), X(input[5].x, input[5].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[1].x, input[1].y), O(input[5].x, input[5].y), O(input[4].x, input[4].y)]},9);
});

}
var inputs_1 = [[{x: 2, y: 1}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 1, y: 2}],
[{x: 0, y: 1}, {x: 1, y: 1}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 2, y: 1}, {x: 0, y: 0}],
[{x: 0, y: 2}, {x: 2, y: 1}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 1, y: 2}]]
inputs_1.forEach(function (input) {
behaviorSet1(input);
});

function behaviorSet2(input) {
bp.registerBThread(""O_Player_Thread_2_1"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y), O(input[3].x, input[3].y)]});
bp.sync({waitFor:[X(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[3].x, input[3].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y)]},10);
});

bp.registerBThread(""O_Player_Thread_2_2"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y), X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_2_3"", function(){
bp.sync({request:[O(input[3].x, input[3].y), O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[1].x, input[1].y)]},6);
});

bp.registerBThread(""O_Player_Thread_2_4"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y)]},11);
});

bp.registerBThread(""O_Player_Thread_2_5"", function(){
bp.sync({request:[O(input[2].x, input[2].y)]},7);
});

}
var inputs_2 = [[{x: 2, y: 2}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 2, y: 1}],
[{x: 0, y: 0}, {x: 1, y: 2}, {x: 0, y: 0}, {x: 0, y: 1}],
[{x: 0, y: 1}, {x: 0, y: 1}, {x: 1, y: 1}, {x: 2, y: 1}]]
inputs_2.forEach(function (input) {
behaviorSet2(input);
});

function behaviorSet3(input) {
bp.registerBThread(""O_Player_Thread_3_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y)]},9);
});

bp.registerBThread(""O_Player_Thread_3_2"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), O(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[1].x, input[1].y)]},4);
});

bp.registerBThread(""O_Player_Thread_3_3"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y), X(input[2].x, input[2].y), O(input[1].x, input[1].y), X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y)]},10);
});

bp.registerBThread(""O_Player_Thread_3_4"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[1].x, input[1].y)]});
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},11);
});

bp.registerBThread(""O_Player_Thread_3_5"", function(){
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},10);
});

}
var inputs_3 = [[{x: 1, y: 1}, {x: 0, y: 1}, {x: 2, y: 1}],
[{x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 2}],
[{x: 2, y: 0}, {x: 2, y: 1}, {x: 0, y: 0}],
[{x: 2, y: 0}, {x: 0, y: 2}, {x: 0, y: 1}],
[{x: 2, y: 1}, {x: 1, y: 2}, {x: 0, y: 2}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}]]
inputs_3.forEach(function (input) {
behaviorSet3(input);
});

function behaviorSet4(input) {
bp.registerBThread(""O_Player_Thread_4_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[8].x, input[8].y)]});
bp.sync({waitFor:[X(input[4].x, input[4].y), O(input[4].x, input[4].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[3].x, input[3].y)]},10);
});

}
var inputs_4 = [[{x: 1, y: 2}, {x: 0, y: 1}, {x: 1, y: 2}, {x: 1, y: 2}, {x: 1, y: 0}, {x: 0, y: 2}, {x: 2, y: 2}, {x: 0, y: 0}, {x: 1, y: 1}]]
inputs_4.forEach(function (input) {
behaviorSet4(input);
});

function behaviorSet5(input) {
bp.registerBThread(""O_Player_Thread_5_1"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), O(input[0].x, input[0].y)]});
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_5_2"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), O(input[0].x, input[0].y)]});
bp.sync({waitFor:[X(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},5);
});

bp.registerBThread(""O_Player_Thread_5_3"", function(){
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},5);
});

}
var inputs_5 = [[{x: 2, y: 1}],
[{x: 0, y: 2}],
[{x: 1, y: 1}],
[{x: 1, y: 2}],
[{x: 2, y: 2}],
[{x: 0, y: 1}]]
inputs_5.forEach(function (input) {
behaviorSet5(input);
});

function behaviorSet6(input) {
bp.registerBThread(""O_Player_Thread_6_1"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y), O(input[2].x, input[2].y), X(input[1].x, input[1].y)]});
bp.sync({waitFor:[O(input[5].x, input[5].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[3].x, input[3].y)]});
bp.sync({request:[O(input[4].x, input[4].y)]},8);
});

bp.registerBThread(""O_Player_Thread_6_2"", function(){
bp.sync({waitFor:[X(input[7].x, input[7].y), O(input[7].x, input[7].y), X(input[8].x, input[8].y)]});
bp.sync({request:[O(input[6].x, input[6].y), O(input[0].x, input[0].y), O(input[7].x, input[7].y), O(input[6].x, input[6].y)]},1);
});

}
var inputs_6 = [[{x: 2, y: 1}, {x: 2, y: 0}, {x: 2, y: 0}, {x: 1, y: 2}, {x: 1, y: 2}, {x: 0, y: 1}, {x: 2, y: 2}, {x: 1, y: 0}, {x: 0, y: 0}],
[{x: 0, y: 1}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 0, y: 2}],
[{x: 2, y: 1}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 0}, {x: 2, y: 2}],
[{x: 0, y: 1}, {x: 1, y: 0}, {x: 0, y: 0}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 1, y: 2}, {x: 0, y: 1}, {x: 2, y: 0}, {x: 0, y: 1}],
[{x: 2, y: 2}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 1}, {x: 2, y: 0}, {x: 1, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 0, y: 1}, {x: 1, y: 0}],
[{x: 0, y: 1}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 1, y: 0}, {x: 1, y: 0}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 2, y: 0}],
[{x: 1, y: 0}, {x: 0, y: 1}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 1, y: 2}, {x: 0, y: 2}, {x: 1, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}],
[{x: 1, y: 0}, {x: 1, y: 0}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 1, y: 1}, {x: 0, y: 2}, {x: 2, y: 2}, {x: 1, y: 0}, {x: 1, y: 0}]]
inputs_6.forEach(function (input) {
behaviorSet6(input);
});

function behaviorSet7(input) {
bp.registerBThread(""O_Player_Thread_7_1"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},2);
});

bp.registerBThread(""O_Player_Thread_7_2"", function(){
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},6);
});

bp.registerBThread(""O_Player_Thread_7_3"", function(){
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},8);
});

bp.registerBThread(""O_Player_Thread_7_4"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({waitFor:[X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},7);
});

}
var inputs_7 = [[{x: 0, y: 2}]]
inputs_7.forEach(function (input) {
behaviorSet7(input);
});

function behaviorSet8(input) {
bp.registerBThread(""O_Player_Thread_8_1"", function(){
bp.sync({waitFor:[X(input[3].x, input[3].y), X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},11);
});

}
var inputs_8 = [[{x: 2, y: 1}, {x: 1, y: 2}, {x: 1, y: 1}, {x: 1, y: 0}, {x: 0, y: 0}],
[{x: 1, y: 0}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 2}, {x: 2, y: 0}]]
inputs_8.forEach(function (input) {
behaviorSet8(input);
});

function behaviorSet9(input) {
bp.registerBThread(""O_Player_Thread_9_1"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},5);
});

}
var inputs_9 = [[{x: 0, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 2, y: 1}],
[{x: 0, y: 0}, {x: 1, y: 0}, {x: 0, y: 1}, {x: 1, y: 1}],
[{x: 2, y: 0}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 1}]]
inputs_9.forEach(function (input) {
behaviorSet9(input);
});

function behaviorSet10(input) {
bp.registerBThread(""O_Player_Thread_10_1"", function(){
bp.sync({request:[O(input[3].x, input[3].y), O(input[4].x, input[4].y)]},11);
});

bp.registerBThread(""O_Player_Thread_10_2"", function(){
bp.sync({request:[O(input[3].x, input[3].y)]},9);
});

bp.registerBThread(""O_Player_Thread_10_3"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y), X(input[2].x, input[2].y), X(input[0].x, input[0].y), O(input[3].x, input[3].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[3].x, input[3].y), O(input[1].x, input[1].y)]},4);
});

bp.registerBThread(""O_Player_Thread_10_4"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[4].x, input[4].y)]},8);
});

}
var inputs_10 = [[{x: 2, y: 1}, {x: 0, y: 1}, {x: 1, y: 2}, {x: 0, y: 1}, {x: 1, y: 0}],
[{x: 1, y: 2}, {x: 0, y: 1}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 0, y: 2}],
[{x: 1, y: 2}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}, {x: 0, y: 0}],
[{x: 2, y: 0}, {x: 2, y: 1}, {x: 0, y: 2}, {x: 1, y: 0}, {x: 0, y: 1}],
[{x: 0, y: 1}, {x: 2, y: 1}, {x: 0, y: 2}, {x: 0, y: 2}, {x: 2, y: 0}],
[{x: 0, y: 1}, {x: 1, y: 0}, {x: 1, y: 0}, {x: 0, y: 1}, {x: 2, y: 1}],
[{x: 0, y: 2}, {x: 1, y: 2}, {x: 0, y: 2}, {x: 2, y: 2}, {x: 2, y: 0}],
[{x: 0, y: 2}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}],
[{x: 1, y: 1}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 2, y: 0}, {x: 2, y: 1}]]
inputs_10.forEach(function (input) {
behaviorSet10(input);
});

"
12,2.0,4.0,29.67571644042232,6.0,8.0,36.0,65.0,20.0,37.0,0.0,10.0,"function behaviorSet1(input) {
bp.registerBThread(""O_Player_Thread_1_1"", function(){
bp.sync({waitFor:[X(input[4].x, input[4].y), O(input[4].x, input[4].y)]});
bp.sync({request:[O(input[6].x, input[6].y)]},5);
});

bp.registerBThread(""O_Player_Thread_1_2"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[1].x, input[1].y), X(input[5].x, input[5].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[1].x, input[1].y), O(input[5].x, input[5].y), O(input[4].x, input[4].y)]},9);
});

}
var inputs_1 = [[{x: 2, y: 1}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 1, y: 2}],
[{x: 0, y: 1}, {x: 1, y: 1}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 2, y: 1}, {x: 0, y: 0}],
[{x: 0, y: 2}, {x: 2, y: 1}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 1, y: 2}]]
inputs_1.forEach(function (input) {
behaviorSet1(input);
});

function behaviorSet2(input) {
bp.registerBThread(""O_Player_Thread_2_1"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y), O(input[3].x, input[3].y)]});
bp.sync({waitFor:[X(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[3].x, input[3].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y)]},10);
});

bp.registerBThread(""O_Player_Thread_2_2"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y), X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_2_3"", function(){
bp.sync({request:[O(input[3].x, input[3].y), O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[1].x, input[1].y)]},6);
});

bp.registerBThread(""O_Player_Thread_2_4"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y)]},11);
});

bp.registerBThread(""O_Player_Thread_2_5"", function(){
bp.sync({request:[O(input[2].x, input[2].y)]},7);
});

}
var inputs_2 = [[{x: 2, y: 2}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 2, y: 1}],
[{x: 0, y: 0}, {x: 1, y: 2}, {x: 0, y: 0}, {x: 0, y: 1}],
[{x: 0, y: 1}, {x: 0, y: 1}, {x: 1, y: 1}, {x: 2, y: 1}]]
inputs_2.forEach(function (input) {
behaviorSet2(input);
});

function behaviorSet3(input) {
bp.registerBThread(""O_Player_Thread_3_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y)]},9);
});

bp.registerBThread(""O_Player_Thread_3_2"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), O(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y)]},4);
});

bp.registerBThread(""O_Player_Thread_3_3"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y), X(input[2].x, input[2].y), O(input[1].x, input[1].y), X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y)]},10);
});

bp.registerBThread(""O_Player_Thread_3_4"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[1].x, input[1].y)]});
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},11);
});

bp.registerBThread(""O_Player_Thread_3_5"", function(){
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},10);
});

}
var inputs_3 = [[{x: 1, y: 1}, {x: 0, y: 1}, {x: 2, y: 1}],
[{x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 2}],
[{x: 2, y: 0}, {x: 2, y: 1}, {x: 0, y: 0}],
[{x: 2, y: 0}, {x: 0, y: 2}, {x: 0, y: 1}],
[{x: 2, y: 1}, {x: 1, y: 2}, {x: 0, y: 2}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}]]
inputs_3.forEach(function (input) {
behaviorSet3(input);
});

function behaviorSet4(input) {
bp.registerBThread(""O_Player_Thread_4_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[8].x, input[8].y)]});
bp.sync({waitFor:[X(input[4].x, input[4].y), O(input[4].x, input[4].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[3].x, input[3].y)]},10);
});

}
var inputs_4 = [[{x: 1, y: 2}, {x: 0, y: 1}, {x: 1, y: 2}, {x: 1, y: 2}, {x: 1, y: 0}, {x: 0, y: 2}, {x: 2, y: 2}, {x: 0, y: 0}, {x: 1, y: 1}]]
inputs_4.forEach(function (input) {
behaviorSet4(input);
});

function behaviorSet5(input) {
bp.registerBThread(""O_Player_Thread_5_1"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), O(input[0].x, input[0].y)]});
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_5_2"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), O(input[0].x, input[0].y)]});
bp.sync({waitFor:[X(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},5);
});

bp.registerBThread(""O_Player_Thread_5_3"", function(){
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},5);
});

}
var inputs_5 = [[{x: 2, y: 1}],
[{x: 0, y: 2}],
[{x: 1, y: 1}],
[{x: 1, y: 2}],
[{x: 2, y: 2}],
[{x: 0, y: 1}]]
inputs_5.forEach(function (input) {
behaviorSet5(input);
});

function behaviorSet6(input) {
bp.registerBThread(""O_Player_Thread_6_1"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y), O(input[2].x, input[2].y), X(input[1].x, input[1].y)]});
bp.sync({waitFor:[O(input[5].x, input[5].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[3].x, input[3].y)]});
bp.sync({request:[O(input[4].x, input[4].y)]},8);
});

bp.registerBThread(""O_Player_Thread_6_2"", function(){
bp.sync({waitFor:[X(input[7].x, input[7].y), O(input[7].x, input[7].y), X(input[8].x, input[8].y)]});
bp.sync({request:[O(input[6].x, input[6].y), O(input[0].x, input[0].y), O(input[7].x, input[7].y), O(input[6].x, input[6].y)]},1);
});

}
var inputs_6 = [[{x: 2, y: 1}, {x: 2, y: 0}, {x: 2, y: 0}, {x: 1, y: 2}, {x: 1, y: 2}, {x: 0, y: 1}, {x: 2, y: 2}, {x: 1, y: 0}, {x: 0, y: 0}],
[{x: 0, y: 1}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 0, y: 2}],
[{x: 2, y: 1}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 0}, {x: 2, y: 2}],
[{x: 0, y: 1}, {x: 1, y: 0}, {x: 0, y: 0}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 1, y: 2}, {x: 0, y: 1}, {x: 2, y: 0}, {x: 0, y: 1}],
[{x: 2, y: 2}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 1}, {x: 2, y: 0}, {x: 1, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 0, y: 1}, {x: 1, y: 0}],
[{x: 0, y: 1}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 1, y: 0}, {x: 1, y: 0}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 2, y: 0}],
[{x: 1, y: 0}, {x: 0, y: 1}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 1, y: 2}, {x: 0, y: 2}, {x: 1, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}],
[{x: 1, y: 0}, {x: 1, y: 0}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 1, y: 1}, {x: 0, y: 2}, {x: 2, y: 2}, {x: 1, y: 0}, {x: 1, y: 0}]]
inputs_6.forEach(function (input) {
behaviorSet6(input);
});

function behaviorSet7(input) {
bp.registerBThread(""O_Player_Thread_7_1"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},2);
});

bp.registerBThread(""O_Player_Thread_7_2"", function(){
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},6);
});

bp.registerBThread(""O_Player_Thread_7_3"", function(){
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},8);
});

bp.registerBThread(""O_Player_Thread_7_4"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({waitFor:[X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},7);
});

}
var inputs_7 = [[{x: 0, y: 2}]]
inputs_7.forEach(function (input) {
behaviorSet7(input);
});

function behaviorSet8(input) {
bp.registerBThread(""O_Player_Thread_8_1"", function(){
bp.sync({waitFor:[X(input[3].x, input[3].y), X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},11);
});

}
var inputs_8 = [[{x: 2, y: 1}, {x: 1, y: 2}, {x: 1, y: 1}, {x: 1, y: 0}, {x: 0, y: 0}],
[{x: 1, y: 0}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 2}, {x: 2, y: 0}]]
inputs_8.forEach(function (input) {
behaviorSet8(input);
});

function behaviorSet9(input) {
bp.registerBThread(""O_Player_Thread_9_1"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},5);
});

}
var inputs_9 = [[{x: 0, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 2, y: 1}],
[{x: 0, y: 0}, {x: 1, y: 0}, {x: 0, y: 1}, {x: 1, y: 1}],
[{x: 2, y: 0}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 1}]]
inputs_9.forEach(function (input) {
behaviorSet9(input);
});

function behaviorSet10(input) {
bp.registerBThread(""O_Player_Thread_10_1"", function(){
bp.sync({request:[O(input[3].x, input[3].y), O(input[4].x, input[4].y)]},11);
});

bp.registerBThread(""O_Player_Thread_10_2"", function(){
bp.sync({request:[O(input[3].x, input[3].y)]},9);
});

bp.registerBThread(""O_Player_Thread_10_3"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y), X(input[2].x, input[2].y), X(input[0].x, input[0].y), O(input[3].x, input[3].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[3].x, input[3].y), O(input[1].x, input[1].y)]},4);
});

bp.registerBThread(""O_Player_Thread_10_4"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[4].x, input[4].y)]},8);
});

}
var inputs_10 = [[{x: 2, y: 1}, {x: 0, y: 1}, {x: 1, y: 2}, {x: 0, y: 1}, {x: 1, y: 0}],
[{x: 1, y: 2}, {x: 0, y: 1}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 0, y: 2}],
[{x: 1, y: 2}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}, {x: 0, y: 0}],
[{x: 2, y: 0}, {x: 2, y: 1}, {x: 0, y: 2}, {x: 1, y: 0}, {x: 0, y: 1}],
[{x: 0, y: 1}, {x: 2, y: 1}, {x: 0, y: 2}, {x: 0, y: 2}, {x: 2, y: 0}],
[{x: 0, y: 1}, {x: 1, y: 0}, {x: 1, y: 0}, {x: 0, y: 1}, {x: 2, y: 1}],
[{x: 0, y: 2}, {x: 1, y: 2}, {x: 0, y: 2}, {x: 2, y: 2}, {x: 2, y: 0}],
[{x: 0, y: 2}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}],
[{x: 1, y: 1}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 2, y: 0}, {x: 2, y: 1}]]
inputs_10.forEach(function (input) {
behaviorSet10(input);
});

"
13,2.0,3.0,29.77330779054917,7.0,4.0,39.0,77.0,20.0,39.0,0.0,11.0,"function behaviorSet1(input) {
bp.registerBThread(""O_Player_Thread_1_1"", function(){
bp.sync({waitFor:[X(input[4].x, input[4].y), O(input[4].x, input[4].y)]});
bp.sync({request:[O(input[6].x, input[6].y)]},5);
});

bp.registerBThread(""O_Player_Thread_1_2"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[1].x, input[1].y), X(input[5].x, input[5].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[1].x, input[1].y), O(input[5].x, input[5].y), O(input[4].x, input[4].y)]},9);
});

}
var inputs_1 = [[{x: 2, y: 1}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 1, y: 2}],
[{x: 0, y: 1}, {x: 1, y: 1}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 2, y: 1}, {x: 0, y: 0}],
[{x: 0, y: 2}, {x: 2, y: 1}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 1, y: 2}]]
inputs_1.forEach(function (input) {
behaviorSet1(input);
});

function behaviorSet2(input) {
bp.registerBThread(""O_Player_Thread_2_1"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y), O(input[3].x, input[3].y)]});
bp.sync({waitFor:[X(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[3].x, input[3].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y)]},10);
});

bp.registerBThread(""O_Player_Thread_2_2"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y), X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_2_3"", function(){
bp.sync({request:[O(input[3].x, input[3].y), O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[1].x, input[1].y)]},6);
});

bp.registerBThread(""O_Player_Thread_2_4"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y)]},11);
});

bp.registerBThread(""O_Player_Thread_2_5"", function(){
bp.sync({request:[O(input[2].x, input[2].y)]},7);
});

}
var inputs_2 = [[{x: 2, y: 2}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 2, y: 1}],
[{x: 0, y: 0}, {x: 1, y: 2}, {x: 0, y: 0}, {x: 0, y: 1}],
[{x: 0, y: 1}, {x: 0, y: 1}, {x: 1, y: 1}, {x: 2, y: 1}]]
inputs_2.forEach(function (input) {
behaviorSet2(input);
});

function behaviorSet3(input) {
bp.registerBThread(""O_Player_Thread_3_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y)]},9);
});

bp.registerBThread(""O_Player_Thread_3_2"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), O(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y)]},4);
});

bp.registerBThread(""O_Player_Thread_3_3"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y), X(input[2].x, input[2].y), O(input[1].x, input[1].y), X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y)]},10);
});

bp.registerBThread(""O_Player_Thread_3_4"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[1].x, input[1].y)]});
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},11);
});

bp.registerBThread(""O_Player_Thread_3_5"", function(){
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},10);
});

}
var inputs_3 = [[{x: 1, y: 1}, {x: 0, y: 1}, {x: 2, y: 1}],
[{x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 2}],
[{x: 2, y: 0}, {x: 2, y: 1}, {x: 0, y: 0}],
[{x: 2, y: 0}, {x: 0, y: 2}, {x: 0, y: 1}],
[{x: 2, y: 1}, {x: 1, y: 2}, {x: 0, y: 2}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}]]
inputs_3.forEach(function (input) {
behaviorSet3(input);
});

function behaviorSet4(input) {
bp.registerBThread(""O_Player_Thread_4_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[8].x, input[8].y)]});
bp.sync({waitFor:[X(input[4].x, input[4].y), O(input[4].x, input[4].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[3].x, input[3].y)]},10);
});

}
var inputs_4 = [[{x: 1, y: 2}, {x: 0, y: 1}, {x: 1, y: 2}, {x: 1, y: 2}, {x: 1, y: 0}, {x: 0, y: 2}, {x: 2, y: 2}, {x: 0, y: 0}, {x: 1, y: 1}]]
inputs_4.forEach(function (input) {
behaviorSet4(input);
});

function behaviorSet5(input) {
bp.registerBThread(""O_Player_Thread_5_1"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), O(input[0].x, input[0].y)]});
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_5_2"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), O(input[0].x, input[0].y)]});
bp.sync({waitFor:[X(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},5);
});

bp.registerBThread(""O_Player_Thread_5_3"", function(){
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},5);
});

}
var inputs_5 = [[{x: 2, y: 1}],
[{x: 0, y: 2}],
[{x: 1, y: 1}],
[{x: 1, y: 2}],
[{x: 2, y: 2}],
[{x: 0, y: 1}]]
inputs_5.forEach(function (input) {
behaviorSet5(input);
});

function behaviorSet6(input) {
bp.registerBThread(""O_Player_Thread_6_1"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y), O(input[2].x, input[2].y), X(input[1].x, input[1].y)]});
bp.sync({waitFor:[O(input[5].x, input[5].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[3].x, input[3].y)]});
bp.sync({request:[O(input[4].x, input[4].y)]},8);
});

bp.registerBThread(""O_Player_Thread_6_2"", function(){
bp.sync({waitFor:[X(input[7].x, input[7].y), O(input[7].x, input[7].y), X(input[8].x, input[8].y)]});
bp.sync({request:[O(input[6].x, input[6].y), O(input[0].x, input[0].y), O(input[7].x, input[7].y), O(input[6].x, input[6].y)]},1);
});

}
var inputs_6 = [[{x: 2, y: 1}, {x: 2, y: 0}, {x: 2, y: 0}, {x: 1, y: 2}, {x: 1, y: 2}, {x: 0, y: 1}, {x: 2, y: 2}, {x: 1, y: 0}, {x: 0, y: 0}],
[{x: 0, y: 1}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 0, y: 2}],
[{x: 2, y: 1}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 0}, {x: 2, y: 2}],
[{x: 0, y: 1}, {x: 1, y: 0}, {x: 0, y: 0}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 1, y: 2}, {x: 0, y: 1}, {x: 2, y: 0}, {x: 0, y: 1}],
[{x: 2, y: 2}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 1}, {x: 2, y: 0}, {x: 1, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 0, y: 1}, {x: 1, y: 0}],
[{x: 0, y: 1}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 1, y: 0}, {x: 1, y: 0}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 2, y: 0}],
[{x: 1, y: 0}, {x: 0, y: 1}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 1, y: 2}, {x: 0, y: 2}, {x: 1, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}],
[{x: 1, y: 0}, {x: 1, y: 0}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 1, y: 1}, {x: 0, y: 2}, {x: 2, y: 2}, {x: 1, y: 0}, {x: 1, y: 0}]]
inputs_6.forEach(function (input) {
behaviorSet6(input);
});

function behaviorSet7(input) {
bp.registerBThread(""O_Player_Thread_7_1"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},2);
});

bp.registerBThread(""O_Player_Thread_7_2"", function(){
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},6);
});

bp.registerBThread(""O_Player_Thread_7_3"", function(){
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},8);
});

bp.registerBThread(""O_Player_Thread_7_4"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({waitFor:[X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},7);
});

}
var inputs_7 = [[{x: 0, y: 2}]]
inputs_7.forEach(function (input) {
behaviorSet7(input);
});

function behaviorSet8(input) {
bp.registerBThread(""O_Player_Thread_8_1"", function(){
bp.sync({waitFor:[X(input[3].x, input[3].y), X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},11);
});

}
var inputs_8 = [[{x: 2, y: 1}, {x: 1, y: 2}, {x: 1, y: 1}, {x: 1, y: 0}, {x: 0, y: 0}],
[{x: 1, y: 0}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 2}, {x: 2, y: 0}]]
inputs_8.forEach(function (input) {
behaviorSet8(input);
});

function behaviorSet9(input) {
bp.registerBThread(""O_Player_Thread_9_1"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},5);
});

}
var inputs_9 = [[{x: 0, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 2, y: 1}],
[{x: 0, y: 0}, {x: 1, y: 0}, {x: 0, y: 1}, {x: 1, y: 1}],
[{x: 2, y: 0}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 1}]]
inputs_9.forEach(function (input) {
behaviorSet9(input);
});

function behaviorSet10(input) {
bp.registerBThread(""O_Player_Thread_10_1"", function(){
bp.sync({request:[O(input[3].x, input[3].y), O(input[4].x, input[4].y)]},11);
});

bp.registerBThread(""O_Player_Thread_10_2"", function(){
bp.sync({request:[O(input[3].x, input[3].y)]},9);
});

bp.registerBThread(""O_Player_Thread_10_3"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y), X(input[2].x, input[2].y), X(input[0].x, input[0].y), O(input[3].x, input[3].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[3].x, input[3].y), O(input[1].x, input[1].y)]},4);
});

bp.registerBThread(""O_Player_Thread_10_4"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[4].x, input[4].y)]},8);
});

}
var inputs_10 = [[{x: 2, y: 1}, {x: 0, y: 1}, {x: 1, y: 2}, {x: 0, y: 1}, {x: 1, y: 0}],
[{x: 1, y: 2}, {x: 0, y: 1}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 0, y: 2}],
[{x: 1, y: 2}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}, {x: 0, y: 0}],
[{x: 2, y: 0}, {x: 2, y: 1}, {x: 0, y: 2}, {x: 1, y: 0}, {x: 0, y: 1}],
[{x: 0, y: 1}, {x: 2, y: 1}, {x: 0, y: 2}, {x: 0, y: 2}, {x: 2, y: 0}],
[{x: 0, y: 1}, {x: 1, y: 0}, {x: 1, y: 0}, {x: 0, y: 1}, {x: 2, y: 1}],
[{x: 0, y: 2}, {x: 1, y: 2}, {x: 0, y: 2}, {x: 2, y: 2}, {x: 2, y: 0}],
[{x: 0, y: 2}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}],
[{x: 1, y: 1}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 2, y: 0}, {x: 2, y: 1}]]
inputs_10.forEach(function (input) {
behaviorSet10(input);
});

"
14,2.0,6.0,39.096340552651235,12.0,5.0,33.0,70.0,14.0,33.0,0.0,27.0,"function behaviorSet1(input) {
bp.registerBThread(""O_Player_Thread_1_1"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y), X(input[2].x, input[2].y), O(input[2].x, input[2].y), O(input[1].x, input[1].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[1].x, input[1].y)]},7);
});

bp.registerBThread(""O_Player_Thread_1_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[1].x, input[1].y)]},4);
});

bp.registerBThread(""O_Player_Thread_1_3"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), O(input[1].x, input[1].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y)]},11);
});

}
var inputs_1 = [[{x: 2, y: 1}, {x: 1, y: 0}, {x: 2, y: 1}],
[{x: 1, y: 0}, {x: 2, y: 2}, {x: 1, y: 2}]]
inputs_1.forEach(function (input) {
behaviorSet1(input);
});

function behaviorSet2(input) {
bp.registerBThread(""O_Player_Thread_2_1"", function(){
bp.sync({waitFor:[O(input[3].x, input[3].y)]});
bp.sync({request:[O(input[2].x, input[2].y)]},10);
});

bp.registerBThread(""O_Player_Thread_2_2"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y), X(input[1].x, input[1].y), O(input[0].x, input[0].y)]});
bp.sync({waitFor:[O(input[2].x, input[2].y), O(input[1].x, input[1].y), O(input[3].x, input[3].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},10);
});

bp.registerBThread(""O_Player_Thread_2_3"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[2].x, input[2].y), X(input[3].x, input[3].y), X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},5);
});

}
var inputs_2 = [[{x: 2, y: 0}, {x: 2, y: 1}, {x: 0, y: 2}, {x: 2, y: 1}],
[{x: 2, y: 2}, {x: 0, y: 2}, {x: 2, y: 2}, {x: 2, y: 2}],
[{x: 2, y: 2}, {x: 1, y: 2}, {x: 1, y: 1}, {x: 1, y: 2}],
[{x: 0, y: 2}, {x: 2, y: 0}, {x: 2, y: 0}, {x: 0, y: 2}],
[{x: 1, y: 0}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 1, y: 2}],
[{x: 0, y: 1}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 2, y: 1}],
[{x: 1, y: 0}, {x: 0, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}],
[{x: 0, y: 1}, {x: 1, y: 0}, {x: 2, y: 0}, {x: 0, y: 2}]]
inputs_2.forEach(function (input) {
behaviorSet2(input);
});

function behaviorSet3(input) {
bp.registerBThread(""O_Player_Thread_3_1"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},3);
});

bp.registerBThread(""O_Player_Thread_3_2"", function(){
bp.sync({waitFor:[O(input[1].x, input[1].y)]});
bp.sync({waitFor:[O(input[1].x, input[1].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},3);
});

bp.registerBThread(""O_Player_Thread_3_3"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[0].x, input[0].y), X(input[1].x, input[1].y), X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},3);
});

bp.registerBThread(""O_Player_Thread_3_4"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y)]},5);
});

bp.registerBThread(""O_Player_Thread_3_5"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), O(input[1].x, input[1].y), X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},2);
});

}
var inputs_3 = [[{x: 2, y: 2}, {x: 0, y: 2}],
[{x: 0, y: 0}, {x: 0, y: 1}]]
inputs_3.forEach(function (input) {
behaviorSet3(input);
});

function behaviorSet4(input) {
bp.registerBThread(""O_Player_Thread_4_1"", function(){
bp.sync({request:[O(input[0].x, input[0].y)]},2);
});

bp.registerBThread(""O_Player_Thread_4_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y), O(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},4);
});

}
var inputs_4 = [[{x: 1, y: 0}],
[{x: 2, y: 2}],
[{x: 0, y: 0}],
[{x: 1, y: 2}],
[{x: 1, y: 2}]]
inputs_4.forEach(function (input) {
behaviorSet4(input);
});

function behaviorSet5(input) {
bp.registerBThread(""O_Player_Thread_5_1"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[0].x, input[0].y), O(input[0].x, input[0].y)]});
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},3);
});

bp.registerBThread(""O_Player_Thread_5_2"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},1);
});

}
var inputs_5 = [[{x: 1, y: 0}],
[{x: 0, y: 0}],
[{x: 2, y: 0}],
[{x: 1, y: 2}],
[{x: 0, y: 0}],
[{x: 2, y: 0}]]
inputs_5.forEach(function (input) {
behaviorSet5(input);
});

function behaviorSet6(input) {
bp.registerBThread(""O_Player_Thread_6_1"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y), X(input[0].x, input[0].y)]});
bp.sync({waitFor:[X(input[6].x, input[6].y), O(input[8].x, input[8].y)]});
bp.sync({request:[O(input[2].x, input[2].y)]},9);
});

bp.registerBThread(""O_Player_Thread_6_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({waitFor:[X(input[0].x, input[0].y), O(input[8].x, input[8].y)]});
bp.sync({request:[O(input[5].x, input[5].y), O(input[7].x, input[7].y), O(input[8].x, input[8].y), O(input[8].x, input[8].y)]},11);
});

bp.registerBThread(""O_Player_Thread_6_3"", function(){
bp.sync({waitFor:[O(input[3].x, input[3].y), O(input[8].x, input[8].y), O(input[4].x, input[4].y)]});
bp.sync({waitFor:[O(input[7].x, input[7].y), O(input[7].x, input[7].y), X(input[7].x, input[7].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[8].x, input[8].y)]},1);
});

}
var inputs_6 = [[{x: 1, y: 0}, {x: 2, y: 1}, {x: 1, y: 2}, {x: 2, y: 2}, {x: 0, y: 1}, {x: 1, y: 2}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 0, y: 0}],
[{x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 2}, {x: 0, y: 2}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 0, y: 1}, {x: 1, y: 2}, {x: 2, y: 2}]]
inputs_6.forEach(function (input) {
behaviorSet6(input);
});

function behaviorSet7(input) {
bp.registerBThread(""O_Player_Thread_7_1"", function(){
bp.sync({request:[O(input[2].x, input[2].y), O(input[2].x, input[2].y)]},2);
});

}
var inputs_7 = [[{x: 1, y: 2}, {x: 0, y: 1}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 1, y: 1}]]
inputs_7.forEach(function (input) {
behaviorSet7(input);
});

function behaviorSet8(input) {
bp.registerBThread(""O_Player_Thread_8_1"", function(){
bp.sync({request:[O(input[7].x, input[7].y)]},1);
});

bp.registerBThread(""O_Player_Thread_8_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[4].x, input[4].y), O(input[6].x, input[6].y), O(input[3].x, input[3].y)]},10);
});

}
var inputs_8 = [[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 2}, {x: 1, y: 0}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 2, y: 0}, {x: 2, y: 0}, {x: 2, y: 0}]]
inputs_8.forEach(function (input) {
behaviorSet8(input);
});

function behaviorSet9(input) {
bp.registerBThread(""O_Player_Thread_9_1"", function(){
bp.sync({request:[O(input[6].x, input[6].y), O(input[3].x, input[3].y)]},3);
});

bp.registerBThread(""O_Player_Thread_9_2"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y), O(input[3].x, input[3].y), X(input[5].x, input[5].y), X(input[6].x, input[6].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[2].x, input[2].y), O(input[1].x, input[1].y)]},9);
});

bp.registerBThread(""O_Player_Thread_9_3"", function(){
bp.sync({waitFor:[X(input[3].x, input[3].y)]});
bp.sync({request:[O(input[6].x, input[6].y)]},2);
});

bp.registerBThread(""O_Player_Thread_9_4"", function(){
bp.sync({request:[O(input[2].x, input[2].y), O(input[3].x, input[3].y), O(input[1].x, input[1].y)]},6);
});

bp.registerBThread(""O_Player_Thread_9_5"", function(){
bp.sync({waitFor:[X(input[3].x, input[3].y), X(input[4].x, input[4].y), O(input[4].x, input[4].y), X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[6].x, input[6].y)]},8);
});

}
var inputs_9 = [[{x: 0, y: 1}, {x: 0, y: 1}, {x: 2, y: 2}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 0, y: 0}, {x: 2, y: 1}],
[{x: 0, y: 2}, {x: 0, y: 0}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 0, y: 1}, {x: 1, y: 1}, {x: 0, y: 2}],
[{x: 0, y: 1}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 0, y: 1}, {x: 2, y: 2}, {x: 2, y: 1}, {x: 0, y: 0}],
[{x: 2, y: 0}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 1}, {x: 0, y: 2}, {x: 1, y: 1}, {x: 0, y: 2}],
[{x: 0, y: 2}, {x: 1, y: 1}, {x: 1, y: 0}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}],
[{x: 0, y: 1}, {x: 1, y: 0}, {x: 1, y: 0}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 2, y: 2}, {x: 1, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 0, y: 0}],
[{x: 1, y: 1}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 2, y: 1}, {x: 0, y: 2}, {x: 0, y: 0}]]
inputs_9.forEach(function (input) {
behaviorSet9(input);
});

function behaviorSet10(input) {
bp.registerBThread(""O_Player_Thread_10_1"", function(){
bp.sync({waitFor:[O(input[3].x, input[3].y)]});
bp.sync({waitFor:[O(input[4].x, input[4].y), X(input[8].x, input[8].y), O(input[5].x, input[5].y), O(input[7].x, input[7].y)]});
bp.sync({request:[O(input[4].x, input[4].y), O(input[5].x, input[5].y), O(input[8].x, input[8].y), O(input[7].x, input[7].y)]},4);
});

bp.registerBThread(""O_Player_Thread_10_2"", function(){
bp.sync({waitFor:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), X(input[8].x, input[8].y), X(input[6].x, input[6].y)]});
bp.sync({request:[O(input[5].x, input[5].y), O(input[2].x, input[2].y)]},8);
});

bp.registerBThread(""O_Player_Thread_10_3"", function(){
bp.sync({request:[O(input[7].x, input[7].y)]},8);
});

bp.registerBThread(""O_Player_Thread_10_4"", function(){
bp.sync({waitFor:[X(input[5].x, input[5].y), X(input[7].x, input[7].y)]});
bp.sync({waitFor:[X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[7].x, input[7].y), O(input[7].x, input[7].y), O(input[8].x, input[8].y), O(input[2].x, input[2].y)]},11);
});

bp.registerBThread(""O_Player_Thread_10_5"", function(){
bp.sync({waitFor:[X(input[8].x, input[8].y), O(input[4].x, input[4].y), O(input[3].x, input[3].y)]});
bp.sync({waitFor:[X(input[8].x, input[8].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[5].x, input[5].y), O(input[1].x, input[1].y), O(input[8].x, input[8].y)]},2);
});

}
var inputs_10 = [[{x: 2, y: 2}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 0, y: 0}, {x: 1, y: 2}, {x: 1, y: 0}, {x: 1, y: 0}, {x: 2, y: 1}, {x: 0, y: 2}],
[{x: 0, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 2, y: 2}, {x: 2, y: 2}],
[{x: 1, y: 2}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 0, y: 0}, {x: 2, y: 2}, {x: 0, y: 0}, {x: 0, y: 0}, {x: 2, y: 2}, {x: 2, y: 0}],
[{x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 1}, {x: 1, y: 0}, {x: 0, y: 0}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 1, y: 1}, {x: 1, y: 2}],
[{x: 2, y: 0}, {x: 0, y: 1}, {x: 2, y: 0}, {x: 0, y: 0}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 1, y: 0}]]
inputs_10.forEach(function (input) {
behaviorSet10(input);
});

"
15,2.0,5.0,32.89835164835165,9.0,5.0,36.0,69.0,19.0,35.0,0.0,19.0,"function behaviorSet1(input) {
bp.registerBThread(""O_Player_Thread_1_1"", function(){
bp.sync({waitFor:[O(input[7].x, input[7].y), O(input[7].x, input[7].y)]});
bp.sync({waitFor:[X(input[5].x, input[5].y), O(input[8].x, input[8].y)]});
bp.sync({request:[O(input[6].x, input[6].y), O(input[3].x, input[3].y), O(input[1].x, input[1].y)]},2);
});

bp.registerBThread(""O_Player_Thread_1_2"", function(){
bp.sync({waitFor:[X(input[4].x, input[4].y), X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[7].x, input[7].y), O(input[6].x, input[6].y)]},5);
});

bp.registerBThread(""O_Player_Thread_1_3"", function(){
bp.sync({waitFor:[X(input[6].x, input[6].y), X(input[3].x, input[3].y), O(input[6].x, input[6].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[8].x, input[8].y)]},3);
});

bp.registerBThread(""O_Player_Thread_1_4"", function(){
bp.sync({request:[O(input[0].x, input[0].y), O(input[2].x, input[2].y)]},1);
});

bp.registerBThread(""O_Player_Thread_1_5"", function(){
bp.sync({request:[O(input[4].x, input[4].y), O(input[0].x, input[0].y), O(input[3].x, input[3].y)]},6);
});

}
var inputs_1 = [[{x: 2, y: 1}, {x: 2, y: 1}, {x: 1, y: 0}, {x: 2, y: 0}, {x: 0, y: 0}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 1, y: 2}, {x: 1, y: 1}],
[{x: 1, y: 1}, {x: 0, y: 2}, {x: 1, y: 1}, {x: 0, y: 1}, {x: 0, y: 2}, {x: 1, y: 1}, {x: 0, y: 1}, {x: 1, y: 0}, {x: 1, y: 0}]]
inputs_1.forEach(function (input) {
behaviorSet1(input);
});

function behaviorSet2(input) {
bp.registerBThread(""O_Player_Thread_2_1"", function(){
bp.sync({request:[O(input[2].x, input[2].y), O(input[1].x, input[1].y)]},3);
});

bp.registerBThread(""O_Player_Thread_2_2"", function(){
bp.sync({waitFor:[X(input[6].x, input[6].y)]});
bp.sync({waitFor:[O(input[1].x, input[1].y), O(input[5].x, input[5].y), X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[0].x, input[0].y)]},3);
});

}
var inputs_2 = [[{x: 1, y: 2}, {x: 2, y: 2}, {x: 2, y: 1}, {x: 2, y: 2}, {x: 1, y: 1}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 1, y: 2}],
[{x: 0, y: 2}, {x: 2, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 2, y: 2}, {x: 0, y: 0}, {x: 1, y: 0}],
[{x: 0, y: 1}, {x: 1, y: 2}, {x: 1, y: 1}, {x: 2, y: 2}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 0, y: 0}, {x: 1, y: 2}],
[{x: 0, y: 1}, {x: 2, y: 2}, {x: 1, y: 0}, {x: 2, y: 0}, {x: 2, y: 0}, {x: 1, y: 1}, {x: 2, y: 1}, {x: 2, y: 0}],
[{x: 1, y: 1}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 1, y: 2}, {x: 1, y: 2}, {x: 1, y: 1}, {x: 1, y: 1}],
[{x: 1, y: 0}, {x: 0, y: 1}, {x: 2, y: 0}, {x: 1, y: 1}, {x: 2, y: 2}, {x: 0, y: 0}, {x: 0, y: 1}, {x: 2, y: 1}]]
inputs_2.forEach(function (input) {
behaviorSet2(input);
});

function behaviorSet3(input) {
bp.registerBThread(""O_Player_Thread_3_1"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},7);
});

bp.registerBThread(""O_Player_Thread_3_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y)]},8);
});

}
var inputs_3 = [[{x: 0, y: 0}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 2, y: 0}],
[{x: 2, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}]]
inputs_3.forEach(function (input) {
behaviorSet3(input);
});

function behaviorSet4(input) {
bp.registerBThread(""O_Player_Thread_4_1"", function(){
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},10);
});

bp.registerBThread(""O_Player_Thread_4_2"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[1].x, input[1].y)]},8);
});

bp.registerBThread(""O_Player_Thread_4_3"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y)]},6);
});

bp.registerBThread(""O_Player_Thread_4_4"", function(){
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y)]},2);
});

}
var inputs_4 = [[{x: 1, y: 1}, {x: 2, y: 0}, {x: 0, y: 1}],
[{x: 1, y: 2}, {x: 2, y: 1}, {x: 1, y: 1}],
[{x: 2, y: 0}, {x: 0, y: 2}, {x: 2, y: 0}],
[{x: 1, y: 1}, {x: 0, y: 2}, {x: 2, y: 2}],
[{x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 2}],
[{x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 2}],
[{x: 1, y: 0}, {x: 2, y: 2}, {x: 0, y: 0}]]
inputs_4.forEach(function (input) {
behaviorSet4(input);
});

function behaviorSet5(input) {
bp.registerBThread(""O_Player_Thread_5_1"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[1].x, input[1].y)]},1);
});

bp.registerBThread(""O_Player_Thread_5_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), O(input[1].x, input[1].y), O(input[4].x, input[4].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[0].x, input[0].y)]},9);
});

bp.registerBThread(""O_Player_Thread_5_3"", function(){
bp.sync({request:[O(input[0].x, input[0].y), O(input[3].x, input[3].y), O(input[4].x, input[4].y)]},10);
});

bp.registerBThread(""O_Player_Thread_5_4"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[4].x, input[4].y), X(input[1].x, input[1].y)]});
bp.sync({waitFor:[O(input[4].x, input[4].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[4].x, input[4].y)]},1);
});

bp.registerBThread(""O_Player_Thread_5_5"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[4].x, input[4].y)]},10);
});

}
var inputs_5 = [[{x: 2, y: 1}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 1, y: 2}, {x: 0, y: 2}],
[{x: 2, y: 1}, {x: 0, y: 1}, {x: 1, y: 0}, {x: 0, y: 2}, {x: 0, y: 2}],
[{x: 1, y: 0}, {x: 1, y: 2}, {x: 0, y: 2}, {x: 1, y: 1}, {x: 0, y: 0}],
[{x: 2, y: 0}, {x: 1, y: 2}, {x: 2, y: 2}, {x: 0, y: 2}, {x: 0, y: 2}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 1, y: 1}, {x: 1, y: 2}]]
inputs_5.forEach(function (input) {
behaviorSet5(input);
});

function behaviorSet6(input) {
bp.registerBThread(""O_Player_Thread_6_1"", function(){
bp.sync({request:[O(input[4].x, input[4].y)]},10);
});

bp.registerBThread(""O_Player_Thread_6_2"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[0].x, input[0].y)]},1);
});

bp.registerBThread(""O_Player_Thread_6_3"", function(){
bp.sync({waitFor:[O(input[3].x, input[3].y), O(input[5].x, input[5].y)]});
bp.sync({request:[O(input[1].x, input[1].y)]},3);
});

bp.registerBThread(""O_Player_Thread_6_4"", function(){
bp.sync({request:[O(input[3].x, input[3].y), O(input[2].x, input[2].y)]},4);
});

bp.registerBThread(""O_Player_Thread_6_5"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[3].x, input[3].y), O(input[0].x, input[0].y)]},6);
});

}
var inputs_6 = [[{x: 2, y: 0}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 2}, {x: 1, y: 1}, {x: 1, y: 0}],
[{x: 2, y: 1}, {x: 2, y: 1}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 1, y: 0}, {x: 2, y: 2}],
[{x: 0, y: 0}, {x: 2, y: 2}, {x: 0, y: 1}, {x: 1, y: 0}, {x: 2, y: 2}, {x: 1, y: 0}],
[{x: 1, y: 2}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}, {x: 1, y: 0}, {x: 1, y: 1}],
[{x: 1, y: 0}, {x: 0, y: 0}, {x: 2, y: 0}, {x: 1, y: 1}, {x: 0, y: 1}, {x: 1, y: 2}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 2, y: 2}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}],
[{x: 1, y: 2}, {x: 0, y: 0}, {x: 1, y: 2}, {x: 0, y: 1}, {x: 1, y: 0}, {x: 0, y: 1}],
[{x: 0, y: 2}, {x: 0, y: 2}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 1, y: 2}]]
inputs_6.forEach(function (input) {
behaviorSet6(input);
});

function behaviorSet7(input) {
bp.registerBThread(""O_Player_Thread_7_1"", function(){
bp.sync({waitFor:[O(input[3].x, input[3].y), X(input[5].x, input[5].y), X(input[4].x, input[4].y), O(input[6].x, input[6].y)]});
bp.sync({waitFor:[X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[5].x, input[5].y)]},11);
});

bp.registerBThread(""O_Player_Thread_7_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[6].x, input[6].y)]},4);
});

bp.registerBThread(""O_Player_Thread_7_3"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[6].x, input[6].y), O(input[0].x, input[0].y)]},10);
});

bp.registerBThread(""O_Player_Thread_7_4"", function(){
bp.sync({waitFor:[O(input[3].x, input[3].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[4].x, input[4].y)]},5);
});

}
var inputs_7 = [[{x: 2, y: 2}, {x: 2, y: 1}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 0, y: 1}, {x: 2, y: 2}],
[{x: 1, y: 1}, {x: 2, y: 2}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 2, y: 2}],
[{x: 1, y: 1}, {x: 1, y: 0}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 2, y: 2}, {x: 0, y: 1}],
[{x: 0, y: 1}, {x: 2, y: 0}, {x: 0, y: 2}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 1, y: 1}, {x: 1, y: 1}]]
inputs_7.forEach(function (input) {
behaviorSet7(input);
});

function behaviorSet8(input) {
bp.registerBThread(""O_Player_Thread_8_1"", function(){
bp.sync({waitFor:[O(input[3].x, input[3].y), X(input[0].x, input[0].y), O(input[1].x, input[1].y), O(input[6].x, input[6].y)]});
bp.sync({request:[O(input[1].x, input[1].y)]},4);
});

bp.registerBThread(""O_Player_Thread_8_2"", function(){
bp.sync({waitFor:[X(input[4].x, input[4].y), O(input[3].x, input[3].y)]});
bp.sync({waitFor:[O(input[3].x, input[3].y), X(input[5].x, input[5].y), X(input[1].x, input[1].y), X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[3].x, input[3].y), O(input[6].x, input[6].y), O(input[6].x, input[6].y)]},1);
});

bp.registerBThread(""O_Player_Thread_8_3"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[6].x, input[6].y), O(input[6].x, input[6].y), O(input[0].x, input[0].y), O(input[4].x, input[4].y)]},10);
});

}
var inputs_8 = [[{x: 2, y: 2}, {x: 2, y: 0}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 0, y: 1}, {x: 0, y: 2}],
[{x: 1, y: 1}, {x: 0, y: 2}, {x: 1, y: 0}, {x: 2, y: 0}, {x: 1, y: 1}, {x: 2, y: 1}, {x: 0, y: 2}],
[{x: 1, y: 1}, {x: 2, y: 1}, {x: 1, y: 0}, {x: 2, y: 0}, {x: 1, y: 2}, {x: 0, y: 1}, {x: 2, y: 0}],
[{x: 1, y: 2}, {x: 2, y: 2}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 1, y: 0}],
[{x: 1, y: 0}, {x: 0, y: 2}, {x: 1, y: 2}, {x: 0, y: 0}, {x: 2, y: 2}, {x: 1, y: 0}, {x: 1, y: 2}],
[{x: 2, y: 2}, {x: 1, y: 1}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 0}, {x: 2, y: 0}, {x: 0, y: 2}]]
inputs_8.forEach(function (input) {
behaviorSet8(input);
});

function behaviorSet9(input) {
bp.registerBThread(""O_Player_Thread_9_1"", function(){
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},2);
});

bp.registerBThread(""O_Player_Thread_9_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},10);
});

bp.registerBThread(""O_Player_Thread_9_3"", function(){
bp.sync({request:[O(input[0].x, input[0].y)]},11);
});

bp.registerBThread(""O_Player_Thread_9_4"", function(){
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},8);
});

}
var inputs_9 = [[{x: 1, y: 0}],
[{x: 2, y: 0}]]
inputs_9.forEach(function (input) {
behaviorSet9(input);
});

function behaviorSet10(input) {
bp.registerBThread(""O_Player_Thread_10_1"", function(){
bp.sync({request:[O(input[3].x, input[3].y), O(input[2].x, input[2].y), O(input[2].x, input[2].y)]},6);
});

}
var inputs_10 = [[{x: 0, y: 2}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}],
[{x: 2, y: 2}, {x: 2, y: 2}, {x: 1, y: 2}, {x: 1, y: 2}],
[{x: 2, y: 2}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}],
[{x: 2, y: 0}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 0}],
[{x: 0, y: 2}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 1, y: 2}],
[{x: 0, y: 0}, {x: 0, y: 2}, {x: 1, y: 2}, {x: 1, y: 1}],
[{x: 0, y: 1}, {x: 1, y: 1}, {x: 2, y: 1}, {x: 0, y: 0}],
[{x: 0, y: 1}, {x: 0, y: 1}, {x: 1, y: 1}, {x: 0, y: 2}],
[{x: 0, y: 0}, {x: 0, y: 1}, {x: 1, y: 1}, {x: 0, y: 1}]]
inputs_10.forEach(function (input) {
behaviorSet10(input);
});

"
16,3.0,3.0,44.11764705882353,19.0,3.0,28.0,63.0,19.0,39.0,0.0,22.0,"function behaviorSet1(input) {
bp.registerBThread(""O_Player_Thread_1_1"", function(){
bp.sync({waitFor:[X(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[5].x, input[5].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[2].x, input[2].y), O(input[3].x, input[3].y)]},9);
});

}
var inputs_1 = [[{x: 0, y: 1}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 1, y: 1}, {x: 2, y: 1}],
[{x: 0, y: 2}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 0}],
[{x: 1, y: 0}, {x: 1, y: 0}, {x: 2, y: 2}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 2}],
[{x: 1, y: 1}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 2}],
[{x: 1, y: 2}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 1, y: 2}],
[{x: 1, y: 2}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 1, y: 1}, {x: 0, y: 2}, {x: 2, y: 0}],
[{x: 1, y: 2}, {x: 2, y: 1}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 2}]]
inputs_1.forEach(function (input) {
behaviorSet1(input);
});

function behaviorSet2(input) {
bp.registerBThread(""O_Player_Thread_2_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[2].x, input[2].y), X(input[1].x, input[1].y), O(input[4].x, input[4].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[4].x, input[4].y), O(input[1].x, input[1].y)]},3);
});

}
var inputs_2 = [[{x: 1, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 2, y: 1}, {x: 0, y: 0}]]
inputs_2.forEach(function (input) {
behaviorSet2(input);
});

function behaviorSet3(input) {
bp.registerBThread(""O_Player_Thread_3_1"", function(){
bp.sync({waitFor:[O(input[1].x, input[1].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[1].x, input[1].y), O(input[2].x, input[2].y)]},7);
});

bp.registerBThread(""O_Player_Thread_3_2"", function(){
bp.sync({waitFor:[O(input[1].x, input[1].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[2].x, input[2].y)]},10);
});

bp.registerBThread(""O_Player_Thread_3_3"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y)]},4);
});

bp.registerBThread(""O_Player_Thread_3_4"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y), O(input[1].x, input[1].y)]});
bp.sync({waitFor:[X(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y), O(input[1].x, input[1].y)]},11);
});

}
var inputs_3 = [[{x: 0, y: 2}, {x: 2, y: 2}, {x: 2, y: 2}],
[{x: 2, y: 1}, {x: 0, y: 2}, {x: 1, y: 2}],
[{x: 2, y: 0}, {x: 2, y: 0}, {x: 1, y: 0}],
[{x: 2, y: 2}, {x: 1, y: 2}, {x: 0, y: 2}],
[{x: 2, y: 2}, {x: 0, y: 0}, {x: 2, y: 2}],
[{x: 0, y: 0}, {x: 1, y: 0}, {x: 0, y: 1}]]
inputs_3.forEach(function (input) {
behaviorSet3(input);
});

function behaviorSet4(input) {
bp.registerBThread(""O_Player_Thread_4_1"", function(){
bp.sync({request:[O(input[5].x, input[5].y), O(input[6].x, input[6].y), O(input[3].x, input[3].y)]},6);
});

}
var inputs_4 = [[{x: 0, y: 0}, {x: 1, y: 1}, {x: 2, y: 1}, {x: 1, y: 0}, {x: 1, y: 0}, {x: 2, y: 2}, {x: 2, y: 0}],
[{x: 1, y: 1}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 0, y: 1}, {x: 2, y: 0}, {x: 0, y: 2}]]
inputs_4.forEach(function (input) {
behaviorSet4(input);
});

function behaviorSet5(input) {
bp.registerBThread(""O_Player_Thread_5_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[0].x, input[0].y), X(input[2].x, input[2].y), X(input[6].x, input[6].y)]});
bp.sync({request:[O(input[5].x, input[5].y), O(input[0].x, input[0].y), O(input[4].x, input[4].y)]},9);
});

bp.registerBThread(""O_Player_Thread_5_2"", function(){
bp.sync({request:[O(input[0].x, input[0].y), O(input[6].x, input[6].y)]},7);
});

bp.registerBThread(""O_Player_Thread_5_3"", function(){
bp.sync({waitFor:[O(input[3].x, input[3].y), O(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[3].x, input[3].y)]});
bp.sync({request:[O(input[6].x, input[6].y), O(input[0].x, input[0].y), O(input[3].x, input[3].y), O(input[1].x, input[1].y)]},11);
});

bp.registerBThread(""O_Player_Thread_5_4"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), O(input[0].x, input[0].y)]});
bp.sync({waitFor:[O(input[6].x, input[6].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[2].x, input[2].y), O(input[1].x, input[1].y)]},2);
});

bp.registerBThread(""O_Player_Thread_5_5"", function(){
bp.sync({waitFor:[O(input[4].x, input[4].y), O(input[1].x, input[1].y), O(input[5].x, input[5].y), O(input[6].x, input[6].y)]});
bp.sync({request:[O(input[2].x, input[2].y)]},2);
});

}
var inputs_5 = [[{x: 0, y: 1}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 2}, {x: 1, y: 0}, {x: 1, y: 2}],
[{x: 2, y: 0}, {x: 0, y: 1}, {x: 0, y: 2}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 0, y: 0}, {x: 0, y: 2}],
[{x: 0, y: 0}, {x: 2, y: 0}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 1, y: 0}, {x: 0, y: 2}, {x: 2, y: 0}],
[{x: 2, y: 2}, {x: 0, y: 1}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 1, y: 0}, {x: 1, y: 2}],
[{x: 0, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 2, y: 2}]]
inputs_5.forEach(function (input) {
behaviorSet5(input);
});

function behaviorSet6(input) {
bp.registerBThread(""O_Player_Thread_6_1"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[1].x, input[1].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y)]},6);
});

bp.registerBThread(""O_Player_Thread_6_2"", function(){
bp.sync({request:[O(input[2].x, input[2].y)]},2);
});

bp.registerBThread(""O_Player_Thread_6_3"", function(){
bp.sync({request:[O(input[2].x, input[2].y), O(input[1].x, input[1].y), O(input[2].x, input[2].y)]},7);
});

bp.registerBThread(""O_Player_Thread_6_4"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[1].x, input[1].y)]},2);
});

}
var inputs_6 = [[{x: 0, y: 0}, {x: 0, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 2}, {x: 0, y: 2}]]
inputs_6.forEach(function (input) {
behaviorSet6(input);
});

function behaviorSet7(input) {
bp.registerBThread(""O_Player_Thread_7_1"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y), X(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[3].x, input[3].y)]},3);
});

bp.registerBThread(""O_Player_Thread_7_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[3].x, input[3].y)]},7);
});

bp.registerBThread(""O_Player_Thread_7_3"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[3].x, input[3].y)]},11);
});

bp.registerBThread(""O_Player_Thread_7_4"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[3].x, input[3].y)]},5);
});

}
var inputs_7 = [[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 2, y: 2}],
[{x: 1, y: 0}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 1, y: 1}],
[{x: 0, y: 0}, {x: 2, y: 2}, {x: 0, y: 2}, {x: 1, y: 0}],
[{x: 1, y: 0}, {x: 1, y: 0}, {x: 0, y: 0}, {x: 2, y: 2}],
[{x: 1, y: 2}, {x: 0, y: 0}, {x: 2, y: 2}, {x: 2, y: 1}],
[{x: 2, y: 1}, {x: 0, y: 0}, {x: 0, y: 0}, {x: 0, y: 2}]]
inputs_7.forEach(function (input) {
behaviorSet7(input);
});

function behaviorSet8(input) {
bp.registerBThread(""O_Player_Thread_8_1"", function(){
bp.sync({waitFor:[X(input[4].x, input[4].y)]});
bp.sync({waitFor:[X(input[3].x, input[3].y), O(input[4].x, input[4].y), X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[2].x, input[2].y)]},6);
});

bp.registerBThread(""O_Player_Thread_8_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[4].x, input[4].y)]},8);
});

bp.registerBThread(""O_Player_Thread_8_3"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y), O(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[4].x, input[4].y)]});
bp.sync({waitFor:[O(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[3].x, input[3].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[4].x, input[4].y), O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[4].x, input[4].y)]},6);
});

}
var inputs_8 = [[{x: 0, y: 1}, {x: 2, y: 0}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}],
[{x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 2}]]
inputs_8.forEach(function (input) {
behaviorSet8(input);
});

function behaviorSet9(input) {
bp.registerBThread(""O_Player_Thread_9_1"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},9);
});

bp.registerBThread(""O_Player_Thread_9_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},2);
});

bp.registerBThread(""O_Player_Thread_9_3"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y), O(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},1);
});

bp.registerBThread(""O_Player_Thread_9_4"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), O(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y), O(input[0].x, input[0].y), X(input[0].x, input[0].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},3);
});

}
var inputs_9 = [[{x: 0, y: 0}],
[{x: 1, y: 1}],
[{x: 0, y: 0}],
[{x: 2, y: 1}]]
inputs_9.forEach(function (input) {
behaviorSet9(input);
});

function behaviorSet10(input) {
bp.registerBThread(""O_Player_Thread_10_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},8);
});

bp.registerBThread(""O_Player_Thread_10_2"", function(){
bp.sync({request:[O(input[0].x, input[0].y)]},1);
});

}
var inputs_10 = [[{x: 0, y: 0}, {x: 0, y: 1}, {x: 1, y: 0}],
[{x: 2, y: 1}, {x: 2, y: 0}, {x: 2, y: 2}],
[{x: 0, y: 2}, {x: 0, y: 2}, {x: 1, y: 0}],
[{x: 2, y: 1}, {x: 1, y: 2}, {x: 0, y: 0}],
[{x: 0, y: 2}, {x: 0, y: 0}, {x: 2, y: 2}],
[{x: 2, y: 2}, {x: 1, y: 0}, {x: 0, y: 0}],
[{x: 1, y: 2}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 2}, {x: 2, y: 1}, {x: 2, y: 0}]]
inputs_10.forEach(function (input) {
behaviorSet10(input);
});

"
17,3.0,1.0,29.32330827067669,11.0,6.0,33.0,77.0,31.0,37.0,0.0,22.0,"function behaviorSet1(input) {
bp.registerBThread(""O_Player_Thread_1_1"", function(){
bp.sync({waitFor:[X(input[4].x, input[4].y), O(input[4].x, input[4].y)]});
bp.sync({request:[O(input[6].x, input[6].y)]},5);
});

bp.registerBThread(""O_Player_Thread_1_2"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[1].x, input[1].y), X(input[5].x, input[5].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[1].x, input[1].y), O(input[5].x, input[5].y), O(input[4].x, input[4].y)]},9);
});

}
var inputs_1 = [[{x: 1, y: 1}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 1, y: 2}],
[{x: 0, y: 1}, {x: 1, y: 1}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 2, y: 1}, {x: 0, y: 0}],
[{x: 0, y: 2}, {x: 2, y: 1}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 1, y: 2}]]
inputs_1.forEach(function (input) {
behaviorSet1(input);
});

function behaviorSet2(input) {
bp.registerBThread(""O_Player_Thread_2_1"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y), O(input[3].x, input[3].y)]});
bp.sync({waitFor:[X(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[3].x, input[3].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y)]},10);
});

bp.registerBThread(""O_Player_Thread_2_2"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y), X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_2_3"", function(){
bp.sync({request:[O(input[3].x, input[3].y), O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[1].x, input[1].y)]},6);
});

bp.registerBThread(""O_Player_Thread_2_4"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y)]},11);
});

bp.registerBThread(""O_Player_Thread_2_5"", function(){
bp.sync({request:[O(input[2].x, input[2].y)]},7);
});

}
var inputs_2 = [[{x: 2, y: 2}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 2, y: 1}],
[{x: 0, y: 0}, {x: 1, y: 2}, {x: 0, y: 0}, {x: 0, y: 1}],
[{x: 0, y: 1}, {x: 0, y: 1}, {x: 1, y: 1}, {x: 2, y: 1}]]
inputs_2.forEach(function (input) {
behaviorSet2(input);
});

function behaviorSet3(input) {
bp.registerBThread(""O_Player_Thread_3_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y)]},9);
});

bp.registerBThread(""O_Player_Thread_3_2"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), O(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y)]},4);
});

bp.registerBThread(""O_Player_Thread_3_3"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y), X(input[2].x, input[2].y), O(input[1].x, input[1].y), X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y)]},10);
});

bp.registerBThread(""O_Player_Thread_3_4"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[1].x, input[1].y)]});
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},11);
});

bp.registerBThread(""O_Player_Thread_3_5"", function(){
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},10);
});

}
var inputs_3 = [[{x: 1, y: 1}, {x: 0, y: 1}, {x: 2, y: 1}],
[{x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 2}],
[{x: 2, y: 0}, {x: 2, y: 1}, {x: 0, y: 0}],
[{x: 2, y: 0}, {x: 0, y: 2}, {x: 0, y: 1}],
[{x: 2, y: 1}, {x: 1, y: 2}, {x: 0, y: 2}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}]]
inputs_3.forEach(function (input) {
behaviorSet3(input);
});

function behaviorSet4(input) {
bp.registerBThread(""O_Player_Thread_4_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[8].x, input[8].y)]});
bp.sync({waitFor:[X(input[4].x, input[4].y), O(input[4].x, input[4].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[3].x, input[3].y)]},10);
});

}
var inputs_4 = [[{x: 1, y: 2}, {x: 0, y: 1}, {x: 1, y: 2}, {x: 1, y: 2}, {x: 1, y: 0}, {x: 0, y: 2}, {x: 2, y: 2}, {x: 0, y: 0}, {x: 1, y: 1}]]
inputs_4.forEach(function (input) {
behaviorSet4(input);
});

function behaviorSet5(input) {
bp.registerBThread(""O_Player_Thread_5_1"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), O(input[0].x, input[0].y)]});
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_5_2"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), O(input[0].x, input[0].y)]});
bp.sync({waitFor:[X(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},5);
});

bp.registerBThread(""O_Player_Thread_5_3"", function(){
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},5);
});

}
var inputs_5 = [[{x: 2, y: 1}],
[{x: 0, y: 2}],
[{x: 1, y: 1}],
[{x: 1, y: 2}],
[{x: 2, y: 2}],
[{x: 0, y: 1}]]
inputs_5.forEach(function (input) {
behaviorSet5(input);
});

function behaviorSet6(input) {
bp.registerBThread(""O_Player_Thread_6_1"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y), O(input[2].x, input[2].y), X(input[1].x, input[1].y)]});
bp.sync({waitFor:[O(input[5].x, input[5].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[3].x, input[3].y)]});
bp.sync({request:[O(input[4].x, input[4].y)]},8);
});

bp.registerBThread(""O_Player_Thread_6_2"", function(){
bp.sync({waitFor:[X(input[7].x, input[7].y), O(input[7].x, input[7].y), X(input[8].x, input[8].y)]});
bp.sync({request:[O(input[6].x, input[6].y), O(input[0].x, input[0].y), O(input[7].x, input[7].y), O(input[6].x, input[6].y)]},1);
});

}
var inputs_6 = [[{x: 2, y: 1}, {x: 2, y: 0}, {x: 2, y: 0}, {x: 1, y: 2}, {x: 1, y: 2}, {x: 0, y: 1}, {x: 2, y: 2}, {x: 1, y: 0}, {x: 0, y: 0}],
[{x: 0, y: 1}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 0, y: 2}],
[{x: 2, y: 1}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 0}, {x: 2, y: 2}],
[{x: 0, y: 1}, {x: 1, y: 0}, {x: 0, y: 0}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 1, y: 2}, {x: 0, y: 1}, {x: 2, y: 0}, {x: 0, y: 1}],
[{x: 2, y: 2}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 1}, {x: 2, y: 0}, {x: 1, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 0, y: 1}, {x: 1, y: 0}],
[{x: 0, y: 1}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 1, y: 0}, {x: 1, y: 0}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 2, y: 0}],
[{x: 1, y: 0}, {x: 0, y: 1}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 1, y: 2}, {x: 0, y: 2}, {x: 1, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}],
[{x: 1, y: 0}, {x: 1, y: 0}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 1, y: 1}, {x: 0, y: 2}, {x: 2, y: 2}, {x: 1, y: 0}, {x: 1, y: 0}]]
inputs_6.forEach(function (input) {
behaviorSet6(input);
});

function behaviorSet7(input) {
bp.registerBThread(""O_Player_Thread_7_1"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},2);
});

bp.registerBThread(""O_Player_Thread_7_2"", function(){
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},6);
});

bp.registerBThread(""O_Player_Thread_7_3"", function(){
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},8);
});

bp.registerBThread(""O_Player_Thread_7_4"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({waitFor:[X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},7);
});

}
var inputs_7 = [[{x: 0, y: 2}]]
inputs_7.forEach(function (input) {
behaviorSet7(input);
});

function behaviorSet8(input) {
bp.registerBThread(""O_Player_Thread_8_1"", function(){
bp.sync({waitFor:[X(input[3].x, input[3].y), X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},11);
});

}
var inputs_8 = [[{x: 2, y: 1}, {x: 1, y: 2}, {x: 1, y: 1}, {x: 1, y: 0}, {x: 0, y: 0}],
[{x: 1, y: 0}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 2}, {x: 2, y: 0}]]
inputs_8.forEach(function (input) {
behaviorSet8(input);
});

function behaviorSet9(input) {
bp.registerBThread(""O_Player_Thread_9_1"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},5);
});

}
var inputs_9 = [[{x: 0, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 2, y: 1}],
[{x: 0, y: 0}, {x: 1, y: 0}, {x: 0, y: 1}, {x: 1, y: 1}],
[{x: 2, y: 0}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 1}]]
inputs_9.forEach(function (input) {
behaviorSet9(input);
});

function behaviorSet10(input) {
bp.registerBThread(""O_Player_Thread_10_1"", function(){
bp.sync({request:[O(input[3].x, input[3].y), O(input[4].x, input[4].y)]},11);
});

bp.registerBThread(""O_Player_Thread_10_2"", function(){
bp.sync({request:[O(input[3].x, input[3].y)]},9);
});

bp.registerBThread(""O_Player_Thread_10_3"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y), X(input[2].x, input[2].y), X(input[0].x, input[0].y), O(input[3].x, input[3].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[3].x, input[3].y), O(input[1].x, input[1].y)]},4);
});

bp.registerBThread(""O_Player_Thread_10_4"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[4].x, input[4].y)]},8);
});

}
var inputs_10 = [[{x: 2, y: 1}, {x: 0, y: 1}, {x: 1, y: 2}, {x: 0, y: 1}, {x: 1, y: 0}],
[{x: 1, y: 2}, {x: 0, y: 1}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 0, y: 2}],
[{x: 1, y: 2}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}, {x: 0, y: 0}],
[{x: 2, y: 0}, {x: 2, y: 1}, {x: 0, y: 2}, {x: 1, y: 0}, {x: 0, y: 1}],
[{x: 0, y: 1}, {x: 2, y: 1}, {x: 0, y: 2}, {x: 0, y: 2}, {x: 2, y: 0}],
[{x: 0, y: 1}, {x: 1, y: 0}, {x: 1, y: 0}, {x: 0, y: 1}, {x: 2, y: 1}],
[{x: 0, y: 2}, {x: 1, y: 2}, {x: 0, y: 2}, {x: 2, y: 2}, {x: 2, y: 0}],
[{x: 0, y: 2}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}],
[{x: 1, y: 1}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 2, y: 0}, {x: 2, y: 1}]]
inputs_10.forEach(function (input) {
behaviorSet10(input);
});

"
18,3.0,2.0,36.86507936507937,11.0,6.0,33.0,59.0,17.0,31.0,0.0,22.0,"function behaviorSet1(input) {
bp.registerBThread(""O_Player_Thread_1_1"", function(){
bp.sync({waitFor:[O(input[7].x, input[7].y), O(input[7].x, input[7].y)]});
bp.sync({waitFor:[X(input[5].x, input[5].y), O(input[8].x, input[8].y)]});
bp.sync({request:[O(input[6].x, input[6].y), O(input[3].x, input[3].y), O(input[1].x, input[1].y)]},2);
});

bp.registerBThread(""O_Player_Thread_1_2"", function(){
bp.sync({waitFor:[X(input[4].x, input[4].y), X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[7].x, input[7].y), O(input[6].x, input[6].y)]},5);
});

bp.registerBThread(""O_Player_Thread_1_3"", function(){
bp.sync({waitFor:[X(input[6].x, input[6].y), X(input[3].x, input[3].y), O(input[6].x, input[6].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[8].x, input[8].y)]},3);
});

bp.registerBThread(""O_Player_Thread_1_4"", function(){
bp.sync({request:[O(input[0].x, input[0].y), O(input[2].x, input[2].y)]},1);
});

bp.registerBThread(""O_Player_Thread_1_5"", function(){
bp.sync({request:[O(input[4].x, input[4].y), O(input[0].x, input[0].y), O(input[3].x, input[3].y)]},6);
});

}
var inputs_1 = [[{x: 2, y: 1}, {x: 2, y: 1}, {x: 1, y: 0}, {x: 2, y: 0}, {x: 0, y: 0}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 1, y: 2}, {x: 1, y: 1}],
[{x: 1, y: 1}, {x: 0, y: 2}, {x: 1, y: 1}, {x: 0, y: 1}, {x: 0, y: 2}, {x: 1, y: 1}, {x: 0, y: 1}, {x: 1, y: 0}, {x: 1, y: 0}]]
inputs_1.forEach(function (input) {
behaviorSet1(input);
});

function behaviorSet2(input) {
bp.registerBThread(""O_Player_Thread_2_1"", function(){
bp.sync({request:[O(input[2].x, input[2].y), O(input[1].x, input[1].y)]},3);
});

bp.registerBThread(""O_Player_Thread_2_2"", function(){
bp.sync({waitFor:[X(input[6].x, input[6].y)]});
bp.sync({waitFor:[O(input[1].x, input[1].y), O(input[5].x, input[5].y), X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[0].x, input[0].y)]},3);
});

}
var inputs_2 = [[{x: 1, y: 2}, {x: 2, y: 2}, {x: 2, y: 1}, {x: 2, y: 2}, {x: 1, y: 1}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 1, y: 2}],
[{x: 0, y: 2}, {x: 2, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 2, y: 2}, {x: 0, y: 0}, {x: 1, y: 0}],
[{x: 0, y: 1}, {x: 1, y: 2}, {x: 1, y: 1}, {x: 2, y: 2}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 0, y: 0}, {x: 1, y: 2}],
[{x: 0, y: 1}, {x: 2, y: 2}, {x: 1, y: 0}, {x: 2, y: 0}, {x: 2, y: 0}, {x: 1, y: 1}, {x: 2, y: 1}, {x: 2, y: 0}],
[{x: 1, y: 1}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 1, y: 2}, {x: 1, y: 2}, {x: 1, y: 1}, {x: 1, y: 1}],
[{x: 1, y: 0}, {x: 0, y: 1}, {x: 2, y: 0}, {x: 1, y: 1}, {x: 2, y: 2}, {x: 0, y: 0}, {x: 0, y: 1}, {x: 2, y: 1}]]
inputs_2.forEach(function (input) {
behaviorSet2(input);
});

function behaviorSet3(input) {
bp.registerBThread(""O_Player_Thread_3_1"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},7);
});

bp.registerBThread(""O_Player_Thread_3_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y)]},8);
});

}
var inputs_3 = [[{x: 0, y: 0}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 2, y: 0}],
[{x: 2, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}]]
inputs_3.forEach(function (input) {
behaviorSet3(input);
});

function behaviorSet4(input) {
bp.registerBThread(""O_Player_Thread_4_1"", function(){
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},10);
});

bp.registerBThread(""O_Player_Thread_4_2"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[1].x, input[1].y)]},8);
});

bp.registerBThread(""O_Player_Thread_4_3"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y)]},6);
});

bp.registerBThread(""O_Player_Thread_4_4"", function(){
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y)]},2);
});

}
var inputs_4 = [[{x: 1, y: 1}, {x: 2, y: 0}, {x: 0, y: 1}],
[{x: 1, y: 2}, {x: 2, y: 1}, {x: 1, y: 1}],
[{x: 2, y: 0}, {x: 0, y: 2}, {x: 2, y: 0}],
[{x: 1, y: 1}, {x: 0, y: 2}, {x: 2, y: 2}],
[{x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 2}],
[{x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 2}],
[{x: 1, y: 0}, {x: 2, y: 2}, {x: 0, y: 0}]]
inputs_4.forEach(function (input) {
behaviorSet4(input);
});

function behaviorSet5(input) {
bp.registerBThread(""O_Player_Thread_5_1"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[1].x, input[1].y)]},1);
});

bp.registerBThread(""O_Player_Thread_5_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), O(input[1].x, input[1].y), O(input[4].x, input[4].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[0].x, input[0].y)]},9);
});

bp.registerBThread(""O_Player_Thread_5_3"", function(){
bp.sync({request:[O(input[0].x, input[0].y), O(input[3].x, input[3].y), O(input[4].x, input[4].y)]},10);
});

bp.registerBThread(""O_Player_Thread_5_4"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[4].x, input[4].y), X(input[1].x, input[1].y)]});
bp.sync({waitFor:[O(input[4].x, input[4].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[4].x, input[4].y)]},1);
});

bp.registerBThread(""O_Player_Thread_5_5"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[4].x, input[4].y)]},10);
});

}
var inputs_5 = [[{x: 2, y: 1}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 1, y: 2}, {x: 0, y: 2}],
[{x: 2, y: 1}, {x: 0, y: 1}, {x: 1, y: 0}, {x: 0, y: 2}, {x: 0, y: 2}],
[{x: 1, y: 0}, {x: 1, y: 2}, {x: 0, y: 2}, {x: 1, y: 1}, {x: 0, y: 0}],
[{x: 2, y: 0}, {x: 1, y: 2}, {x: 2, y: 2}, {x: 0, y: 2}, {x: 0, y: 2}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 1, y: 1}, {x: 1, y: 2}]]
inputs_5.forEach(function (input) {
behaviorSet5(input);
});

function behaviorSet6(input) {
bp.registerBThread(""O_Player_Thread_6_1"", function(){
bp.sync({request:[O(input[4].x, input[4].y)]},10);
});

bp.registerBThread(""O_Player_Thread_6_2"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[0].x, input[0].y)]},1);
});

bp.registerBThread(""O_Player_Thread_6_3"", function(){
bp.sync({waitFor:[O(input[3].x, input[3].y), O(input[5].x, input[5].y)]});
bp.sync({request:[O(input[1].x, input[1].y)]},3);
});

bp.registerBThread(""O_Player_Thread_6_4"", function(){
bp.sync({request:[O(input[3].x, input[3].y), O(input[2].x, input[2].y)]},4);
});

bp.registerBThread(""O_Player_Thread_6_5"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[3].x, input[3].y), O(input[0].x, input[0].y)]},6);
});

}
var inputs_6 = [[{x: 2, y: 0}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 2}, {x: 1, y: 1}, {x: 1, y: 0}],
[{x: 2, y: 1}, {x: 2, y: 1}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 1, y: 0}, {x: 2, y: 2}],
[{x: 0, y: 0}, {x: 2, y: 2}, {x: 0, y: 1}, {x: 1, y: 0}, {x: 2, y: 2}, {x: 1, y: 0}],
[{x: 1, y: 2}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}, {x: 1, y: 0}, {x: 1, y: 1}],
[{x: 1, y: 0}, {x: 0, y: 0}, {x: 2, y: 0}, {x: 1, y: 1}, {x: 0, y: 1}, {x: 1, y: 2}],
[{x: 1, y: 2}, {x: 0, y: 0}, {x: 2, y: 2}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}],
[{x: 1, y: 2}, {x: 0, y: 0}, {x: 1, y: 2}, {x: 0, y: 1}, {x: 1, y: 0}, {x: 0, y: 1}],
[{x: 0, y: 2}, {x: 0, y: 2}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 1, y: 2}]]
inputs_6.forEach(function (input) {
behaviorSet6(input);
});

function behaviorSet7(input) {
bp.registerBThread(""O_Player_Thread_7_1"", function(){
bp.sync({waitFor:[O(input[3].x, input[3].y), X(input[5].x, input[5].y), X(input[4].x, input[4].y), O(input[6].x, input[6].y)]});
bp.sync({waitFor:[X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[5].x, input[5].y)]},11);
});

bp.registerBThread(""O_Player_Thread_7_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[6].x, input[6].y)]},4);
});

bp.registerBThread(""O_Player_Thread_7_3"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[6].x, input[6].y), O(input[0].x, input[0].y)]},10);
});

bp.registerBThread(""O_Player_Thread_7_4"", function(){
bp.sync({waitFor:[O(input[3].x, input[3].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[4].x, input[4].y)]},5);
});

}
var inputs_7 = [[{x: 2, y: 2}, {x: 2, y: 1}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 0, y: 1}, {x: 2, y: 2}],
[{x: 1, y: 1}, {x: 2, y: 2}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 2, y: 2}],
[{x: 1, y: 1}, {x: 1, y: 0}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 2, y: 2}, {x: 0, y: 1}],
[{x: 0, y: 1}, {x: 2, y: 0}, {x: 0, y: 2}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 1, y: 1}, {x: 1, y: 1}]]
inputs_7.forEach(function (input) {
behaviorSet7(input);
});

function behaviorSet8(input) {
bp.registerBThread(""O_Player_Thread_8_1"", function(){
bp.sync({waitFor:[O(input[3].x, input[3].y), X(input[0].x, input[0].y), O(input[1].x, input[1].y), O(input[6].x, input[6].y)]});
bp.sync({request:[O(input[1].x, input[1].y)]},4);
});

bp.registerBThread(""O_Player_Thread_8_2"", function(){
bp.sync({waitFor:[X(input[4].x, input[4].y), O(input[3].x, input[3].y)]});
bp.sync({waitFor:[O(input[3].x, input[3].y), X(input[5].x, input[5].y), X(input[1].x, input[1].y), X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[3].x, input[3].y), O(input[6].x, input[6].y), O(input[6].x, input[6].y)]},1);
});

bp.registerBThread(""O_Player_Thread_8_3"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[6].x, input[6].y), O(input[6].x, input[6].y), O(input[0].x, input[0].y), O(input[4].x, input[4].y)]},10);
});

}
var inputs_8 = [[{x: 2, y: 2}, {x: 2, y: 0}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 0, y: 1}, {x: 0, y: 2}],
[{x: 1, y: 1}, {x: 0, y: 2}, {x: 1, y: 0}, {x: 2, y: 0}, {x: 1, y: 1}, {x: 2, y: 1}, {x: 0, y: 2}],
[{x: 1, y: 1}, {x: 2, y: 1}, {x: 1, y: 0}, {x: 2, y: 0}, {x: 1, y: 2}, {x: 0, y: 1}, {x: 2, y: 0}],
[{x: 1, y: 2}, {x: 2, y: 2}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 1, y: 0}],
[{x: 1, y: 0}, {x: 0, y: 2}, {x: 1, y: 2}, {x: 0, y: 0}, {x: 2, y: 2}, {x: 1, y: 0}, {x: 1, y: 2}],
[{x: 2, y: 2}, {x: 1, y: 1}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 0}, {x: 2, y: 0}, {x: 0, y: 2}]]
inputs_8.forEach(function (input) {
behaviorSet8(input);
});

function behaviorSet9(input) {
bp.registerBThread(""O_Player_Thread_9_1"", function(){
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},2);
});

bp.registerBThread(""O_Player_Thread_9_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},10);
});

bp.registerBThread(""O_Player_Thread_9_3"", function(){
bp.sync({request:[O(input[0].x, input[0].y)]},11);
});

bp.registerBThread(""O_Player_Thread_9_4"", function(){
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},8);
});

}
var inputs_9 = [[{x: 1, y: 0}],
[{x: 2, y: 0}]]
inputs_9.forEach(function (input) {
behaviorSet9(input);
});

function behaviorSet10(input) {
bp.registerBThread(""O_Player_Thread_10_1"", function(){
bp.sync({request:[O(input[3].x, input[3].y), O(input[2].x, input[2].y), O(input[2].x, input[2].y)]},6);
});

}
var inputs_10 = [[{x: 0, y: 2}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}],
[{x: 2, y: 2}, {x: 2, y: 2}, {x: 1, y: 2}, {x: 1, y: 2}],
[{x: 2, y: 2}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}],
[{x: 2, y: 0}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 0}],
[{x: 0, y: 2}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 1, y: 2}],
[{x: 0, y: 0}, {x: 0, y: 2}, {x: 1, y: 2}, {x: 1, y: 1}],
[{x: 0, y: 1}, {x: 1, y: 1}, {x: 2, y: 1}, {x: 0, y: 0}],
[{x: 0, y: 1}, {x: 0, y: 1}, {x: 1, y: 1}, {x: 0, y: 2}],
[{x: 0, y: 0}, {x: 0, y: 1}, {x: 1, y: 1}, {x: 0, y: 1}]]
inputs_10.forEach(function (input) {
behaviorSet10(input);
});

"
19,3.0,5.0,30.24948024948025,8.0,2.0,40.0,78.0,18.0,33.0,0.0,15.0,"function behaviorSet1(input) {
bp.registerBThread(""O_Player_Thread_1_1"", function(){
bp.sync({waitFor:[X(input[4].x, input[4].y), O(input[4].x, input[4].y)]});
bp.sync({request:[O(input[6].x, input[6].y)]},5);
});

bp.registerBThread(""O_Player_Thread_1_2"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[1].x, input[1].y), X(input[5].x, input[5].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[1].x, input[1].y), O(input[5].x, input[5].y), O(input[4].x, input[4].y)]},9);
});

}
var inputs_1 = [[{x: 2, y: 1}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 1, y: 2}],
[{x: 0, y: 1}, {x: 1, y: 1}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 2, y: 1}, {x: 0, y: 0}],
[{x: 0, y: 2}, {x: 2, y: 1}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 1, y: 2}]]
inputs_1.forEach(function (input) {
behaviorSet1(input);
});

function behaviorSet2(input) {
bp.registerBThread(""O_Player_Thread_2_1"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y), O(input[3].x, input[3].y)]});
bp.sync({waitFor:[X(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[3].x, input[3].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y)]},10);
});

bp.registerBThread(""O_Player_Thread_2_2"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y), X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_2_3"", function(){
bp.sync({request:[O(input[3].x, input[3].y), O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[1].x, input[1].y)]},6);
});

bp.registerBThread(""O_Player_Thread_2_4"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y)]},11);
});

bp.registerBThread(""O_Player_Thread_2_5"", function(){
bp.sync({request:[O(input[2].x, input[2].y)]},7);
});

}
var inputs_2 = [[{x: 2, y: 2}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 2, y: 1}],
[{x: 0, y: 0}, {x: 1, y: 2}, {x: 0, y: 0}, {x: 0, y: 1}],
[{x: 0, y: 1}, {x: 0, y: 1}, {x: 1, y: 1}, {x: 2, y: 1}]]
inputs_2.forEach(function (input) {
behaviorSet2(input);
});

function behaviorSet3(input) {
bp.registerBThread(""O_Player_Thread_3_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[1].x, input[1].y), X(input[2].x, input[2].y), X(input[2].x, input[2].y)]});
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[2].x, input[2].y), O(input[2].x, input[2].y)]},8);
});

bp.registerBThread(""O_Player_Thread_3_2"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[2].x, input[2].y), O(input[2].x, input[2].y), X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[2].x, input[2].y)]},1);
});

}
var inputs_3 = [[{x: 1, y: 1}, {x: 0, y: 1}, {x: 2, y: 1}],
[{x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 2}],
[{x: 2, y: 0}, {x: 2, y: 1}, {x: 0, y: 0}],
[{x: 2, y: 0}, {x: 0, y: 2}, {x: 0, y: 1}],
[{x: 2, y: 1}, {x: 1, y: 2}, {x: 0, y: 2}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}]]
inputs_3.forEach(function (input) {
behaviorSet3(input);
});

function behaviorSet4(input) {
bp.registerBThread(""O_Player_Thread_4_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[8].x, input[8].y)]});
bp.sync({waitFor:[X(input[4].x, input[4].y), O(input[4].x, input[4].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[3].x, input[3].y)]},10);
});

}
var inputs_4 = [[{x: 1, y: 2}, {x: 0, y: 1}, {x: 1, y: 2}, {x: 1, y: 2}, {x: 1, y: 0}, {x: 0, y: 2}, {x: 2, y: 2}, {x: 0, y: 0}, {x: 1, y: 1}]]
inputs_4.forEach(function (input) {
behaviorSet4(input);
});

function behaviorSet5(input) {
bp.registerBThread(""O_Player_Thread_5_1"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), O(input[0].x, input[0].y)]});
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_5_2"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), O(input[0].x, input[0].y)]});
bp.sync({waitFor:[X(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},5);
});

bp.registerBThread(""O_Player_Thread_5_3"", function(){
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},5);
});

}
var inputs_5 = [[{x: 2, y: 1}],
[{x: 0, y: 2}],
[{x: 1, y: 1}],
[{x: 1, y: 2}],
[{x: 2, y: 2}],
[{x: 0, y: 1}]]
inputs_5.forEach(function (input) {
behaviorSet5(input);
});

function behaviorSet6(input) {
bp.registerBThread(""O_Player_Thread_6_1"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y), O(input[2].x, input[2].y), X(input[1].x, input[1].y)]});
bp.sync({waitFor:[O(input[5].x, input[5].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[3].x, input[3].y)]});
bp.sync({request:[O(input[4].x, input[4].y)]},8);
});

bp.registerBThread(""O_Player_Thread_6_2"", function(){
bp.sync({waitFor:[X(input[7].x, input[7].y), O(input[7].x, input[7].y), X(input[8].x, input[8].y)]});
bp.sync({request:[O(input[6].x, input[6].y), O(input[0].x, input[0].y), O(input[7].x, input[7].y), O(input[6].x, input[6].y)]},1);
});

}
var inputs_6 = [[{x: 2, y: 1}, {x: 2, y: 0}, {x: 2, y: 0}, {x: 1, y: 2}, {x: 1, y: 2}, {x: 0, y: 1}, {x: 2, y: 2}, {x: 1, y: 0}, {x: 0, y: 0}],
[{x: 0, y: 1}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 0, y: 2}],
[{x: 2, y: 1}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 0}, {x: 2, y: 2}],
[{x: 0, y: 1}, {x: 1, y: 0}, {x: 0, y: 0}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 1, y: 2}, {x: 0, y: 1}, {x: 2, y: 0}, {x: 0, y: 1}],
[{x: 2, y: 2}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 1}, {x: 2, y: 0}, {x: 1, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 0, y: 1}, {x: 1, y: 0}],
[{x: 0, y: 1}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 1, y: 0}, {x: 1, y: 0}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 2, y: 0}],
[{x: 1, y: 0}, {x: 0, y: 1}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 1, y: 2}, {x: 0, y: 2}, {x: 1, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}],
[{x: 1, y: 0}, {x: 1, y: 0}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 1, y: 1}, {x: 0, y: 2}, {x: 2, y: 2}, {x: 1, y: 0}, {x: 1, y: 0}]]
inputs_6.forEach(function (input) {
behaviorSet6(input);
});

function behaviorSet7(input) {
bp.registerBThread(""O_Player_Thread_7_1"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},2);
});

bp.registerBThread(""O_Player_Thread_7_2"", function(){
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},6);
});

bp.registerBThread(""O_Player_Thread_7_3"", function(){
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},8);
});

bp.registerBThread(""O_Player_Thread_7_4"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({waitFor:[X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},7);
});

}
var inputs_7 = [[{x: 0, y: 2}]]
inputs_7.forEach(function (input) {
behaviorSet7(input);
});

function behaviorSet8(input) {
bp.registerBThread(""O_Player_Thread_8_1"", function(){
bp.sync({waitFor:[X(input[3].x, input[3].y), X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},11);
});

}
var inputs_8 = [[{x: 2, y: 1}, {x: 1, y: 2}, {x: 1, y: 1}, {x: 1, y: 0}, {x: 0, y: 0}],
[{x: 1, y: 0}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 2}, {x: 2, y: 0}]]
inputs_8.forEach(function (input) {
behaviorSet8(input);
});

function behaviorSet9(input) {
bp.registerBThread(""O_Player_Thread_9_1"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},5);
});

}
var inputs_9 = [[{x: 0, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 2, y: 1}],
[{x: 0, y: 0}, {x: 1, y: 0}, {x: 0, y: 1}, {x: 1, y: 1}],
[{x: 2, y: 0}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 1}]]
inputs_9.forEach(function (input) {
behaviorSet9(input);
});

function behaviorSet10(input) {
bp.registerBThread(""O_Player_Thread_10_1"", function(){
bp.sync({request:[O(input[3].x, input[3].y), O(input[4].x, input[4].y)]},11);
});

bp.registerBThread(""O_Player_Thread_10_2"", function(){
bp.sync({request:[O(input[3].x, input[3].y)]},9);
});

bp.registerBThread(""O_Player_Thread_10_3"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y), X(input[2].x, input[2].y), X(input[0].x, input[0].y), O(input[3].x, input[3].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[3].x, input[3].y), O(input[1].x, input[1].y)]},4);
});

bp.registerBThread(""O_Player_Thread_10_4"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[4].x, input[4].y)]},8);
});

}
var inputs_10 = [[{x: 2, y: 1}, {x: 0, y: 1}, {x: 1, y: 2}, {x: 0, y: 1}, {x: 1, y: 0}],
[{x: 1, y: 2}, {x: 0, y: 1}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 0, y: 2}],
[{x: 1, y: 2}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}, {x: 0, y: 0}],
[{x: 2, y: 0}, {x: 2, y: 1}, {x: 0, y: 2}, {x: 1, y: 0}, {x: 0, y: 1}],
[{x: 0, y: 1}, {x: 2, y: 1}, {x: 0, y: 2}, {x: 0, y: 2}, {x: 2, y: 0}],
[{x: 0, y: 1}, {x: 1, y: 0}, {x: 1, y: 0}, {x: 0, y: 1}, {x: 2, y: 1}],
[{x: 0, y: 2}, {x: 1, y: 2}, {x: 0, y: 2}, {x: 2, y: 2}, {x: 2, y: 0}],
[{x: 0, y: 2}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}],
[{x: 1, y: 1}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 2, y: 0}, {x: 2, y: 1}]]
inputs_10.forEach(function (input) {
behaviorSet10(input);
});

"
20,3.0,6.0,50.34650034650035,21.0,7.0,22.0,59.0,18.0,52.0,0.0,13.0,"function behaviorSet1(input) {
bp.registerBThread(""O_Player_Thread_1_1"", function(){
bp.sync({waitFor:[O(input[5].x, input[5].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[5].x, input[5].y)]},2);
});

}
var inputs_1 = [[{x: 0, y: 1}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 0, y: 2}, {x: 1, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 0}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 1, y: 0}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 2, y: 1}],
[{x: 0, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 1}],
[{x: 1, y: 1}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 1}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 1, y: 0}, {x: 0, y: 2}]]
inputs_1.forEach(function (input) {
behaviorSet1(input);
});

function behaviorSet2(input) {
bp.registerBThread(""O_Player_Thread_2_1"", function(){
bp.sync({request:[O(input[6].x, input[6].y), O(input[3].x, input[3].y), O(input[2].x, input[2].y), O(input[2].x, input[2].y)]},4);
});

bp.registerBThread(""O_Player_Thread_2_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[5].x, input[5].y), X(input[7].x, input[7].y)]});
bp.sync({request:[O(input[7].x, input[7].y)]},2);
});

bp.registerBThread(""O_Player_Thread_2_3"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[0].x, input[0].y)]},8);
});

}
var inputs_2 = [[{x: 1, y: 0}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 2, y: 2}, {x: 1, y: 2}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 2, y: 2}, {x: 1, y: 1}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 1, y: 0}],
[{x: 2, y: 2}, {x: 1, y: 2}, {x: 0, y: 2}, {x: 1, y: 2}, {x: 1, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 0, y: 2}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 0, y: 2}],
[{x: 1, y: 0}, {x: 0, y: 0}, {x: 0, y: 1}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 0, y: 2}]]
inputs_2.forEach(function (input) {
behaviorSet2(input);
});

function behaviorSet3(input) {
bp.registerBThread(""O_Player_Thread_3_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y)]},9);
});

bp.registerBThread(""O_Player_Thread_3_2"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), O(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y)]},4);
});

bp.registerBThread(""O_Player_Thread_3_3"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y), X(input[2].x, input[2].y), O(input[1].x, input[1].y), X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y)]},10);
});

bp.registerBThread(""O_Player_Thread_3_4"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[1].x, input[1].y)]});
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},11);
});

bp.registerBThread(""O_Player_Thread_3_5"", function(){
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},10);
});

}
var inputs_3 = [[{x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}],
[{x: 1, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}],
[{x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 0}]]
inputs_3.forEach(function (input) {
behaviorSet3(input);
});

function behaviorSet4(input) {
bp.registerBThread(""O_Player_Thread_4_1"", function(){
bp.sync({waitFor:[O(input[4].x, input[4].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_4_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[3].x, input[3].y)]},8);
});

}
var inputs_4 = [[{x: 2, y: 0}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 2, y: 1}, {x: 1, y: 0}],
[{x: 2, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 0, y: 0}],
[{x: 0, y: 2}, {x: 1, y: 2}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 0, y: 0}],
[{x: 1, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 2, y: 0}, {x: 0, y: 0}],
[{x: 2, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 2, y: 2}]]
inputs_4.forEach(function (input) {
behaviorSet4(input);
});

function behaviorSet5(input) {
bp.registerBThread(""O_Player_Thread_5_1"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[1].x, input[1].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},3);
});

bp.registerBThread(""O_Player_Thread_5_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},9);
});

bp.registerBThread(""O_Player_Thread_5_3"", function(){
bp.sync({request:[O(input[0].x, input[0].y), O(input[2].x, input[2].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y)]},4);
});

}
var inputs_5 = [[{x: 1, y: 0}, {x: 1, y: 1}, {x: 1, y: 2}],
[{x: 2, y: 2}, {x: 0, y: 2}, {x: 2, y: 1}]]
inputs_5.forEach(function (input) {
behaviorSet5(input);
});

function behaviorSet6(input) {
bp.registerBThread(""O_Player_Thread_6_1"", function(){
bp.sync({waitFor:[O(input[1].x, input[1].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_6_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[1].x, input[1].y), O(input[1].x, input[1].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},10);
});

bp.registerBThread(""O_Player_Thread_6_3"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_6_4"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[1].x, input[1].y)]},3);
});

}
var inputs_6 = [[{x: 0, y: 2}, {x: 1, y: 0}],
[{x: 0, y: 0}, {x: 1, y: 2}]]
inputs_6.forEach(function (input) {
behaviorSet6(input);
});

function behaviorSet7(input) {
bp.registerBThread(""O_Player_Thread_7_1"", function(){
bp.sync({request:[O(input[4].x, input[4].y), O(input[3].x, input[3].y), O(input[1].x, input[1].y), O(input[4].x, input[4].y)]},2);
});

}
var inputs_7 = [[{x: 0, y: 1}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 1, y: 2}, {x: 1, y: 2}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 1, y: 2}],
[{x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 0, y: 2}],
[{x: 0, y: 1}, {x: 0, y: 2}, {x: 1, y: 1}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 2, y: 0}],
[{x: 1, y: 2}, {x: 0, y: 2}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 0, y: 0}, {x: 1, y: 2}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 2}, {x: 2, y: 1}]]
inputs_7.forEach(function (input) {
behaviorSet7(input);
});

function behaviorSet8(input) {
bp.registerBThread(""O_Player_Thread_8_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[0].x, input[0].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_8_2"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[1].x, input[1].y)]},4);
});

bp.registerBThread(""O_Player_Thread_8_3"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[1].x, input[1].y), O(input[0].x, input[0].y), X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[1].x, input[1].y)]},3);
});

}
var inputs_8 = [[{x: 1, y: 2}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 2, y: 2}],
[{x: 2, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}],
[{x: 0, y: 0}, {x: 2, y: 2}]]
inputs_8.forEach(function (input) {
behaviorSet8(input);
});

function behaviorSet9(input) {
bp.registerBThread(""O_Player_Thread_9_1"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y)]});
bp.sync({waitFor:[X(input[3].x, input[3].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},2);
});

bp.registerBThread(""O_Player_Thread_9_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y), O(input[2].x, input[2].y)]},8);
});

}
var inputs_9 = [[{x: 2, y: 0}, {x: 1, y: 2}, {x: 1, y: 2}, {x: 0, y: 1}],
[{x: 2, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}],
[{x: 0, y: 0}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 2, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}, {x: 1, y: 2}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}],
[{x: 1, y: 2}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 1, y: 0}]]
inputs_9.forEach(function (input) {
behaviorSet9(input);
});

function behaviorSet10(input) {
bp.registerBThread(""O_Player_Thread_10_1"", function(){
bp.sync({waitFor:[X(input[5].x, input[5].y)]});
bp.sync({waitFor:[O(input[3].x, input[3].y), O(input[6].x, input[6].y), X(input[2].x, input[2].y), X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[5].x, input[5].y), O(input[7].x, input[7].y)]},6);
});

bp.registerBThread(""O_Player_Thread_10_2"", function(){
bp.sync({request:[O(input[6].x, input[6].y)]},2);
});

bp.registerBThread(""O_Player_Thread_10_3"", function(){
bp.sync({waitFor:[X(input[7].x, input[7].y), O(input[3].x, input[3].y), O(input[6].x, input[6].y), O(input[5].x, input[5].y)]});
bp.sync({waitFor:[O(input[7].x, input[7].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[4].x, input[4].y), O(input[3].x, input[3].y), O(input[6].x, input[6].y), O(input[4].x, input[4].y)]},5);
});

bp.registerBThread(""O_Player_Thread_10_4"", function(){
bp.sync({waitFor:[X(input[4].x, input[4].y)]});
bp.sync({waitFor:[X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[4].x, input[4].y), O(input[7].x, input[7].y), O(input[3].x, input[3].y), O(input[2].x, input[2].y)]},9);
});

bp.registerBThread(""O_Player_Thread_10_5"", function(){
bp.sync({waitFor:[X(input[5].x, input[5].y), O(input[2].x, input[2].y), O(input[6].x, input[6].y)]});
bp.sync({request:[O(input[5].x, input[5].y), O(input[0].x, input[0].y), O(input[7].x, input[7].y)]},1);
});

}
var inputs_10 = [[{x: 1, y: 1}, {x: 0, y: 2}, {x: 1, y: 2}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 2}, {x: 0, y: 1}],
[{x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 1}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 0, y: 1}, {x: 2, y: 2}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 1}],
[{x: 1, y: 0}, {x: 1, y: 0}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}],
[{x: 0, y: 0}, {x: 1, y: 0}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 2, y: 2}, {x: 0, y: 0}],
[{x: 2, y: 1}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 1, y: 2}, {x: 2, y: 1}, {x: 0, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 2, y: 2}, {x: 2, y: 2}],
[{x: 0, y: 1}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 2, y: 0}, {x: 2, y: 2}]]
inputs_10.forEach(function (input) {
behaviorSet10(input);
});

"
21,3.0,8.0,39.24903722721437,16.0,2.0,32.0,69.0,25.0,45.0,0.0,14.0,"function behaviorSet1(input) {
bp.registerBThread(""O_Player_Thread_1_1"", function(){
bp.sync({waitFor:[O(input[7].x, input[7].y), O(input[7].x, input[7].y)]});
bp.sync({waitFor:[X(input[5].x, input[5].y), O(input[8].x, input[8].y)]});
bp.sync({request:[O(input[6].x, input[6].y), O(input[3].x, input[3].y), O(input[1].x, input[1].y)]},2);
});

bp.registerBThread(""O_Player_Thread_1_2"", function(){
bp.sync({waitFor:[X(input[4].x, input[4].y), X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[7].x, input[7].y), O(input[6].x, input[6].y)]},5);
});

bp.registerBThread(""O_Player_Thread_1_3"", function(){
bp.sync({waitFor:[X(input[6].x, input[6].y), X(input[3].x, input[3].y), O(input[6].x, input[6].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[8].x, input[8].y)]},3);
});

bp.registerBThread(""O_Player_Thread_1_4"", function(){
bp.sync({request:[O(input[0].x, input[0].y), O(input[2].x, input[2].y)]},1);
});

bp.registerBThread(""O_Player_Thread_1_5"", function(){
bp.sync({request:[O(input[4].x, input[4].y), O(input[0].x, input[0].y), O(input[3].x, input[3].y)]},6);
});

}
var inputs_1 = [[{x: 2, y: 1}, {x: 2, y: 1}, {x: 1, y: 0}, {x: 2, y: 0}, {x: 0, y: 0}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 1, y: 2}, {x: 1, y: 1}],
[{x: 1, y: 1}, {x: 0, y: 2}, {x: 1, y: 1}, {x: 0, y: 1}, {x: 0, y: 2}, {x: 1, y: 1}, {x: 0, y: 1}, {x: 1, y: 0}, {x: 1, y: 0}]]
inputs_1.forEach(function (input) {
behaviorSet1(input);
});

function behaviorSet2(input) {
bp.registerBThread(""O_Player_Thread_2_1"", function(){
bp.sync({request:[O(input[2].x, input[2].y), O(input[1].x, input[1].y)]},3);
});

bp.registerBThread(""O_Player_Thread_2_2"", function(){
bp.sync({waitFor:[X(input[6].x, input[6].y)]});
bp.sync({waitFor:[O(input[1].x, input[1].y), O(input[5].x, input[5].y), X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[0].x, input[0].y)]},3);
});

}
var inputs_2 = [[{x: 1, y: 2}, {x: 2, y: 2}, {x: 2, y: 1}, {x: 2, y: 2}, {x: 1, y: 1}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 1, y: 2}],
[{x: 0, y: 2}, {x: 2, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 2, y: 2}, {x: 0, y: 0}, {x: 1, y: 0}],
[{x: 0, y: 1}, {x: 1, y: 2}, {x: 1, y: 1}, {x: 2, y: 2}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 0, y: 0}, {x: 1, y: 2}],
[{x: 0, y: 1}, {x: 2, y: 2}, {x: 1, y: 0}, {x: 2, y: 0}, {x: 2, y: 0}, {x: 1, y: 1}, {x: 2, y: 1}, {x: 2, y: 0}],
[{x: 1, y: 1}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 1, y: 2}, {x: 1, y: 2}, {x: 1, y: 1}, {x: 1, y: 1}],
[{x: 1, y: 0}, {x: 0, y: 1}, {x: 2, y: 0}, {x: 1, y: 1}, {x: 2, y: 2}, {x: 0, y: 0}, {x: 0, y: 1}, {x: 2, y: 1}]]
inputs_2.forEach(function (input) {
behaviorSet2(input);
});

function behaviorSet3(input) {
bp.registerBThread(""O_Player_Thread_3_1"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},7);
});

bp.registerBThread(""O_Player_Thread_3_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y)]},8);
});

}
var inputs_3 = [[{x: 0, y: 0}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 2, y: 0}],
[{x: 2, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}]]
inputs_3.forEach(function (input) {
behaviorSet3(input);
});

function behaviorSet4(input) {
bp.registerBThread(""O_Player_Thread_4_1"", function(){
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},10);
});

bp.registerBThread(""O_Player_Thread_4_2"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[1].x, input[1].y)]},8);
});

bp.registerBThread(""O_Player_Thread_4_3"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y)]},6);
});

bp.registerBThread(""O_Player_Thread_4_4"", function(){
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y)]},2);
});

}
var inputs_4 = [[{x: 1, y: 1}, {x: 2, y: 0}, {x: 0, y: 1}],
[{x: 1, y: 2}, {x: 2, y: 1}, {x: 1, y: 1}],
[{x: 2, y: 0}, {x: 0, y: 2}, {x: 2, y: 0}],
[{x: 1, y: 1}, {x: 0, y: 2}, {x: 2, y: 2}],
[{x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 2}],
[{x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 2}],
[{x: 1, y: 0}, {x: 2, y: 2}, {x: 0, y: 0}]]
inputs_4.forEach(function (input) {
behaviorSet4(input);
});

function behaviorSet5(input) {
bp.registerBThread(""O_Player_Thread_5_1"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[1].x, input[1].y)]},1);
});

bp.registerBThread(""O_Player_Thread_5_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), O(input[1].x, input[1].y), O(input[4].x, input[4].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[0].x, input[0].y)]},9);
});

bp.registerBThread(""O_Player_Thread_5_3"", function(){
bp.sync({request:[O(input[0].x, input[0].y), O(input[3].x, input[3].y), O(input[4].x, input[4].y)]},10);
});

bp.registerBThread(""O_Player_Thread_5_4"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[4].x, input[4].y), X(input[1].x, input[1].y)]});
bp.sync({waitFor:[O(input[4].x, input[4].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[4].x, input[4].y)]},1);
});

bp.registerBThread(""O_Player_Thread_5_5"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[4].x, input[4].y)]},10);
});

}
var inputs_5 = [[{x: 2, y: 1}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 1, y: 2}, {x: 0, y: 2}],
[{x: 2, y: 1}, {x: 0, y: 1}, {x: 1, y: 0}, {x: 0, y: 2}, {x: 0, y: 2}],
[{x: 1, y: 0}, {x: 1, y: 2}, {x: 0, y: 2}, {x: 1, y: 1}, {x: 0, y: 0}],
[{x: 2, y: 0}, {x: 1, y: 2}, {x: 2, y: 2}, {x: 0, y: 2}, {x: 0, y: 2}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 1, y: 1}, {x: 1, y: 2}]]
inputs_5.forEach(function (input) {
behaviorSet5(input);
});

function behaviorSet6(input) {
bp.registerBThread(""O_Player_Thread_6_1"", function(){
bp.sync({request:[O(input[4].x, input[4].y)]},10);
});

bp.registerBThread(""O_Player_Thread_6_2"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[0].x, input[0].y)]},1);
});

bp.registerBThread(""O_Player_Thread_6_3"", function(){
bp.sync({waitFor:[O(input[3].x, input[3].y), O(input[5].x, input[5].y)]});
bp.sync({request:[O(input[1].x, input[1].y)]},3);
});

bp.registerBThread(""O_Player_Thread_6_4"", function(){
bp.sync({request:[O(input[3].x, input[3].y), O(input[2].x, input[2].y)]},4);
});

bp.registerBThread(""O_Player_Thread_6_5"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[3].x, input[3].y), O(input[0].x, input[0].y)]},6);
});

}
var inputs_6 = [[{x: 2, y: 0}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 2}, {x: 1, y: 1}, {x: 1, y: 0}],
[{x: 2, y: 1}, {x: 2, y: 1}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 1, y: 0}, {x: 2, y: 2}],
[{x: 0, y: 0}, {x: 2, y: 2}, {x: 0, y: 1}, {x: 1, y: 0}, {x: 2, y: 2}, {x: 1, y: 0}],
[{x: 1, y: 2}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}, {x: 1, y: 0}, {x: 1, y: 1}],
[{x: 1, y: 0}, {x: 0, y: 0}, {x: 2, y: 0}, {x: 1, y: 1}, {x: 0, y: 1}, {x: 1, y: 2}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 2, y: 2}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}],
[{x: 1, y: 2}, {x: 0, y: 0}, {x: 1, y: 2}, {x: 0, y: 1}, {x: 1, y: 0}, {x: 0, y: 1}],
[{x: 0, y: 2}, {x: 0, y: 2}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 1, y: 2}]]
inputs_6.forEach(function (input) {
behaviorSet6(input);
});

function behaviorSet7(input) {
bp.registerBThread(""O_Player_Thread_7_1"", function(){
bp.sync({waitFor:[O(input[3].x, input[3].y), X(input[5].x, input[5].y), X(input[4].x, input[4].y), O(input[6].x, input[6].y)]});
bp.sync({waitFor:[X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[5].x, input[5].y)]},11);
});

bp.registerBThread(""O_Player_Thread_7_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[6].x, input[6].y)]},4);
});

bp.registerBThread(""O_Player_Thread_7_3"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[6].x, input[6].y), O(input[0].x, input[0].y)]},10);
});

bp.registerBThread(""O_Player_Thread_7_4"", function(){
bp.sync({waitFor:[O(input[3].x, input[3].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[4].x, input[4].y)]},5);
});

}
var inputs_7 = [[{x: 2, y: 2}, {x: 2, y: 1}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 0, y: 1}, {x: 2, y: 2}],
[{x: 1, y: 1}, {x: 2, y: 2}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 2, y: 2}],
[{x: 1, y: 1}, {x: 1, y: 0}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 2, y: 2}, {x: 0, y: 1}],
[{x: 0, y: 1}, {x: 2, y: 0}, {x: 0, y: 2}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 1, y: 1}, {x: 1, y: 1}]]
inputs_7.forEach(function (input) {
behaviorSet7(input);
});

function behaviorSet8(input) {
bp.registerBThread(""O_Player_Thread_8_1"", function(){
bp.sync({waitFor:[O(input[3].x, input[3].y), X(input[0].x, input[0].y), O(input[1].x, input[1].y), O(input[6].x, input[6].y)]});
bp.sync({request:[O(input[1].x, input[1].y)]},4);
});

bp.registerBThread(""O_Player_Thread_8_2"", function(){
bp.sync({waitFor:[X(input[4].x, input[4].y), O(input[3].x, input[3].y)]});
bp.sync({waitFor:[O(input[3].x, input[3].y), X(input[5].x, input[5].y), X(input[1].x, input[1].y), X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[3].x, input[3].y), O(input[6].x, input[6].y), O(input[6].x, input[6].y)]},1);
});

bp.registerBThread(""O_Player_Thread_8_3"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[6].x, input[6].y), O(input[6].x, input[6].y), O(input[0].x, input[0].y), O(input[4].x, input[4].y)]},10);
});

}
var inputs_8 = [[{x: 2, y: 2}, {x: 2, y: 0}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 0, y: 1}, {x: 0, y: 2}],
[{x: 1, y: 1}, {x: 0, y: 2}, {x: 1, y: 0}, {x: 2, y: 0}, {x: 1, y: 1}, {x: 2, y: 1}, {x: 0, y: 2}],
[{x: 1, y: 1}, {x: 2, y: 1}, {x: 1, y: 0}, {x: 2, y: 0}, {x: 1, y: 2}, {x: 0, y: 1}, {x: 2, y: 0}],
[{x: 1, y: 2}, {x: 2, y: 2}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 1, y: 0}],
[{x: 1, y: 0}, {x: 0, y: 2}, {x: 1, y: 2}, {x: 0, y: 0}, {x: 2, y: 2}, {x: 1, y: 0}, {x: 1, y: 2}],
[{x: 2, y: 2}, {x: 1, y: 1}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 0}, {x: 2, y: 0}, {x: 0, y: 2}]]
inputs_8.forEach(function (input) {
behaviorSet8(input);
});

function behaviorSet9(input) {
bp.registerBThread(""O_Player_Thread_9_1"", function(){
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},2);
});

bp.registerBThread(""O_Player_Thread_9_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},10);
});

bp.registerBThread(""O_Player_Thread_9_3"", function(){
bp.sync({request:[O(input[0].x, input[0].y)]},11);
});

bp.registerBThread(""O_Player_Thread_9_4"", function(){
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},8);
});

}
var inputs_9 = [[{x: 1, y: 0}],
[{x: 2, y: 0}]]
inputs_9.forEach(function (input) {
behaviorSet9(input);
});

function behaviorSet10(input) {
bp.registerBThread(""O_Player_Thread_10_1"", function(){
bp.sync({request:[O(input[3].x, input[3].y), O(input[2].x, input[2].y), O(input[2].x, input[2].y)]},6);
});

}
var inputs_10 = [[{x: 0, y: 2}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}],
[{x: 2, y: 2}, {x: 2, y: 2}, {x: 1, y: 2}, {x: 1, y: 2}],
[{x: 2, y: 2}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}],
[{x: 2, y: 0}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 0}],
[{x: 0, y: 2}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 1, y: 2}],
[{x: 0, y: 0}, {x: 0, y: 2}, {x: 1, y: 2}, {x: 1, y: 1}],
[{x: 0, y: 1}, {x: 1, y: 1}, {x: 2, y: 1}, {x: 0, y: 0}],
[{x: 0, y: 1}, {x: 0, y: 1}, {x: 1, y: 1}, {x: 0, y: 2}],
[{x: 0, y: 0}, {x: 0, y: 1}, {x: 1, y: 1}, {x: 0, y: 1}]]
inputs_10.forEach(function (input) {
behaviorSet10(input);
});

"
22,3.0,7.0,43.82160392798691,18.0,7.0,25.0,55.0,21.0,39.0,0.0,17.0,"function behaviorSet1(input) {
bp.registerBThread(""O_Player_Thread_1_1"", function(){
bp.sync({waitFor:[X(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[5].x, input[5].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[2].x, input[2].y), O(input[3].x, input[3].y)]},9);
});

}
var inputs_1 = [[{x: 0, y: 1}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 1, y: 1}, {x: 2, y: 1}],
[{x: 0, y: 2}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 0}],
[{x: 1, y: 0}, {x: 1, y: 0}, {x: 2, y: 2}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 2}],
[{x: 1, y: 1}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 2}],
[{x: 1, y: 2}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 1, y: 2}],
[{x: 1, y: 2}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 1, y: 1}, {x: 0, y: 2}, {x: 2, y: 0}],
[{x: 1, y: 2}, {x: 2, y: 1}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 2}]]
inputs_1.forEach(function (input) {
behaviorSet1(input);
});

function behaviorSet2(input) {
bp.registerBThread(""O_Player_Thread_2_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[2].x, input[2].y), X(input[1].x, input[1].y), O(input[4].x, input[4].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[4].x, input[4].y), O(input[1].x, input[1].y)]},3);
});

}
var inputs_2 = [[{x: 1, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 2, y: 1}, {x: 0, y: 0}]]
inputs_2.forEach(function (input) {
behaviorSet2(input);
});

function behaviorSet3(input) {
bp.registerBThread(""O_Player_Thread_3_1"", function(){
bp.sync({waitFor:[O(input[1].x, input[1].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[1].x, input[1].y), O(input[2].x, input[2].y)]},7);
});

bp.registerBThread(""O_Player_Thread_3_2"", function(){
bp.sync({waitFor:[O(input[1].x, input[1].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[2].x, input[2].y)]},10);
});

bp.registerBThread(""O_Player_Thread_3_3"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y)]},4);
});

bp.registerBThread(""O_Player_Thread_3_4"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y), O(input[1].x, input[1].y)]});
bp.sync({waitFor:[X(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y), O(input[1].x, input[1].y)]},11);
});

}
var inputs_3 = [[{x: 0, y: 2}, {x: 2, y: 2}, {x: 2, y: 2}],
[{x: 2, y: 1}, {x: 0, y: 2}, {x: 1, y: 2}],
[{x: 2, y: 0}, {x: 2, y: 0}, {x: 1, y: 0}],
[{x: 2, y: 2}, {x: 1, y: 2}, {x: 0, y: 2}],
[{x: 2, y: 2}, {x: 0, y: 0}, {x: 2, y: 2}],
[{x: 0, y: 0}, {x: 1, y: 0}, {x: 0, y: 1}]]
inputs_3.forEach(function (input) {
behaviorSet3(input);
});

function behaviorSet4(input) {
bp.registerBThread(""O_Player_Thread_4_1"", function(){
bp.sync({request:[O(input[5].x, input[5].y), O(input[6].x, input[6].y), O(input[3].x, input[3].y)]},6);
});

}
var inputs_4 = [[{x: 0, y: 0}, {x: 1, y: 1}, {x: 2, y: 1}, {x: 1, y: 0}, {x: 1, y: 0}, {x: 2, y: 2}, {x: 2, y: 0}],
[{x: 1, y: 1}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 0, y: 1}, {x: 2, y: 0}, {x: 0, y: 2}]]
inputs_4.forEach(function (input) {
behaviorSet4(input);
});

function behaviorSet5(input) {
bp.registerBThread(""O_Player_Thread_5_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[0].x, input[0].y), X(input[2].x, input[2].y), X(input[6].x, input[6].y)]});
bp.sync({request:[O(input[5].x, input[5].y), O(input[0].x, input[0].y), O(input[4].x, input[4].y)]},9);
});

bp.registerBThread(""O_Player_Thread_5_2"", function(){
bp.sync({request:[O(input[0].x, input[0].y), O(input[6].x, input[6].y)]},7);
});

bp.registerBThread(""O_Player_Thread_5_3"", function(){
bp.sync({waitFor:[O(input[3].x, input[3].y), O(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[3].x, input[3].y)]});
bp.sync({request:[O(input[6].x, input[6].y), O(input[0].x, input[0].y), O(input[3].x, input[3].y), O(input[1].x, input[1].y)]},11);
});

bp.registerBThread(""O_Player_Thread_5_4"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), O(input[0].x, input[0].y)]});
bp.sync({waitFor:[O(input[6].x, input[6].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[2].x, input[2].y), O(input[1].x, input[1].y)]},2);
});

bp.registerBThread(""O_Player_Thread_5_5"", function(){
bp.sync({waitFor:[O(input[4].x, input[4].y), O(input[1].x, input[1].y), O(input[5].x, input[5].y), O(input[6].x, input[6].y)]});
bp.sync({request:[O(input[2].x, input[2].y)]},2);
});

}
var inputs_5 = [[{x: 0, y: 1}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 2}, {x: 1, y: 0}, {x: 1, y: 2}],
[{x: 2, y: 0}, {x: 0, y: 1}, {x: 0, y: 2}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 0, y: 0}, {x: 0, y: 2}],
[{x: 0, y: 0}, {x: 2, y: 0}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 1, y: 0}, {x: 0, y: 2}, {x: 2, y: 0}],
[{x: 2, y: 2}, {x: 0, y: 1}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 1, y: 0}, {x: 1, y: 2}],
[{x: 0, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 2, y: 2}]]
inputs_5.forEach(function (input) {
behaviorSet5(input);
});

function behaviorSet6(input) {
bp.registerBThread(""O_Player_Thread_6_1"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[1].x, input[1].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y)]},6);
});

bp.registerBThread(""O_Player_Thread_6_2"", function(){
bp.sync({request:[O(input[2].x, input[2].y)]},2);
});

bp.registerBThread(""O_Player_Thread_6_3"", function(){
bp.sync({request:[O(input[2].x, input[2].y), O(input[1].x, input[1].y), O(input[2].x, input[2].y)]},7);
});

bp.registerBThread(""O_Player_Thread_6_4"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[1].x, input[1].y)]},2);
});

}
var inputs_6 = [[{x: 0, y: 0}, {x: 0, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 2}, {x: 0, y: 2}]]
inputs_6.forEach(function (input) {
behaviorSet6(input);
});

function behaviorSet7(input) {
bp.registerBThread(""O_Player_Thread_7_1"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y), X(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[3].x, input[3].y)]},3);
});

bp.registerBThread(""O_Player_Thread_7_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[3].x, input[3].y)]},7);
});

bp.registerBThread(""O_Player_Thread_7_3"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[3].x, input[3].y)]},11);
});

bp.registerBThread(""O_Player_Thread_7_4"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[3].x, input[3].y)]},5);
});

}
var inputs_7 = [[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 2, y: 2}],
[{x: 1, y: 0}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 1, y: 1}],
[{x: 0, y: 0}, {x: 2, y: 2}, {x: 0, y: 2}, {x: 1, y: 0}],
[{x: 1, y: 0}, {x: 1, y: 0}, {x: 0, y: 0}, {x: 2, y: 2}],
[{x: 1, y: 2}, {x: 0, y: 0}, {x: 2, y: 2}, {x: 2, y: 1}],
[{x: 2, y: 1}, {x: 0, y: 0}, {x: 0, y: 0}, {x: 0, y: 2}]]
inputs_7.forEach(function (input) {
behaviorSet7(input);
});

function behaviorSet8(input) {
bp.registerBThread(""O_Player_Thread_8_1"", function(){
bp.sync({waitFor:[X(input[4].x, input[4].y)]});
bp.sync({waitFor:[X(input[3].x, input[3].y), O(input[4].x, input[4].y), X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[2].x, input[2].y)]},6);
});

bp.registerBThread(""O_Player_Thread_8_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[4].x, input[4].y)]},8);
});

bp.registerBThread(""O_Player_Thread_8_3"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y), O(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[4].x, input[4].y)]});
bp.sync({waitFor:[O(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[3].x, input[3].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[4].x, input[4].y), O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[4].x, input[4].y)]},6);
});

}
var inputs_8 = [[{x: 0, y: 1}, {x: 2, y: 0}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}],
[{x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 2}]]
inputs_8.forEach(function (input) {
behaviorSet8(input);
});

function behaviorSet9(input) {
bp.registerBThread(""O_Player_Thread_9_1"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},9);
});

bp.registerBThread(""O_Player_Thread_9_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},2);
});

bp.registerBThread(""O_Player_Thread_9_3"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y), O(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},1);
});

bp.registerBThread(""O_Player_Thread_9_4"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), O(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y), O(input[0].x, input[0].y), X(input[0].x, input[0].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},3);
});

}
var inputs_9 = [[{x: 0, y: 0}],
[{x: 1, y: 1}],
[{x: 0, y: 0}],
[{x: 2, y: 1}]]
inputs_9.forEach(function (input) {
behaviorSet9(input);
});

function behaviorSet10(input) {
bp.registerBThread(""O_Player_Thread_10_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},8);
});

bp.registerBThread(""O_Player_Thread_10_2"", function(){
bp.sync({request:[O(input[0].x, input[0].y)]},1);
});

}
var inputs_10 = [[{x: 0, y: 0}, {x: 0, y: 1}, {x: 1, y: 0}],
[{x: 2, y: 1}, {x: 2, y: 0}, {x: 2, y: 2}],
[{x: 0, y: 2}, {x: 0, y: 2}, {x: 1, y: 0}],
[{x: 2, y: 1}, {x: 1, y: 2}, {x: 0, y: 0}],
[{x: 0, y: 2}, {x: 0, y: 0}, {x: 2, y: 2}],
[{x: 2, y: 2}, {x: 1, y: 0}, {x: 0, y: 0}],
[{x: 1, y: 2}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 2}, {x: 2, y: 1}, {x: 2, y: 0}]]
inputs_10.forEach(function (input) {
behaviorSet10(input);
});

"
23,3.0,4.0,42.464114832535884,20.0,2.0,28.0,69.0,24.0,45.0,0.0,22.0,"function behaviorSet1(input) {
bp.registerBThread(""O_Player_Thread_1_1"", function(){
bp.sync({waitFor:[X(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[5].x, input[5].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[2].x, input[2].y), O(input[3].x, input[3].y)]},9);
});

}
var inputs_1 = [[{x: 0, y: 1}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 1, y: 1}, {x: 2, y: 1}],
[{x: 0, y: 2}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 0}],
[{x: 1, y: 0}, {x: 1, y: 0}, {x: 2, y: 2}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 2}],
[{x: 1, y: 1}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 2}],
[{x: 1, y: 2}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 1, y: 2}],
[{x: 1, y: 2}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 1, y: 1}, {x: 0, y: 2}, {x: 2, y: 0}],
[{x: 1, y: 2}, {x: 2, y: 1}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 2}]]
inputs_1.forEach(function (input) {
behaviorSet1(input);
});

function behaviorSet2(input) {
bp.registerBThread(""O_Player_Thread_2_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[2].x, input[2].y), X(input[1].x, input[1].y), O(input[4].x, input[4].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[4].x, input[4].y), O(input[1].x, input[1].y)]},3);
});

}
var inputs_2 = [[{x: 1, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 2, y: 1}, {x: 0, y: 0}]]
inputs_2.forEach(function (input) {
behaviorSet2(input);
});

function behaviorSet3(input) {
bp.registerBThread(""O_Player_Thread_3_1"", function(){
bp.sync({waitFor:[O(input[1].x, input[1].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[1].x, input[1].y), O(input[2].x, input[2].y)]},7);
});

bp.registerBThread(""O_Player_Thread_3_2"", function(){
bp.sync({waitFor:[O(input[1].x, input[1].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[2].x, input[2].y)]},10);
});

bp.registerBThread(""O_Player_Thread_3_3"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y)]},4);
});

bp.registerBThread(""O_Player_Thread_3_4"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y), O(input[1].x, input[1].y)]});
bp.sync({waitFor:[X(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y), O(input[1].x, input[1].y)]},11);
});

}
var inputs_3 = [[{x: 0, y: 2}, {x: 2, y: 2}, {x: 2, y: 2}],
[{x: 2, y: 1}, {x: 0, y: 2}, {x: 1, y: 2}],
[{x: 2, y: 0}, {x: 2, y: 0}, {x: 1, y: 0}],
[{x: 2, y: 2}, {x: 1, y: 2}, {x: 0, y: 2}],
[{x: 2, y: 2}, {x: 0, y: 0}, {x: 2, y: 2}],
[{x: 0, y: 0}, {x: 1, y: 0}, {x: 0, y: 1}]]
inputs_3.forEach(function (input) {
behaviorSet3(input);
});

function behaviorSet4(input) {
bp.registerBThread(""O_Player_Thread_4_1"", function(){
bp.sync({request:[O(input[5].x, input[5].y), O(input[6].x, input[6].y), O(input[3].x, input[3].y)]},6);
});

}
var inputs_4 = [[{x: 0, y: 0}, {x: 1, y: 1}, {x: 2, y: 1}, {x: 1, y: 0}, {x: 1, y: 0}, {x: 2, y: 2}, {x: 2, y: 0}],
[{x: 1, y: 1}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 0, y: 1}, {x: 2, y: 0}, {x: 0, y: 2}]]
inputs_4.forEach(function (input) {
behaviorSet4(input);
});

function behaviorSet5(input) {
bp.registerBThread(""O_Player_Thread_5_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[0].x, input[0].y), X(input[2].x, input[2].y), X(input[6].x, input[6].y)]});
bp.sync({request:[O(input[5].x, input[5].y), O(input[0].x, input[0].y), O(input[4].x, input[4].y)]},9);
});

bp.registerBThread(""O_Player_Thread_5_2"", function(){
bp.sync({request:[O(input[0].x, input[0].y), O(input[6].x, input[6].y)]},7);
});

bp.registerBThread(""O_Player_Thread_5_3"", function(){
bp.sync({waitFor:[O(input[3].x, input[3].y), O(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[3].x, input[3].y)]});
bp.sync({request:[O(input[6].x, input[6].y), O(input[0].x, input[0].y), O(input[3].x, input[3].y), O(input[1].x, input[1].y)]},11);
});

bp.registerBThread(""O_Player_Thread_5_4"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), O(input[0].x, input[0].y)]});
bp.sync({waitFor:[O(input[6].x, input[6].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[2].x, input[2].y), O(input[1].x, input[1].y)]},2);
});

bp.registerBThread(""O_Player_Thread_5_5"", function(){
bp.sync({waitFor:[O(input[4].x, input[4].y), O(input[1].x, input[1].y), O(input[5].x, input[5].y), O(input[6].x, input[6].y)]});
bp.sync({request:[O(input[2].x, input[2].y)]},2);
});

}
var inputs_5 = [[{x: 0, y: 1}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 2}, {x: 1, y: 0}, {x: 1, y: 2}],
[{x: 2, y: 0}, {x: 0, y: 1}, {x: 0, y: 2}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 0, y: 0}, {x: 0, y: 2}],
[{x: 0, y: 0}, {x: 2, y: 0}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 1, y: 0}, {x: 0, y: 2}, {x: 2, y: 0}],
[{x: 2, y: 2}, {x: 0, y: 1}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 1, y: 0}, {x: 1, y: 2}],
[{x: 0, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 2, y: 2}]]
inputs_5.forEach(function (input) {
behaviorSet5(input);
});

function behaviorSet6(input) {
bp.registerBThread(""O_Player_Thread_6_1"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[1].x, input[1].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y)]},6);
});

bp.registerBThread(""O_Player_Thread_6_2"", function(){
bp.sync({request:[O(input[2].x, input[2].y)]},2);
});

bp.registerBThread(""O_Player_Thread_6_3"", function(){
bp.sync({request:[O(input[2].x, input[2].y), O(input[1].x, input[1].y), O(input[2].x, input[2].y)]},7);
});

bp.registerBThread(""O_Player_Thread_6_4"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[1].x, input[1].y)]},2);
});

}
var inputs_6 = [[{x: 0, y: 0}, {x: 0, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 2}, {x: 0, y: 2}]]
inputs_6.forEach(function (input) {
behaviorSet6(input);
});

function behaviorSet7(input) {
bp.registerBThread(""O_Player_Thread_7_1"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y), X(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[3].x, input[3].y)]},3);
});

bp.registerBThread(""O_Player_Thread_7_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[3].x, input[3].y)]},7);
});

bp.registerBThread(""O_Player_Thread_7_3"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[3].x, input[3].y)]},11);
});

bp.registerBThread(""O_Player_Thread_7_4"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[3].x, input[3].y)]},5);
});

}
var inputs_7 = [[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 2, y: 2}],
[{x: 1, y: 0}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 1, y: 1}],
[{x: 0, y: 0}, {x: 2, y: 2}, {x: 0, y: 2}, {x: 1, y: 0}],
[{x: 1, y: 0}, {x: 1, y: 0}, {x: 0, y: 0}, {x: 2, y: 2}],
[{x: 1, y: 2}, {x: 0, y: 0}, {x: 2, y: 2}, {x: 2, y: 1}],
[{x: 2, y: 1}, {x: 0, y: 0}, {x: 0, y: 0}, {x: 0, y: 2}]]
inputs_7.forEach(function (input) {
behaviorSet7(input);
});

function behaviorSet8(input) {
bp.registerBThread(""O_Player_Thread_8_1"", function(){
bp.sync({waitFor:[X(input[4].x, input[4].y)]});
bp.sync({waitFor:[X(input[3].x, input[3].y), O(input[4].x, input[4].y), X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[2].x, input[2].y)]},6);
});

bp.registerBThread(""O_Player_Thread_8_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[4].x, input[4].y)]},8);
});

bp.registerBThread(""O_Player_Thread_8_3"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y), O(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[4].x, input[4].y)]});
bp.sync({waitFor:[O(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[3].x, input[3].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[4].x, input[4].y), O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[4].x, input[4].y)]},6);
});

}
var inputs_8 = [[{x: 0, y: 1}, {x: 2, y: 0}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}],
[{x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 2}]]
inputs_8.forEach(function (input) {
behaviorSet8(input);
});

function behaviorSet9(input) {
bp.registerBThread(""O_Player_Thread_9_1"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},9);
});

bp.registerBThread(""O_Player_Thread_9_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},2);
});

bp.registerBThread(""O_Player_Thread_9_3"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y), O(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},1);
});

bp.registerBThread(""O_Player_Thread_9_4"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), O(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y), O(input[0].x, input[0].y), X(input[0].x, input[0].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},3);
});

}
var inputs_9 = [[{x: 0, y: 0}],
[{x: 1, y: 1}],
[{x: 0, y: 0}],
[{x: 2, y: 1}]]
inputs_9.forEach(function (input) {
behaviorSet9(input);
});

function behaviorSet10(input) {
bp.registerBThread(""O_Player_Thread_10_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},8);
});

bp.registerBThread(""O_Player_Thread_10_2"", function(){
bp.sync({request:[O(input[0].x, input[0].y)]},1);
});

}
var inputs_10 = [[{x: 0, y: 0}, {x: 0, y: 1}, {x: 1, y: 0}],
[{x: 2, y: 1}, {x: 2, y: 0}, {x: 2, y: 2}],
[{x: 0, y: 2}, {x: 0, y: 2}, {x: 1, y: 0}],
[{x: 2, y: 1}, {x: 1, y: 2}, {x: 0, y: 0}],
[{x: 0, y: 2}, {x: 0, y: 0}, {x: 2, y: 2}],
[{x: 2, y: 2}, {x: 1, y: 0}, {x: 0, y: 0}],
[{x: 1, y: 2}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 2}, {x: 2, y: 1}, {x: 2, y: 0}]]
inputs_10.forEach(function (input) {
behaviorSet10(input);
});

"
24,4.0,1.0,39.984670413898826,16.0,2.0,32.0,64.0,22.0,39.0,0.0,20.0,"function behaviorSet1(input) {
bp.registerBThread(""O_Player_Thread_1_1"", function(){
bp.sync({waitFor:[X(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[5].x, input[5].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[2].x, input[2].y), O(input[3].x, input[3].y)]},9);
});

}
var inputs_1 = [[{x: 0, y: 1}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 1, y: 1}, {x: 2, y: 1}],
[{x: 0, y: 2}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 0}],
[{x: 1, y: 0}, {x: 1, y: 0}, {x: 2, y: 2}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 2}],
[{x: 1, y: 1}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 2}],
[{x: 1, y: 2}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 1, y: 2}],
[{x: 1, y: 2}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 1, y: 1}, {x: 0, y: 2}, {x: 2, y: 0}],
[{x: 1, y: 2}, {x: 2, y: 1}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 2}]]
inputs_1.forEach(function (input) {
behaviorSet1(input);
});

function behaviorSet2(input) {
bp.registerBThread(""O_Player_Thread_2_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[2].x, input[2].y), X(input[1].x, input[1].y), O(input[4].x, input[4].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[4].x, input[4].y), O(input[1].x, input[1].y)]},3);
});

}
var inputs_2 = [[{x: 1, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 2, y: 1}, {x: 0, y: 0}]]
inputs_2.forEach(function (input) {
behaviorSet2(input);
});

function behaviorSet3(input) {
bp.registerBThread(""O_Player_Thread_3_1"", function(){
bp.sync({waitFor:[O(input[1].x, input[1].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[1].x, input[1].y), O(input[2].x, input[2].y)]},7);
});

bp.registerBThread(""O_Player_Thread_3_2"", function(){
bp.sync({waitFor:[O(input[1].x, input[1].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[2].x, input[2].y)]},10);
});

bp.registerBThread(""O_Player_Thread_3_3"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y)]},4);
});

bp.registerBThread(""O_Player_Thread_3_4"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({waitFor:[X(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y), O(input[1].x, input[1].y)]},11);
});

}
var inputs_3 = [[{x: 0, y: 2}, {x: 2, y: 2}, {x: 2, y: 2}],
[{x: 2, y: 1}, {x: 0, y: 2}, {x: 1, y: 2}],
[{x: 2, y: 0}, {x: 2, y: 0}, {x: 1, y: 0}],
[{x: 2, y: 2}, {x: 1, y: 2}, {x: 0, y: 2}],
[{x: 2, y: 2}, {x: 0, y: 0}, {x: 2, y: 2}],
[{x: 0, y: 0}, {x: 1, y: 0}, {x: 0, y: 1}]]
inputs_3.forEach(function (input) {
behaviorSet3(input);
});

function behaviorSet4(input) {
bp.registerBThread(""O_Player_Thread_4_1"", function(){
bp.sync({request:[O(input[5].x, input[5].y), O(input[6].x, input[6].y), O(input[3].x, input[3].y)]},6);
});

}
var inputs_4 = [[{x: 0, y: 0}, {x: 1, y: 1}, {x: 2, y: 1}, {x: 1, y: 0}, {x: 1, y: 0}, {x: 2, y: 2}, {x: 2, y: 0}],
[{x: 1, y: 1}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 0, y: 1}, {x: 2, y: 0}, {x: 0, y: 2}]]
inputs_4.forEach(function (input) {
behaviorSet4(input);
});

function behaviorSet5(input) {
bp.registerBThread(""O_Player_Thread_5_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[0].x, input[0].y), X(input[2].x, input[2].y), X(input[6].x, input[6].y)]});
bp.sync({request:[O(input[5].x, input[5].y), O(input[0].x, input[0].y), O(input[4].x, input[4].y)]},9);
});

bp.registerBThread(""O_Player_Thread_5_2"", function(){
bp.sync({request:[O(input[0].x, input[0].y), O(input[6].x, input[6].y)]},7);
});

bp.registerBThread(""O_Player_Thread_5_3"", function(){
bp.sync({waitFor:[O(input[3].x, input[3].y), O(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[3].x, input[3].y)]});
bp.sync({request:[O(input[6].x, input[6].y), O(input[0].x, input[0].y), O(input[3].x, input[3].y), O(input[1].x, input[1].y)]},11);
});

bp.registerBThread(""O_Player_Thread_5_4"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), O(input[0].x, input[0].y)]});
bp.sync({waitFor:[O(input[6].x, input[6].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[2].x, input[2].y), O(input[1].x, input[1].y)]},2);
});

bp.registerBThread(""O_Player_Thread_5_5"", function(){
bp.sync({waitFor:[O(input[4].x, input[4].y), O(input[1].x, input[1].y), O(input[5].x, input[5].y), O(input[6].x, input[6].y)]});
bp.sync({request:[O(input[2].x, input[2].y)]},2);
});

}
var inputs_5 = [[{x: 0, y: 1}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 2}, {x: 1, y: 0}, {x: 1, y: 2}],
[{x: 2, y: 0}, {x: 0, y: 1}, {x: 0, y: 2}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 0, y: 0}, {x: 0, y: 2}],
[{x: 0, y: 0}, {x: 2, y: 0}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 1, y: 0}, {x: 0, y: 2}, {x: 2, y: 0}],
[{x: 2, y: 2}, {x: 0, y: 1}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 1, y: 0}, {x: 1, y: 2}],
[{x: 0, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 2, y: 2}]]
inputs_5.forEach(function (input) {
behaviorSet5(input);
});

function behaviorSet6(input) {
bp.registerBThread(""O_Player_Thread_6_1"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[1].x, input[1].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y)]},6);
});

bp.registerBThread(""O_Player_Thread_6_2"", function(){
bp.sync({request:[O(input[2].x, input[2].y)]},2);
});

bp.registerBThread(""O_Player_Thread_6_3"", function(){
bp.sync({request:[O(input[2].x, input[2].y), O(input[1].x, input[1].y), O(input[2].x, input[2].y)]},7);
});

bp.registerBThread(""O_Player_Thread_6_4"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[1].x, input[1].y)]},2);
});

}
var inputs_6 = [[{x: 0, y: 0}, {x: 0, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 2}, {x: 0, y: 2}]]
inputs_6.forEach(function (input) {
behaviorSet6(input);
});

function behaviorSet7(input) {
bp.registerBThread(""O_Player_Thread_7_1"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y), X(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[3].x, input[3].y)]},3);
});

bp.registerBThread(""O_Player_Thread_7_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[3].x, input[3].y)]},7);
});

bp.registerBThread(""O_Player_Thread_7_3"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[3].x, input[3].y)]},11);
});

bp.registerBThread(""O_Player_Thread_7_4"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[3].x, input[3].y)]},5);
});

}
var inputs_7 = [[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 2, y: 2}],
[{x: 1, y: 0}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 1, y: 1}],
[{x: 0, y: 0}, {x: 2, y: 2}, {x: 0, y: 2}, {x: 1, y: 0}],
[{x: 1, y: 0}, {x: 1, y: 0}, {x: 0, y: 0}, {x: 2, y: 2}],
[{x: 1, y: 2}, {x: 0, y: 0}, {x: 2, y: 2}, {x: 2, y: 1}],
[{x: 2, y: 1}, {x: 0, y: 0}, {x: 0, y: 0}, {x: 0, y: 2}]]
inputs_7.forEach(function (input) {
behaviorSet7(input);
});

function behaviorSet8(input) {
bp.registerBThread(""O_Player_Thread_8_1"", function(){
bp.sync({waitFor:[X(input[4].x, input[4].y)]});
bp.sync({waitFor:[X(input[3].x, input[3].y), O(input[4].x, input[4].y), X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[2].x, input[2].y)]},6);
});

bp.registerBThread(""O_Player_Thread_8_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[4].x, input[4].y)]},8);
});

bp.registerBThread(""O_Player_Thread_8_3"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y), O(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[4].x, input[4].y)]});
bp.sync({waitFor:[O(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[3].x, input[3].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[4].x, input[4].y), O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[4].x, input[4].y)]},6);
});

}
var inputs_8 = [[{x: 0, y: 1}, {x: 2, y: 0}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}],
[{x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 2}]]
inputs_8.forEach(function (input) {
behaviorSet8(input);
});

function behaviorSet9(input) {
bp.registerBThread(""O_Player_Thread_9_1"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},9);
});

bp.registerBThread(""O_Player_Thread_9_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},2);
});

bp.registerBThread(""O_Player_Thread_9_3"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y), O(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},1);
});

bp.registerBThread(""O_Player_Thread_9_4"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), O(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y), O(input[0].x, input[0].y), X(input[0].x, input[0].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},3);
});

}
var inputs_9 = [[{x: 0, y: 0}],
[{x: 1, y: 1}],
[{x: 0, y: 0}],
[{x: 2, y: 1}]]
inputs_9.forEach(function (input) {
behaviorSet9(input);
});

function behaviorSet10(input) {
bp.registerBThread(""O_Player_Thread_10_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},8);
});

bp.registerBThread(""O_Player_Thread_10_2"", function(){
bp.sync({request:[O(input[0].x, input[0].y)]},1);
});

}
var inputs_10 = [[{x: 0, y: 0}, {x: 0, y: 1}, {x: 1, y: 0}],
[{x: 2, y: 1}, {x: 2, y: 0}, {x: 2, y: 2}],
[{x: 0, y: 2}, {x: 0, y: 2}, {x: 1, y: 0}],
[{x: 2, y: 1}, {x: 1, y: 2}, {x: 0, y: 0}],
[{x: 0, y: 2}, {x: 0, y: 0}, {x: 2, y: 2}],
[{x: 2, y: 2}, {x: 1, y: 0}, {x: 0, y: 0}],
[{x: 1, y: 2}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 2}, {x: 2, y: 1}, {x: 2, y: 0}]]
inputs_10.forEach(function (input) {
behaviorSet10(input);
});

"
25,4.0,4.0,36.63274745605921,20.0,2.0,28.0,66.0,26.0,28.0,0.0,18.0,"function behaviorSet1(input) {
bp.registerBThread(""O_Player_Thread_1_1"", function(){
bp.sync({waitFor:[X(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[5].x, input[5].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[2].x, input[2].y), O(input[3].x, input[3].y)]},9);
});

}
var inputs_1 = [[{x: 0, y: 1}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 1, y: 1}, {x: 2, y: 1}],
[{x: 0, y: 2}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 0}],
[{x: 1, y: 0}, {x: 1, y: 0}, {x: 2, y: 2}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 2}],
[{x: 1, y: 1}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 2}],
[{x: 1, y: 2}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 1, y: 2}],
[{x: 1, y: 2}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 1, y: 1}, {x: 0, y: 2}, {x: 2, y: 0}],
[{x: 1, y: 2}, {x: 2, y: 1}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 2}]]
inputs_1.forEach(function (input) {
behaviorSet1(input);
});

function behaviorSet2(input) {
bp.registerBThread(""O_Player_Thread_2_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[2].x, input[2].y), X(input[1].x, input[1].y), O(input[4].x, input[4].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[4].x, input[4].y), O(input[1].x, input[1].y)]},3);
});

}
var inputs_2 = [[{x: 1, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 2, y: 1}, {x: 0, y: 0}]]
inputs_2.forEach(function (input) {
behaviorSet2(input);
});

function behaviorSet3(input) {
bp.registerBThread(""O_Player_Thread_3_1"", function(){
bp.sync({waitFor:[O(input[1].x, input[1].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[1].x, input[1].y), O(input[2].x, input[2].y)]},7);
});

bp.registerBThread(""O_Player_Thread_3_2"", function(){
bp.sync({waitFor:[O(input[1].x, input[1].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[2].x, input[2].y)]},10);
});

bp.registerBThread(""O_Player_Thread_3_3"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y)]},4);
});

bp.registerBThread(""O_Player_Thread_3_4"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y), O(input[1].x, input[1].y)]});
bp.sync({waitFor:[X(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y), O(input[1].x, input[1].y)]},11);
});

}
var inputs_3 = [[{x: 0, y: 2}, {x: 2, y: 2}, {x: 2, y: 2}],
[{x: 2, y: 1}, {x: 0, y: 2}, {x: 1, y: 2}],
[{x: 2, y: 0}, {x: 2, y: 0}, {x: 1, y: 0}],
[{x: 2, y: 2}, {x: 1, y: 2}, {x: 0, y: 2}],
[{x: 2, y: 2}, {x: 0, y: 0}, {x: 2, y: 2}],
[{x: 0, y: 0}, {x: 1, y: 0}, {x: 0, y: 1}]]
inputs_3.forEach(function (input) {
behaviorSet3(input);
});

function behaviorSet4(input) {
bp.registerBThread(""O_Player_Thread_4_1"", function(){
bp.sync({request:[O(input[5].x, input[5].y), O(input[6].x, input[6].y), O(input[3].x, input[3].y)]},6);
});

}
var inputs_4 = [[{x: 0, y: 0}, {x: 1, y: 1}, {x: 2, y: 1}, {x: 1, y: 0}, {x: 1, y: 0}, {x: 2, y: 2}, {x: 2, y: 0}],
[{x: 1, y: 1}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 0, y: 1}, {x: 2, y: 0}, {x: 0, y: 2}]]
inputs_4.forEach(function (input) {
behaviorSet4(input);
});

function behaviorSet5(input) {
bp.registerBThread(""O_Player_Thread_5_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[0].x, input[0].y), X(input[2].x, input[2].y), X(input[6].x, input[6].y)]});
bp.sync({request:[O(input[5].x, input[5].y), O(input[0].x, input[0].y), O(input[4].x, input[4].y)]},9);
});

bp.registerBThread(""O_Player_Thread_5_2"", function(){
bp.sync({request:[O(input[0].x, input[0].y), O(input[6].x, input[6].y)]},7);
});

bp.registerBThread(""O_Player_Thread_5_3"", function(){
bp.sync({waitFor:[O(input[3].x, input[3].y), O(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[3].x, input[3].y)]});
bp.sync({request:[O(input[6].x, input[6].y), O(input[0].x, input[0].y), O(input[3].x, input[3].y), O(input[1].x, input[1].y)]},11);
});

bp.registerBThread(""O_Player_Thread_5_4"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), O(input[0].x, input[0].y)]});
bp.sync({waitFor:[O(input[6].x, input[6].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[2].x, input[2].y), O(input[1].x, input[1].y)]},2);
});

bp.registerBThread(""O_Player_Thread_5_5"", function(){
bp.sync({waitFor:[O(input[4].x, input[4].y), O(input[1].x, input[1].y), O(input[5].x, input[5].y), O(input[6].x, input[6].y)]});
bp.sync({request:[O(input[2].x, input[2].y)]},2);
});

}
var inputs_5 = [[{x: 0, y: 1}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 2}, {x: 1, y: 0}, {x: 1, y: 2}],
[{x: 2, y: 0}, {x: 0, y: 1}, {x: 0, y: 2}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 0, y: 0}, {x: 0, y: 2}],
[{x: 0, y: 0}, {x: 2, y: 0}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 1, y: 0}, {x: 0, y: 2}, {x: 2, y: 0}],
[{x: 2, y: 2}, {x: 0, y: 1}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 1, y: 0}, {x: 1, y: 2}],
[{x: 0, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 2, y: 2}]]
inputs_5.forEach(function (input) {
behaviorSet5(input);
});

function behaviorSet6(input) {
bp.registerBThread(""O_Player_Thread_6_1"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[1].x, input[1].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y)]},6);
});

bp.registerBThread(""O_Player_Thread_6_2"", function(){
bp.sync({request:[O(input[2].x, input[2].y)]},2);
});

bp.registerBThread(""O_Player_Thread_6_3"", function(){
bp.sync({request:[O(input[2].x, input[2].y), O(input[1].x, input[1].y), O(input[2].x, input[2].y)]},7);
});

bp.registerBThread(""O_Player_Thread_6_4"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[1].x, input[1].y)]},2);
});

}
var inputs_6 = [[{x: 0, y: 0}, {x: 0, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 2}, {x: 0, y: 2}]]
inputs_6.forEach(function (input) {
behaviorSet6(input);
});

function behaviorSet7(input) {
bp.registerBThread(""O_Player_Thread_7_1"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y), X(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[3].x, input[3].y)]},3);
});

bp.registerBThread(""O_Player_Thread_7_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[3].x, input[3].y)]},7);
});

bp.registerBThread(""O_Player_Thread_7_3"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[3].x, input[3].y)]},11);
});

bp.registerBThread(""O_Player_Thread_7_4"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[3].x, input[3].y)]},5);
});

}
var inputs_7 = [[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 2, y: 2}],
[{x: 1, y: 0}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 1, y: 1}],
[{x: 0, y: 0}, {x: 2, y: 2}, {x: 0, y: 2}, {x: 1, y: 0}],
[{x: 1, y: 0}, {x: 1, y: 0}, {x: 0, y: 0}, {x: 2, y: 2}],
[{x: 1, y: 2}, {x: 0, y: 0}, {x: 2, y: 2}, {x: 2, y: 1}],
[{x: 2, y: 1}, {x: 0, y: 0}, {x: 0, y: 0}, {x: 0, y: 2}]]
inputs_7.forEach(function (input) {
behaviorSet7(input);
});

function behaviorSet8(input) {
bp.registerBThread(""O_Player_Thread_8_1"", function(){
bp.sync({waitFor:[X(input[4].x, input[4].y)]});
bp.sync({waitFor:[X(input[3].x, input[3].y), O(input[4].x, input[4].y), X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[2].x, input[2].y)]},6);
});

bp.registerBThread(""O_Player_Thread_8_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[4].x, input[4].y)]},8);
});

bp.registerBThread(""O_Player_Thread_8_3"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y), O(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[4].x, input[4].y)]});
bp.sync({waitFor:[O(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[3].x, input[3].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[4].x, input[4].y), O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[4].x, input[4].y)]},6);
});

}
var inputs_8 = [[{x: 0, y: 1}, {x: 2, y: 0}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}],
[{x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 2}]]
inputs_8.forEach(function (input) {
behaviorSet8(input);
});

function behaviorSet9(input) {
bp.registerBThread(""O_Player_Thread_9_1"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},9);
});

bp.registerBThread(""O_Player_Thread_9_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},2);
});

bp.registerBThread(""O_Player_Thread_9_3"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y), O(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},1);
});

bp.registerBThread(""O_Player_Thread_9_4"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), O(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y), O(input[0].x, input[0].y), X(input[0].x, input[0].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},3);
});

}
var inputs_9 = [[{x: 0, y: 0}],
[{x: 1, y: 1}],
[{x: 0, y: 0}],
[{x: 2, y: 1}]]
inputs_9.forEach(function (input) {
behaviorSet9(input);
});

function behaviorSet10(input) {
bp.registerBThread(""O_Player_Thread_10_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},8);
});

bp.registerBThread(""O_Player_Thread_10_2"", function(){
bp.sync({request:[O(input[0].x, input[0].y)]},1);
});

}
var inputs_10 = [[{x: 0, y: 0}, {x: 0, y: 1}, {x: 1, y: 0}],
[{x: 2, y: 1}, {x: 2, y: 0}, {x: 2, y: 2}],
[{x: 0, y: 2}, {x: 0, y: 2}, {x: 1, y: 0}],
[{x: 2, y: 1}, {x: 1, y: 2}, {x: 0, y: 0}],
[{x: 0, y: 2}, {x: 0, y: 0}, {x: 2, y: 2}],
[{x: 2, y: 2}, {x: 1, y: 0}, {x: 0, y: 0}],
[{x: 1, y: 2}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 2}, {x: 2, y: 1}, {x: 2, y: 0}]]
inputs_10.forEach(function (input) {
behaviorSet10(input);
});

"
26,4.0,2.0,41.901776384535005,12.0,10.0,28.0,57.0,17.0,42.0,0.0,18.0,"function behaviorSet1(input) {
bp.registerBThread(""O_Player_Thread_1_1"", function(){
bp.sync({waitFor:[O(input[5].x, input[5].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[5].x, input[5].y)]},2);
});

}
var inputs_1 = [[{x: 0, y: 1}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 0, y: 2}, {x: 1, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 0}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 1, y: 0}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 2, y: 1}],
[{x: 0, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 1}],
[{x: 1, y: 1}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 1}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 1, y: 0}, {x: 0, y: 2}]]
inputs_1.forEach(function (input) {
behaviorSet1(input);
});

function behaviorSet2(input) {
bp.registerBThread(""O_Player_Thread_2_1"", function(){
bp.sync({request:[O(input[6].x, input[6].y), O(input[3].x, input[3].y), O(input[2].x, input[2].y), O(input[2].x, input[2].y)]},4);
});

bp.registerBThread(""O_Player_Thread_2_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[5].x, input[5].y), X(input[7].x, input[7].y)]});
bp.sync({request:[O(input[7].x, input[7].y)]},2);
});

bp.registerBThread(""O_Player_Thread_2_3"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[0].x, input[0].y)]},8);
});

}
var inputs_2 = [[{x: 1, y: 0}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 2, y: 2}, {x: 1, y: 2}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 2, y: 2}, {x: 1, y: 1}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 1, y: 0}],
[{x: 2, y: 2}, {x: 1, y: 2}, {x: 0, y: 2}, {x: 1, y: 2}, {x: 1, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 0, y: 2}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 0, y: 2}],
[{x: 1, y: 0}, {x: 0, y: 0}, {x: 0, y: 1}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 0, y: 2}]]
inputs_2.forEach(function (input) {
behaviorSet2(input);
});

function behaviorSet3(input) {
bp.registerBThread(""O_Player_Thread_3_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y)]},9);
});

bp.registerBThread(""O_Player_Thread_3_2"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), O(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y)]},4);
});

bp.registerBThread(""O_Player_Thread_3_3"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y), X(input[2].x, input[2].y), O(input[1].x, input[1].y), X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y)]},10);
});

bp.registerBThread(""O_Player_Thread_3_4"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[1].x, input[1].y)]});
bp.sync({waitFor:[X(input[2].x, input[2].y), O(input[1].x, input[1].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},11);
});

bp.registerBThread(""O_Player_Thread_3_5"", function(){
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},10);
});

}
var inputs_3 = [[{x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}],
[{x: 1, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}],
[{x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 0}]]
inputs_3.forEach(function (input) {
behaviorSet3(input);
});

function behaviorSet4(input) {
bp.registerBThread(""O_Player_Thread_4_1"", function(){
bp.sync({waitFor:[O(input[4].x, input[4].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_4_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[3].x, input[3].y)]},8);
});

}
var inputs_4 = [[{x: 2, y: 0}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 2, y: 1}, {x: 1, y: 0}],
[{x: 2, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 0, y: 0}],
[{x: 0, y: 2}, {x: 1, y: 2}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 0, y: 0}],
[{x: 1, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 2, y: 0}, {x: 0, y: 0}],
[{x: 2, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 2, y: 2}]]
inputs_4.forEach(function (input) {
behaviorSet4(input);
});

function behaviorSet5(input) {
bp.registerBThread(""O_Player_Thread_5_1"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[1].x, input[1].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},3);
});

bp.registerBThread(""O_Player_Thread_5_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},9);
});

bp.registerBThread(""O_Player_Thread_5_3"", function(){
bp.sync({request:[O(input[0].x, input[0].y), O(input[2].x, input[2].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y)]},4);
});

}
var inputs_5 = [[{x: 1, y: 0}, {x: 1, y: 1}, {x: 1, y: 2}],
[{x: 2, y: 2}, {x: 0, y: 2}, {x: 2, y: 1}]]
inputs_5.forEach(function (input) {
behaviorSet5(input);
});

function behaviorSet6(input) {
bp.registerBThread(""O_Player_Thread_6_1"", function(){
bp.sync({waitFor:[O(input[1].x, input[1].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_6_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[1].x, input[1].y), O(input[1].x, input[1].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},10);
});

bp.registerBThread(""O_Player_Thread_6_3"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_6_4"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[1].x, input[1].y)]},3);
});

}
var inputs_6 = [[{x: 0, y: 2}, {x: 1, y: 0}],
[{x: 0, y: 0}, {x: 1, y: 2}]]
inputs_6.forEach(function (input) {
behaviorSet6(input);
});

function behaviorSet7(input) {
bp.registerBThread(""O_Player_Thread_7_1"", function(){
bp.sync({request:[O(input[4].x, input[4].y), O(input[3].x, input[3].y), O(input[1].x, input[1].y), O(input[4].x, input[4].y)]},2);
});

}
var inputs_7 = [[{x: 0, y: 1}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 1, y: 2}, {x: 1, y: 2}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 1, y: 2}],
[{x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 0, y: 2}],
[{x: 0, y: 1}, {x: 0, y: 2}, {x: 1, y: 1}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 2, y: 0}],
[{x: 1, y: 2}, {x: 0, y: 2}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 0, y: 0}, {x: 1, y: 2}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 2}, {x: 2, y: 1}]]
inputs_7.forEach(function (input) {
behaviorSet7(input);
});

function behaviorSet8(input) {
bp.registerBThread(""O_Player_Thread_8_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[0].x, input[0].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_8_2"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[1].x, input[1].y)]},4);
});

bp.registerBThread(""O_Player_Thread_8_3"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[1].x, input[1].y), O(input[0].x, input[0].y), X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[1].x, input[1].y)]},3);
});

}
var inputs_8 = [[{x: 1, y: 2}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 2, y: 2}],
[{x: 2, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}],
[{x: 0, y: 0}, {x: 2, y: 2}]]
inputs_8.forEach(function (input) {
behaviorSet8(input);
});

function behaviorSet9(input) {
bp.registerBThread(""O_Player_Thread_9_1"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y)]});
bp.sync({waitFor:[X(input[3].x, input[3].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},2);
});

bp.registerBThread(""O_Player_Thread_9_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y), O(input[2].x, input[2].y)]},8);
});

}
var inputs_9 = [[{x: 2, y: 0}, {x: 1, y: 2}, {x: 1, y: 2}, {x: 0, y: 1}],
[{x: 2, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}],
[{x: 0, y: 0}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 2, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}, {x: 1, y: 2}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}],
[{x: 1, y: 2}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 1, y: 0}]]
inputs_9.forEach(function (input) {
behaviorSet9(input);
});

function behaviorSet10(input) {
bp.registerBThread(""O_Player_Thread_10_1"", function(){
bp.sync({waitFor:[X(input[5].x, input[5].y)]});
bp.sync({waitFor:[O(input[3].x, input[3].y), O(input[6].x, input[6].y), X(input[2].x, input[2].y), X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[5].x, input[5].y), O(input[7].x, input[7].y)]},6);
});

bp.registerBThread(""O_Player_Thread_10_2"", function(){
bp.sync({request:[O(input[6].x, input[6].y)]},2);
});

bp.registerBThread(""O_Player_Thread_10_3"", function(){
bp.sync({waitFor:[X(input[7].x, input[7].y), O(input[3].x, input[3].y), O(input[6].x, input[6].y), O(input[5].x, input[5].y)]});
bp.sync({waitFor:[O(input[7].x, input[7].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[4].x, input[4].y), O(input[3].x, input[3].y), O(input[6].x, input[6].y), O(input[4].x, input[4].y)]},5);
});

bp.registerBThread(""O_Player_Thread_10_4"", function(){
bp.sync({waitFor:[X(input[4].x, input[4].y)]});
bp.sync({waitFor:[X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[4].x, input[4].y), O(input[7].x, input[7].y), O(input[3].x, input[3].y), O(input[2].x, input[2].y)]},9);
});

bp.registerBThread(""O_Player_Thread_10_5"", function(){
bp.sync({waitFor:[X(input[5].x, input[5].y), O(input[2].x, input[2].y), O(input[6].x, input[6].y)]});
bp.sync({request:[O(input[5].x, input[5].y), O(input[0].x, input[0].y), O(input[7].x, input[7].y)]},1);
});

}
var inputs_10 = [[{x: 1, y: 1}, {x: 0, y: 2}, {x: 1, y: 2}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 2}, {x: 0, y: 1}],
[{x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 1}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 0, y: 1}, {x: 2, y: 2}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 1}],
[{x: 1, y: 0}, {x: 1, y: 0}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}],
[{x: 0, y: 0}, {x: 1, y: 0}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 2, y: 2}, {x: 0, y: 0}],
[{x: 2, y: 1}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 1, y: 2}, {x: 2, y: 1}, {x: 0, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 2, y: 2}, {x: 2, y: 2}],
[{x: 0, y: 1}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 2, y: 0}, {x: 2, y: 2}]]
inputs_10.forEach(function (input) {
behaviorSet10(input);
});

"
27,4.0,7.0,45.27714932126697,20.0,2.0,28.0,71.0,14.0,33.0,0.0,21.0,"function behaviorSet1(input) {
bp.registerBThread(""O_Player_Thread_1_1"", function(){
bp.sync({waitFor:[X(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[5].x, input[5].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[2].x, input[2].y), O(input[3].x, input[3].y)]},9);
});

}
var inputs_1 = [[{x: 0, y: 1}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 1, y: 1}, {x: 2, y: 1}],
[{x: 0, y: 2}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 0}],
[{x: 1, y: 0}, {x: 1, y: 0}, {x: 2, y: 2}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 2}],
[{x: 1, y: 1}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 2}],
[{x: 1, y: 2}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 1, y: 2}],
[{x: 1, y: 2}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 1, y: 1}, {x: 0, y: 2}, {x: 2, y: 0}],
[{x: 1, y: 2}, {x: 2, y: 1}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 2}]]
inputs_1.forEach(function (input) {
behaviorSet1(input);
});

function behaviorSet2(input) {
bp.registerBThread(""O_Player_Thread_2_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[2].x, input[2].y), X(input[1].x, input[1].y), O(input[4].x, input[4].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[4].x, input[4].y), O(input[1].x, input[1].y)]},3);
});

}
var inputs_2 = [[{x: 1, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 2, y: 1}, {x: 0, y: 0}]]
inputs_2.forEach(function (input) {
behaviorSet2(input);
});

function behaviorSet3(input) {
bp.registerBThread(""O_Player_Thread_3_1"", function(){
bp.sync({waitFor:[O(input[1].x, input[1].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[1].x, input[1].y), O(input[2].x, input[2].y)]},7);
});

bp.registerBThread(""O_Player_Thread_3_2"", function(){
bp.sync({waitFor:[O(input[1].x, input[1].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[2].x, input[2].y)]},10);
});

bp.registerBThread(""O_Player_Thread_3_3"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y)]},4);
});

bp.registerBThread(""O_Player_Thread_3_4"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y), O(input[1].x, input[1].y)]});
bp.sync({waitFor:[X(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y), O(input[1].x, input[1].y)]},11);
});

}
var inputs_3 = [[{x: 0, y: 2}, {x: 2, y: 2}, {x: 2, y: 2}],
[{x: 2, y: 1}, {x: 0, y: 2}, {x: 1, y: 2}],
[{x: 2, y: 0}, {x: 2, y: 0}, {x: 1, y: 0}],
[{x: 2, y: 2}, {x: 1, y: 2}, {x: 0, y: 2}],
[{x: 2, y: 2}, {x: 0, y: 0}, {x: 2, y: 2}],
[{x: 0, y: 0}, {x: 1, y: 0}, {x: 0, y: 1}]]
inputs_3.forEach(function (input) {
behaviorSet3(input);
});

function behaviorSet4(input) {
bp.registerBThread(""O_Player_Thread_4_1"", function(){
bp.sync({request:[O(input[5].x, input[5].y), O(input[6].x, input[6].y), O(input[3].x, input[3].y)]},6);
});

}
var inputs_4 = [[{x: 0, y: 0}, {x: 1, y: 1}, {x: 2, y: 1}, {x: 1, y: 0}, {x: 1, y: 0}, {x: 2, y: 2}, {x: 2, y: 0}],
[{x: 1, y: 1}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 0, y: 1}, {x: 2, y: 0}, {x: 0, y: 2}]]
inputs_4.forEach(function (input) {
behaviorSet4(input);
});

function behaviorSet5(input) {
bp.registerBThread(""O_Player_Thread_5_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[0].x, input[0].y), X(input[2].x, input[2].y), X(input[6].x, input[6].y)]});
bp.sync({request:[O(input[5].x, input[5].y), O(input[0].x, input[0].y), O(input[4].x, input[4].y)]},9);
});

bp.registerBThread(""O_Player_Thread_5_2"", function(){
bp.sync({request:[O(input[0].x, input[0].y), O(input[6].x, input[6].y)]},7);
});

bp.registerBThread(""O_Player_Thread_5_3"", function(){
bp.sync({waitFor:[O(input[3].x, input[3].y), O(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[3].x, input[3].y)]});
bp.sync({request:[O(input[6].x, input[6].y), O(input[0].x, input[0].y), O(input[3].x, input[3].y), O(input[1].x, input[1].y)]},11);
});

bp.registerBThread(""O_Player_Thread_5_4"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), O(input[0].x, input[0].y)]});
bp.sync({waitFor:[O(input[6].x, input[6].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[2].x, input[2].y), O(input[1].x, input[1].y)]},2);
});

bp.registerBThread(""O_Player_Thread_5_5"", function(){
bp.sync({waitFor:[O(input[4].x, input[4].y), O(input[1].x, input[1].y), O(input[5].x, input[5].y), O(input[6].x, input[6].y)]});
bp.sync({request:[O(input[2].x, input[2].y)]},2);
});

}
var inputs_5 = [[{x: 0, y: 1}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 2}, {x: 1, y: 0}, {x: 1, y: 2}],
[{x: 2, y: 0}, {x: 0, y: 1}, {x: 0, y: 2}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 0, y: 0}, {x: 0, y: 2}],
[{x: 0, y: 0}, {x: 2, y: 0}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 1, y: 0}, {x: 0, y: 2}, {x: 2, y: 0}],
[{x: 2, y: 2}, {x: 0, y: 1}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 1, y: 0}, {x: 1, y: 2}],
[{x: 0, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 2, y: 2}]]
inputs_5.forEach(function (input) {
behaviorSet5(input);
});

function behaviorSet6(input) {
bp.registerBThread(""O_Player_Thread_6_1"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[1].x, input[1].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y)]},6);
});

bp.registerBThread(""O_Player_Thread_6_2"", function(){
bp.sync({request:[O(input[2].x, input[2].y)]},2);
});

bp.registerBThread(""O_Player_Thread_6_3"", function(){
bp.sync({request:[O(input[2].x, input[2].y), O(input[1].x, input[1].y), O(input[2].x, input[2].y)]},7);
});

bp.registerBThread(""O_Player_Thread_6_4"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[1].x, input[1].y)]},2);
});

}
var inputs_6 = [[{x: 0, y: 0}, {x: 0, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 2}, {x: 0, y: 2}]]
inputs_6.forEach(function (input) {
behaviorSet6(input);
});

function behaviorSet7(input) {
bp.registerBThread(""O_Player_Thread_7_1"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y), X(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[3].x, input[3].y)]},3);
});

bp.registerBThread(""O_Player_Thread_7_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[3].x, input[3].y)]},7);
});

bp.registerBThread(""O_Player_Thread_7_3"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[3].x, input[3].y)]},11);
});

bp.registerBThread(""O_Player_Thread_7_4"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[3].x, input[3].y)]},5);
});

}
var inputs_7 = [[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 2, y: 2}],
[{x: 1, y: 0}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 1, y: 1}],
[{x: 0, y: 0}, {x: 2, y: 2}, {x: 0, y: 2}, {x: 1, y: 0}],
[{x: 1, y: 0}, {x: 1, y: 0}, {x: 0, y: 0}, {x: 2, y: 2}],
[{x: 1, y: 2}, {x: 0, y: 0}, {x: 2, y: 2}, {x: 2, y: 1}],
[{x: 2, y: 1}, {x: 0, y: 0}, {x: 0, y: 0}, {x: 0, y: 2}]]
inputs_7.forEach(function (input) {
behaviorSet7(input);
});

function behaviorSet8(input) {
bp.registerBThread(""O_Player_Thread_8_1"", function(){
bp.sync({waitFor:[X(input[4].x, input[4].y)]});
bp.sync({waitFor:[X(input[3].x, input[3].y), O(input[4].x, input[4].y), X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[2].x, input[2].y)]},6);
});

bp.registerBThread(""O_Player_Thread_8_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[4].x, input[4].y)]},8);
});

bp.registerBThread(""O_Player_Thread_8_3"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y), O(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[4].x, input[4].y)]});
bp.sync({waitFor:[O(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[3].x, input[3].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[4].x, input[4].y), O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[4].x, input[4].y)]},6);
});

}
var inputs_8 = [[{x: 0, y: 1}, {x: 2, y: 0}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}],
[{x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 2}]]
inputs_8.forEach(function (input) {
behaviorSet8(input);
});

function behaviorSet9(input) {
bp.registerBThread(""O_Player_Thread_9_1"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},9);
});

bp.registerBThread(""O_Player_Thread_9_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},2);
});

bp.registerBThread(""O_Player_Thread_9_3"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y), O(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},1);
});

bp.registerBThread(""O_Player_Thread_9_4"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), O(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y), O(input[0].x, input[0].y), X(input[0].x, input[0].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},3);
});

}
var inputs_9 = [[{x: 0, y: 0}],
[{x: 1, y: 1}],
[{x: 0, y: 0}],
[{x: 2, y: 1}]]
inputs_9.forEach(function (input) {
behaviorSet9(input);
});

function behaviorSet10(input) {
bp.registerBThread(""O_Player_Thread_10_1"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},8);
});

bp.registerBThread(""O_Player_Thread_10_2"", function(){
bp.sync({request:[O(input[0].x, input[0].y)]},1);
});

}
var inputs_10 = [[{x: 0, y: 0}, {x: 0, y: 1}, {x: 1, y: 0}],
[{x: 2, y: 1}, {x: 2, y: 0}, {x: 2, y: 2}],
[{x: 0, y: 2}, {x: 0, y: 2}, {x: 1, y: 0}],
[{x: 2, y: 1}, {x: 1, y: 2}, {x: 0, y: 0}],
[{x: 0, y: 2}, {x: 0, y: 0}, {x: 2, y: 2}],
[{x: 2, y: 2}, {x: 1, y: 0}, {x: 0, y: 0}],
[{x: 1, y: 2}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 2}, {x: 2, y: 1}, {x: 2, y: 0}]]
inputs_10.forEach(function (input) {
behaviorSet10(input);
});

"
28,4.0,5.0,45.486111111111114,17.0,7.0,26.0,63.0,19.0,49.0,0.0,23.0,"function behaviorSet1(input) {
bp.registerBThread(""O_Player_Thread_1_1"", function(){
bp.sync({waitFor:[O(input[5].x, input[5].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[5].x, input[5].y)]},2);
});

}
var inputs_1 = [[{x: 0, y: 1}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 0, y: 2}, {x: 1, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 0}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 1, y: 0}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 2, y: 1}],
[{x: 0, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 1}],
[{x: 1, y: 1}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 1}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 1, y: 0}, {x: 0, y: 2}]]
inputs_1.forEach(function (input) {
behaviorSet1(input);
});

function behaviorSet2(input) {
bp.registerBThread(""O_Player_Thread_2_1"", function(){
bp.sync({request:[O(input[6].x, input[6].y), O(input[3].x, input[3].y), O(input[2].x, input[2].y), O(input[2].x, input[2].y)]},4);
});

bp.registerBThread(""O_Player_Thread_2_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[5].x, input[5].y), X(input[7].x, input[7].y)]});
bp.sync({request:[O(input[7].x, input[7].y)]},2);
});

bp.registerBThread(""O_Player_Thread_2_3"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[0].x, input[0].y)]},8);
});

}
var inputs_2 = [[{x: 1, y: 0}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 2, y: 2}, {x: 1, y: 2}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 2, y: 2}, {x: 1, y: 1}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 1, y: 0}],
[{x: 2, y: 2}, {x: 1, y: 2}, {x: 0, y: 2}, {x: 1, y: 2}, {x: 1, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 0, y: 2}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 0, y: 2}],
[{x: 1, y: 0}, {x: 0, y: 0}, {x: 0, y: 1}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 0, y: 2}]]
inputs_2.forEach(function (input) {
behaviorSet2(input);
});

function behaviorSet3(input) {
bp.registerBThread(""O_Player_Thread_3_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y)]},9);
});

bp.registerBThread(""O_Player_Thread_3_2"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), O(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y)]},4);
});

bp.registerBThread(""O_Player_Thread_3_3"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y), X(input[2].x, input[2].y), O(input[1].x, input[1].y), X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y)]},10);
});

bp.registerBThread(""O_Player_Thread_3_4"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[1].x, input[1].y)]});
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},11);
});

bp.registerBThread(""O_Player_Thread_3_5"", function(){
bp.sync({request:[O(input[1].x, input[1].y)]},2);
});

}
var inputs_3 = [[{x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}],
[{x: 1, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}],
[{x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 0}]]
inputs_3.forEach(function (input) {
behaviorSet3(input);
});

function behaviorSet4(input) {
bp.registerBThread(""O_Player_Thread_4_1"", function(){
bp.sync({waitFor:[O(input[4].x, input[4].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_4_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[3].x, input[3].y)]},8);
});

}
var inputs_4 = [[{x: 2, y: 0}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 2, y: 1}, {x: 1, y: 0}],
[{x: 2, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 0, y: 0}],
[{x: 0, y: 2}, {x: 1, y: 2}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 0, y: 0}],
[{x: 1, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 2, y: 0}, {x: 0, y: 0}],
[{x: 2, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 2, y: 2}]]
inputs_4.forEach(function (input) {
behaviorSet4(input);
});

function behaviorSet5(input) {
bp.registerBThread(""O_Player_Thread_5_1"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[1].x, input[1].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},3);
});

bp.registerBThread(""O_Player_Thread_5_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},9);
});

bp.registerBThread(""O_Player_Thread_5_3"", function(){
bp.sync({request:[O(input[0].x, input[0].y), O(input[2].x, input[2].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y)]},4);
});

}
var inputs_5 = [[{x: 1, y: 0}, {x: 1, y: 1}, {x: 1, y: 2}],
[{x: 2, y: 2}, {x: 0, y: 2}, {x: 2, y: 1}]]
inputs_5.forEach(function (input) {
behaviorSet5(input);
});

function behaviorSet6(input) {
bp.registerBThread(""O_Player_Thread_6_1"", function(){
bp.sync({waitFor:[O(input[1].x, input[1].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_6_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[1].x, input[1].y), O(input[1].x, input[1].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},10);
});

bp.registerBThread(""O_Player_Thread_6_3"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_6_4"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[1].x, input[1].y)]},3);
});

}
var inputs_6 = [[{x: 0, y: 2}, {x: 1, y: 0}],
[{x: 0, y: 0}, {x: 1, y: 2}]]
inputs_6.forEach(function (input) {
behaviorSet6(input);
});

function behaviorSet7(input) {
bp.registerBThread(""O_Player_Thread_7_1"", function(){
bp.sync({request:[O(input[4].x, input[4].y), O(input[3].x, input[3].y), O(input[1].x, input[1].y), O(input[4].x, input[4].y)]},2);
});

}
var inputs_7 = [[{x: 0, y: 1}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 1, y: 2}, {x: 1, y: 2}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 1, y: 2}],
[{x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 0, y: 2}],
[{x: 0, y: 1}, {x: 0, y: 2}, {x: 1, y: 1}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 2, y: 0}],
[{x: 1, y: 2}, {x: 0, y: 2}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 0, y: 0}, {x: 1, y: 2}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 2}, {x: 2, y: 1}]]
inputs_7.forEach(function (input) {
behaviorSet7(input);
});

function behaviorSet8(input) {
bp.registerBThread(""O_Player_Thread_8_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[0].x, input[0].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_8_2"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[1].x, input[1].y)]},4);
});

bp.registerBThread(""O_Player_Thread_8_3"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[1].x, input[1].y), O(input[0].x, input[0].y), X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[1].x, input[1].y)]},3);
});

}
var inputs_8 = [[{x: 1, y: 2}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 2, y: 2}],
[{x: 2, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}],
[{x: 0, y: 0}, {x: 2, y: 2}]]
inputs_8.forEach(function (input) {
behaviorSet8(input);
});

function behaviorSet9(input) {
bp.registerBThread(""O_Player_Thread_9_1"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y)]});
bp.sync({waitFor:[X(input[3].x, input[3].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},2);
});

bp.registerBThread(""O_Player_Thread_9_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y), O(input[2].x, input[2].y)]},8);
});

}
var inputs_9 = [[{x: 2, y: 0}, {x: 1, y: 2}, {x: 1, y: 2}, {x: 0, y: 1}],
[{x: 2, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}],
[{x: 0, y: 0}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 2, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}, {x: 1, y: 2}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}],
[{x: 1, y: 2}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 1, y: 0}]]
inputs_9.forEach(function (input) {
behaviorSet9(input);
});

function behaviorSet10(input) {
bp.registerBThread(""O_Player_Thread_10_1"", function(){
bp.sync({waitFor:[X(input[5].x, input[5].y)]});
bp.sync({waitFor:[O(input[3].x, input[3].y), O(input[6].x, input[6].y), X(input[2].x, input[2].y), X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[5].x, input[5].y), O(input[7].x, input[7].y)]},6);
});

bp.registerBThread(""O_Player_Thread_10_2"", function(){
bp.sync({request:[O(input[6].x, input[6].y)]},2);
});

bp.registerBThread(""O_Player_Thread_10_3"", function(){
bp.sync({waitFor:[X(input[7].x, input[7].y), O(input[3].x, input[3].y), O(input[6].x, input[6].y), O(input[5].x, input[5].y)]});
bp.sync({waitFor:[O(input[7].x, input[7].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[4].x, input[4].y), O(input[3].x, input[3].y), O(input[6].x, input[6].y), O(input[4].x, input[4].y)]},5);
});

bp.registerBThread(""O_Player_Thread_10_4"", function(){
bp.sync({waitFor:[X(input[4].x, input[4].y)]});
bp.sync({waitFor:[X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[4].x, input[4].y), O(input[7].x, input[7].y), O(input[3].x, input[3].y), O(input[2].x, input[2].y)]},9);
});

bp.registerBThread(""O_Player_Thread_10_5"", function(){
bp.sync({waitFor:[X(input[5].x, input[5].y), O(input[2].x, input[2].y), O(input[6].x, input[6].y)]});
bp.sync({request:[O(input[5].x, input[5].y), O(input[0].x, input[0].y), O(input[7].x, input[7].y)]},1);
});

}
var inputs_10 = [[{x: 1, y: 1}, {x: 0, y: 2}, {x: 1, y: 2}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 2}, {x: 0, y: 1}],
[{x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 1}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 0, y: 1}, {x: 2, y: 2}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 1}],
[{x: 1, y: 0}, {x: 1, y: 0}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}],
[{x: 0, y: 0}, {x: 1, y: 0}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 2, y: 2}, {x: 0, y: 0}],
[{x: 2, y: 1}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 1, y: 2}, {x: 2, y: 1}, {x: 0, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 2, y: 2}, {x: 2, y: 2}],
[{x: 0, y: 1}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 2, y: 0}, {x: 2, y: 2}]]
inputs_10.forEach(function (input) {
behaviorSet10(input);
});

"
29,4.0,8.0,36.30646083476272,14.0,4.0,32.0,74.0,19.0,32.0,0.0,19.0,"function behaviorSet1(input) {
bp.registerBThread(""O_Player_Thread_1_1"", function(){
bp.sync({waitFor:[X(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[5].x, input[5].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[2].x, input[2].y), O(input[3].x, input[3].y)]},9);
});

}
var inputs_1 = [[{x: 0, y: 1}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 1, y: 1}, {x: 2, y: 1}],
[{x: 0, y: 2}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 0}],
[{x: 1, y: 0}, {x: 1, y: 0}, {x: 2, y: 2}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 2}],
[{x: 1, y: 1}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 2}],
[{x: 1, y: 2}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 1, y: 2}],
[{x: 1, y: 2}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 1, y: 1}, {x: 0, y: 2}, {x: 2, y: 0}],
[{x: 1, y: 2}, {x: 2, y: 1}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 2}]]
inputs_1.forEach(function (input) {
behaviorSet1(input);
});

function behaviorSet2(input) {
bp.registerBThread(""O_Player_Thread_2_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[2].x, input[2].y), X(input[1].x, input[1].y), O(input[4].x, input[4].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[4].x, input[4].y), O(input[1].x, input[1].y)]},3);
});

}
var inputs_2 = [[{x: 1, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 2, y: 1}, {x: 0, y: 0}]]
inputs_2.forEach(function (input) {
behaviorSet2(input);
});

function behaviorSet3(input) {
bp.registerBThread(""O_Player_Thread_3_1"", function(){
bp.sync({waitFor:[O(input[1].x, input[1].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[1].x, input[1].y), O(input[2].x, input[2].y)]},7);
});

bp.registerBThread(""O_Player_Thread_3_2"", function(){
bp.sync({waitFor:[O(input[1].x, input[1].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[2].x, input[2].y)]},10);
});

bp.registerBThread(""O_Player_Thread_3_3"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y)]},4);
});

bp.registerBThread(""O_Player_Thread_3_4"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[1].x, input[1].y)]});
bp.sync({waitFor:[X(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y), O(input[1].x, input[1].y)]},11);
});

}
var inputs_3 = [[{x: 0, y: 2}, {x: 2, y: 2}, {x: 2, y: 2}],
[{x: 2, y: 1}, {x: 0, y: 2}, {x: 1, y: 2}],
[{x: 2, y: 0}, {x: 2, y: 0}, {x: 1, y: 0}],
[{x: 2, y: 2}, {x: 1, y: 2}, {x: 0, y: 2}],
[{x: 2, y: 2}, {x: 0, y: 0}, {x: 2, y: 2}],
[{x: 0, y: 0}, {x: 1, y: 0}, {x: 0, y: 1}]]
inputs_3.forEach(function (input) {
behaviorSet3(input);
});

function behaviorSet4(input) {
bp.registerBThread(""O_Player_Thread_4_1"", function(){
bp.sync({request:[O(input[5].x, input[5].y), O(input[6].x, input[6].y), O(input[3].x, input[3].y)]},6);
});

}
var inputs_4 = [[{x: 0, y: 0}, {x: 1, y: 1}, {x: 2, y: 1}, {x: 1, y: 0}, {x: 1, y: 0}, {x: 2, y: 2}, {x: 2, y: 0}],
[{x: 1, y: 1}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 0, y: 1}, {x: 2, y: 0}, {x: 0, y: 2}]]
inputs_4.forEach(function (input) {
behaviorSet4(input);
});

function behaviorSet5(input) {
bp.registerBThread(""O_Player_Thread_5_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[0].x, input[0].y), X(input[2].x, input[2].y), X(input[6].x, input[6].y)]});
bp.sync({request:[O(input[5].x, input[5].y), O(input[0].x, input[0].y), O(input[4].x, input[4].y)]},9);
});

bp.registerBThread(""O_Player_Thread_5_2"", function(){
bp.sync({request:[O(input[0].x, input[0].y), O(input[6].x, input[6].y)]},7);
});

bp.registerBThread(""O_Player_Thread_5_3"", function(){
bp.sync({waitFor:[O(input[3].x, input[3].y), O(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[3].x, input[3].y)]});
bp.sync({request:[O(input[6].x, input[6].y), O(input[0].x, input[0].y), O(input[3].x, input[3].y), O(input[1].x, input[1].y)]},11);
});

bp.registerBThread(""O_Player_Thread_5_4"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), O(input[0].x, input[0].y)]});
bp.sync({waitFor:[O(input[6].x, input[6].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[2].x, input[2].y), O(input[1].x, input[1].y)]},2);
});

bp.registerBThread(""O_Player_Thread_5_5"", function(){
bp.sync({waitFor:[O(input[4].x, input[4].y), O(input[1].x, input[1].y), O(input[5].x, input[5].y), O(input[6].x, input[6].y)]});
bp.sync({request:[O(input[2].x, input[2].y)]},2);
});

}
var inputs_5 = [[{x: 0, y: 1}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 2}, {x: 1, y: 0}, {x: 1, y: 2}],
[{x: 2, y: 0}, {x: 0, y: 1}, {x: 0, y: 2}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 0, y: 0}, {x: 0, y: 2}],
[{x: 0, y: 0}, {x: 2, y: 0}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 1, y: 0}, {x: 0, y: 2}, {x: 2, y: 0}],
[{x: 2, y: 2}, {x: 0, y: 1}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 1, y: 0}, {x: 1, y: 2}],
[{x: 0, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 2, y: 2}]]
inputs_5.forEach(function (input) {
behaviorSet5(input);
});

function behaviorSet6(input) {
bp.registerBThread(""O_Player_Thread_6_1"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[1].x, input[1].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y)]},6);
});

bp.registerBThread(""O_Player_Thread_6_2"", function(){
bp.sync({request:[O(input[2].x, input[2].y)]},2);
});

bp.registerBThread(""O_Player_Thread_6_3"", function(){
bp.sync({request:[O(input[2].x, input[2].y), O(input[1].x, input[1].y), O(input[2].x, input[2].y)]},7);
});

bp.registerBThread(""O_Player_Thread_6_4"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[1].x, input[1].y)]},2);
});

}
var inputs_6 = [[{x: 0, y: 0}, {x: 0, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 2}, {x: 0, y: 2}]]
inputs_6.forEach(function (input) {
behaviorSet6(input);
});

function behaviorSet7(input) {
bp.registerBThread(""O_Player_Thread_7_1"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y), X(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[3].x, input[3].y)]},3);
});

bp.registerBThread(""O_Player_Thread_7_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[3].x, input[3].y)]},7);
});

bp.registerBThread(""O_Player_Thread_7_3"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[3].x, input[3].y)]},11);
});

bp.registerBThread(""O_Player_Thread_7_4"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[3].x, input[3].y)]},5);
});

}
var inputs_7 = [[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 2, y: 2}],
[{x: 1, y: 0}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 1, y: 1}],
[{x: 0, y: 0}, {x: 2, y: 2}, {x: 0, y: 2}, {x: 1, y: 0}],
[{x: 1, y: 0}, {x: 1, y: 0}, {x: 0, y: 0}, {x: 2, y: 2}],
[{x: 1, y: 2}, {x: 0, y: 0}, {x: 2, y: 2}, {x: 2, y: 1}],
[{x: 2, y: 1}, {x: 0, y: 0}, {x: 0, y: 0}, {x: 0, y: 2}]]
inputs_7.forEach(function (input) {
behaviorSet7(input);
});

function behaviorSet8(input) {
bp.registerBThread(""O_Player_Thread_8_1"", function(){
bp.sync({waitFor:[X(input[4].x, input[4].y)]});
bp.sync({waitFor:[X(input[3].x, input[3].y), O(input[4].x, input[4].y), X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[2].x, input[2].y)]},6);
});

bp.registerBThread(""O_Player_Thread_8_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[4].x, input[4].y)]},8);
});

bp.registerBThread(""O_Player_Thread_8_3"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y), O(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[4].x, input[4].y)]});
bp.sync({waitFor:[O(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[3].x, input[3].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[4].x, input[4].y), O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[4].x, input[4].y)]},6);
});

}
var inputs_8 = [[{x: 0, y: 1}, {x: 2, y: 0}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}],
[{x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 2}]]
inputs_8.forEach(function (input) {
behaviorSet8(input);
});

function behaviorSet9(input) {
bp.registerBThread(""O_Player_Thread_9_1"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},9);
});

bp.registerBThread(""O_Player_Thread_9_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},2);
});

bp.registerBThread(""O_Player_Thread_9_3"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y), O(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},1);
});

bp.registerBThread(""O_Player_Thread_9_4"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), O(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y), O(input[0].x, input[0].y), X(input[0].x, input[0].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},3);
});

}
var inputs_9 = [[{x: 0, y: 0}],
[{x: 1, y: 1}],
[{x: 0, y: 0}],
[{x: 2, y: 1}]]
inputs_9.forEach(function (input) {
behaviorSet9(input);
});

function behaviorSet10(input) {
bp.registerBThread(""O_Player_Thread_10_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},8);
});

bp.registerBThread(""O_Player_Thread_10_2"", function(){
bp.sync({request:[O(input[0].x, input[0].y)]},1);
});

}
var inputs_10 = [[{x: 0, y: 0}, {x: 0, y: 1}, {x: 1, y: 0}],
[{x: 2, y: 1}, {x: 2, y: 0}, {x: 2, y: 2}],
[{x: 0, y: 2}, {x: 0, y: 2}, {x: 1, y: 0}],
[{x: 2, y: 1}, {x: 1, y: 2}, {x: 0, y: 0}],
[{x: 0, y: 2}, {x: 0, y: 0}, {x: 2, y: 2}],
[{x: 2, y: 2}, {x: 1, y: 0}, {x: 0, y: 0}],
[{x: 1, y: 2}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 2}, {x: 2, y: 1}, {x: 2, y: 0}]]
inputs_10.forEach(function (input) {
behaviorSet10(input);
});

"
30,4.0,3.0,42.41830065359477,16.0,6.0,28.0,56.0,18.0,34.0,0.0,15.0,"function behaviorSet1(input) {
bp.registerBThread(""O_Player_Thread_1_1"", function(){
bp.sync({waitFor:[X(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[5].x, input[5].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[2].x, input[2].y), O(input[3].x, input[3].y)]},9);
});

}
var inputs_1 = [[{x: 0, y: 1}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 1, y: 1}, {x: 2, y: 1}],
[{x: 0, y: 2}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 0}],
[{x: 1, y: 0}, {x: 1, y: 0}, {x: 2, y: 2}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 2}],
[{x: 1, y: 1}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 2}],
[{x: 1, y: 2}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 1, y: 2}],
[{x: 1, y: 2}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 1, y: 1}, {x: 0, y: 2}, {x: 2, y: 0}],
[{x: 1, y: 2}, {x: 2, y: 1}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 2}]]
inputs_1.forEach(function (input) {
behaviorSet1(input);
});

function behaviorSet2(input) {
bp.registerBThread(""O_Player_Thread_2_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[2].x, input[2].y), X(input[1].x, input[1].y), O(input[4].x, input[4].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[4].x, input[4].y), O(input[1].x, input[1].y)]},3);
});

}
var inputs_2 = [[{x: 1, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 2, y: 1}, {x: 0, y: 0}]]
inputs_2.forEach(function (input) {
behaviorSet2(input);
});

function behaviorSet3(input) {
bp.registerBThread(""O_Player_Thread_3_1"", function(){
bp.sync({waitFor:[O(input[1].x, input[1].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[1].x, input[1].y), O(input[2].x, input[2].y)]},7);
});

bp.registerBThread(""O_Player_Thread_3_2"", function(){
bp.sync({waitFor:[O(input[1].x, input[1].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[2].x, input[2].y)]},10);
});

bp.registerBThread(""O_Player_Thread_3_3"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y)]},4);
});

bp.registerBThread(""O_Player_Thread_3_4"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y), O(input[1].x, input[1].y)]});
bp.sync({waitFor:[X(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y), O(input[1].x, input[1].y)]},11);
});

}
var inputs_3 = [[{x: 0, y: 2}, {x: 2, y: 2}, {x: 2, y: 2}],
[{x: 2, y: 1}, {x: 0, y: 2}, {x: 1, y: 2}],
[{x: 2, y: 0}, {x: 2, y: 0}, {x: 1, y: 0}],
[{x: 2, y: 2}, {x: 1, y: 2}, {x: 0, y: 2}],
[{x: 2, y: 2}, {x: 0, y: 0}, {x: 2, y: 2}],
[{x: 0, y: 0}, {x: 1, y: 0}, {x: 0, y: 1}]]
inputs_3.forEach(function (input) {
behaviorSet3(input);
});

function behaviorSet4(input) {
bp.registerBThread(""O_Player_Thread_4_1"", function(){
bp.sync({request:[O(input[5].x, input[5].y), O(input[6].x, input[6].y), O(input[3].x, input[3].y)]},6);
});

}
var inputs_4 = [[{x: 0, y: 0}, {x: 1, y: 1}, {x: 2, y: 1}, {x: 1, y: 0}, {x: 1, y: 0}, {x: 2, y: 2}, {x: 2, y: 0}],
[{x: 1, y: 1}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 0, y: 1}, {x: 2, y: 0}, {x: 0, y: 2}]]
inputs_4.forEach(function (input) {
behaviorSet4(input);
});

function behaviorSet5(input) {
bp.registerBThread(""O_Player_Thread_5_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[0].x, input[0].y), X(input[2].x, input[2].y), X(input[6].x, input[6].y)]});
bp.sync({request:[O(input[5].x, input[5].y), O(input[0].x, input[0].y), O(input[4].x, input[4].y)]},9);
});

bp.registerBThread(""O_Player_Thread_5_2"", function(){
bp.sync({request:[O(input[0].x, input[0].y), O(input[6].x, input[6].y)]},7);
});

bp.registerBThread(""O_Player_Thread_5_3"", function(){
bp.sync({waitFor:[O(input[3].x, input[3].y), O(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[3].x, input[3].y)]});
bp.sync({request:[O(input[6].x, input[6].y), O(input[0].x, input[0].y), O(input[3].x, input[3].y), O(input[1].x, input[1].y)]},11);
});

bp.registerBThread(""O_Player_Thread_5_4"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), O(input[0].x, input[0].y)]});
bp.sync({waitFor:[O(input[6].x, input[6].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[2].x, input[2].y), O(input[1].x, input[1].y)]},2);
});

bp.registerBThread(""O_Player_Thread_5_5"", function(){
bp.sync({waitFor:[O(input[4].x, input[4].y), O(input[1].x, input[1].y), O(input[5].x, input[5].y), O(input[6].x, input[6].y)]});
bp.sync({request:[O(input[2].x, input[2].y)]},2);
});

}
var inputs_5 = [[{x: 0, y: 1}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 2}, {x: 1, y: 0}, {x: 1, y: 2}],
[{x: 2, y: 0}, {x: 0, y: 1}, {x: 0, y: 2}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 0, y: 0}, {x: 0, y: 2}],
[{x: 0, y: 0}, {x: 2, y: 0}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 1, y: 0}, {x: 0, y: 2}, {x: 2, y: 0}],
[{x: 2, y: 2}, {x: 0, y: 1}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 1, y: 0}, {x: 1, y: 2}],
[{x: 0, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 2, y: 2}]]
inputs_5.forEach(function (input) {
behaviorSet5(input);
});

function behaviorSet6(input) {
bp.registerBThread(""O_Player_Thread_6_1"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[1].x, input[1].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y)]},6);
});

bp.registerBThread(""O_Player_Thread_6_2"", function(){
bp.sync({request:[O(input[2].x, input[2].y)]},2);
});

bp.registerBThread(""O_Player_Thread_6_3"", function(){
bp.sync({request:[O(input[2].x, input[2].y), O(input[1].x, input[1].y), O(input[2].x, input[2].y)]},7);
});

bp.registerBThread(""O_Player_Thread_6_4"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[1].x, input[1].y)]},2);
});

}
var inputs_6 = [[{x: 0, y: 0}, {x: 0, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 2}, {x: 0, y: 2}]]
inputs_6.forEach(function (input) {
behaviorSet6(input);
});

function behaviorSet7(input) {
bp.registerBThread(""O_Player_Thread_7_1"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y), X(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[3].x, input[3].y)]},3);
});

bp.registerBThread(""O_Player_Thread_7_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[3].x, input[3].y)]},7);
});

bp.registerBThread(""O_Player_Thread_7_3"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[3].x, input[3].y)]},11);
});

bp.registerBThread(""O_Player_Thread_7_4"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[3].x, input[3].y)]},5);
});

}
var inputs_7 = [[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 2, y: 2}],
[{x: 1, y: 0}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 1, y: 1}],
[{x: 0, y: 0}, {x: 2, y: 2}, {x: 0, y: 2}, {x: 1, y: 0}],
[{x: 1, y: 0}, {x: 1, y: 0}, {x: 0, y: 0}, {x: 2, y: 2}],
[{x: 1, y: 2}, {x: 0, y: 0}, {x: 2, y: 2}, {x: 2, y: 1}],
[{x: 2, y: 1}, {x: 0, y: 0}, {x: 0, y: 0}, {x: 0, y: 2}]]
inputs_7.forEach(function (input) {
behaviorSet7(input);
});

function behaviorSet8(input) {
bp.registerBThread(""O_Player_Thread_8_1"", function(){
bp.sync({waitFor:[X(input[4].x, input[4].y)]});
bp.sync({waitFor:[X(input[3].x, input[3].y), O(input[4].x, input[4].y), X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[2].x, input[2].y)]},6);
});

bp.registerBThread(""O_Player_Thread_8_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[4].x, input[4].y)]},8);
});

bp.registerBThread(""O_Player_Thread_8_3"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y), O(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[4].x, input[4].y)]});
bp.sync({waitFor:[O(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[3].x, input[3].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[4].x, input[4].y), O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[4].x, input[4].y)]},6);
});

}
var inputs_8 = [[{x: 0, y: 1}, {x: 2, y: 0}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}],
[{x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 2}]]
inputs_8.forEach(function (input) {
behaviorSet8(input);
});

function behaviorSet9(input) {
bp.registerBThread(""O_Player_Thread_9_1"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},9);
});

bp.registerBThread(""O_Player_Thread_9_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},2);
});

bp.registerBThread(""O_Player_Thread_9_3"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y), O(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},1);
});

bp.registerBThread(""O_Player_Thread_9_4"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), O(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y), O(input[0].x, input[0].y), X(input[0].x, input[0].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},3);
});

}
var inputs_9 = [[{x: 0, y: 0}],
[{x: 1, y: 1}],
[{x: 0, y: 0}],
[{x: 2, y: 1}]]
inputs_9.forEach(function (input) {
behaviorSet9(input);
});

function behaviorSet10(input) {
bp.registerBThread(""O_Player_Thread_10_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},8);
});

bp.registerBThread(""O_Player_Thread_10_2"", function(){
bp.sync({request:[O(input[0].x, input[0].y)]},1);
});

}
var inputs_10 = [[{x: 0, y: 0}, {x: 0, y: 1}, {x: 1, y: 0}],
[{x: 2, y: 1}, {x: 2, y: 0}, {x: 2, y: 2}],
[{x: 0, y: 2}, {x: 0, y: 2}, {x: 1, y: 0}],
[{x: 2, y: 1}, {x: 1, y: 2}, {x: 0, y: 0}],
[{x: 0, y: 2}, {x: 0, y: 0}, {x: 2, y: 2}],
[{x: 2, y: 2}, {x: 1, y: 0}, {x: 0, y: 0}],
[{x: 1, y: 2}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 2}, {x: 2, y: 1}, {x: 2, y: 0}]]
inputs_10.forEach(function (input) {
behaviorSet10(input);
});

"
31,4.0,10.0,40.6095297029703,13.0,12.0,25.0,60.0,19.0,41.0,0.0,20.0,"function behaviorSet1(input) {
bp.registerBThread(""O_Player_Thread_1_1"", function(){
bp.sync({waitFor:[O(input[5].x, input[5].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[5].x, input[5].y)]},2);
});

}
var inputs_1 = [[{x: 0, y: 1}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 0, y: 2}, {x: 1, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 0}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 1, y: 0}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 2, y: 1}],
[{x: 0, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 1}],
[{x: 1, y: 1}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 1}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 1, y: 0}, {x: 0, y: 2}]]
inputs_1.forEach(function (input) {
behaviorSet1(input);
});

function behaviorSet2(input) {
bp.registerBThread(""O_Player_Thread_2_1"", function(){
bp.sync({request:[O(input[6].x, input[6].y), O(input[3].x, input[3].y), O(input[2].x, input[2].y), O(input[2].x, input[2].y)]},4);
});

bp.registerBThread(""O_Player_Thread_2_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[5].x, input[5].y), X(input[7].x, input[7].y)]});
bp.sync({request:[O(input[7].x, input[7].y)]},2);
});

bp.registerBThread(""O_Player_Thread_2_3"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[0].x, input[0].y)]},8);
});

}
var inputs_2 = [[{x: 1, y: 0}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 2, y: 2}, {x: 1, y: 2}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 2, y: 2}, {x: 1, y: 1}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 1, y: 0}],
[{x: 2, y: 2}, {x: 1, y: 2}, {x: 0, y: 2}, {x: 1, y: 2}, {x: 1, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 0, y: 2}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 0, y: 2}],
[{x: 1, y: 0}, {x: 0, y: 0}, {x: 0, y: 1}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 0, y: 2}]]
inputs_2.forEach(function (input) {
behaviorSet2(input);
});

function behaviorSet3(input) {
bp.registerBThread(""O_Player_Thread_3_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y)]},9);
});

bp.registerBThread(""O_Player_Thread_3_2"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), O(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y)]},4);
});

bp.registerBThread(""O_Player_Thread_3_3"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y), X(input[2].x, input[2].y), O(input[1].x, input[1].y), X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y)]},10);
});

bp.registerBThread(""O_Player_Thread_3_4"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[1].x, input[1].y)]});
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},11);
});

bp.registerBThread(""O_Player_Thread_3_5"", function(){
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},10);
});

}
var inputs_3 = [[{x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}],
[{x: 1, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}],
[{x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 0}]]
inputs_3.forEach(function (input) {
behaviorSet3(input);
});

function behaviorSet4(input) {
bp.registerBThread(""O_Player_Thread_4_1"", function(){
bp.sync({waitFor:[O(input[4].x, input[4].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_4_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[3].x, input[3].y)]},8);
});

}
var inputs_4 = [[{x: 2, y: 0}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 2, y: 1}, {x: 1, y: 0}],
[{x: 2, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 0, y: 0}],
[{x: 0, y: 2}, {x: 1, y: 2}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 0, y: 0}],
[{x: 1, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 2, y: 0}, {x: 0, y: 0}],
[{x: 2, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 2, y: 2}]]
inputs_4.forEach(function (input) {
behaviorSet4(input);
});

function behaviorSet5(input) {
bp.registerBThread(""O_Player_Thread_5_1"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[1].x, input[1].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},3);
});

bp.registerBThread(""O_Player_Thread_5_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},9);
});

bp.registerBThread(""O_Player_Thread_5_3"", function(){
bp.sync({request:[O(input[0].x, input[0].y), O(input[2].x, input[2].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y)]},4);
});

}
var inputs_5 = [[{x: 1, y: 0}, {x: 1, y: 1}, {x: 1, y: 2}],
[{x: 2, y: 2}, {x: 0, y: 2}, {x: 2, y: 1}]]
inputs_5.forEach(function (input) {
behaviorSet5(input);
});

function behaviorSet6(input) {
bp.registerBThread(""O_Player_Thread_6_1"", function(){
bp.sync({waitFor:[O(input[1].x, input[1].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_6_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[1].x, input[1].y), O(input[1].x, input[1].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},10);
});

bp.registerBThread(""O_Player_Thread_6_3"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_6_4"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[1].x, input[1].y)]},3);
});

}
var inputs_6 = [[{x: 0, y: 2}, {x: 1, y: 0}],
[{x: 0, y: 0}, {x: 1, y: 2}]]
inputs_6.forEach(function (input) {
behaviorSet6(input);
});

function behaviorSet7(input) {
bp.registerBThread(""O_Player_Thread_7_1"", function(){
bp.sync({request:[O(input[4].x, input[4].y), O(input[3].x, input[3].y), O(input[1].x, input[1].y), O(input[4].x, input[4].y)]},2);
});

}
var inputs_7 = [[{x: 0, y: 1}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 1, y: 2}, {x: 1, y: 2}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 1, y: 2}],
[{x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 0, y: 2}],
[{x: 0, y: 1}, {x: 0, y: 2}, {x: 1, y: 1}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 2, y: 0}],
[{x: 1, y: 2}, {x: 0, y: 2}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 0, y: 0}, {x: 1, y: 2}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 2}, {x: 2, y: 1}]]
inputs_7.forEach(function (input) {
behaviorSet7(input);
});

function behaviorSet8(input) {
bp.registerBThread(""O_Player_Thread_8_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[0].x, input[0].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_8_2"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[1].x, input[1].y)]},4);
});

bp.registerBThread(""O_Player_Thread_8_3"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[1].x, input[1].y), O(input[0].x, input[0].y), X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[1].x, input[1].y)]},3);
});

}
var inputs_8 = [[{x: 1, y: 2}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 2, y: 2}],
[{x: 2, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}],
[{x: 0, y: 0}, {x: 2, y: 2}]]
inputs_8.forEach(function (input) {
behaviorSet8(input);
});

function behaviorSet9(input) {
bp.registerBThread(""O_Player_Thread_9_1"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y)]});
bp.sync({waitFor:[X(input[3].x, input[3].y), X(input[2].x, input[2].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},2);
});

bp.registerBThread(""O_Player_Thread_9_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y), O(input[2].x, input[2].y)]},8);
});

}
var inputs_9 = [[{x: 2, y: 0}, {x: 1, y: 2}, {x: 1, y: 2}, {x: 0, y: 1}],
[{x: 2, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}],
[{x: 0, y: 0}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 2, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}, {x: 1, y: 2}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}],
[{x: 1, y: 2}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 1, y: 0}]]
inputs_9.forEach(function (input) {
behaviorSet9(input);
});

function behaviorSet10(input) {
bp.registerBThread(""O_Player_Thread_10_1"", function(){
bp.sync({waitFor:[X(input[5].x, input[5].y)]});
bp.sync({waitFor:[O(input[3].x, input[3].y), O(input[6].x, input[6].y), X(input[2].x, input[2].y), X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[5].x, input[5].y), O(input[7].x, input[7].y)]},6);
});

bp.registerBThread(""O_Player_Thread_10_2"", function(){
bp.sync({request:[O(input[6].x, input[6].y)]},2);
});

bp.registerBThread(""O_Player_Thread_10_3"", function(){
bp.sync({waitFor:[X(input[7].x, input[7].y), O(input[3].x, input[3].y), O(input[6].x, input[6].y), O(input[5].x, input[5].y)]});
bp.sync({waitFor:[O(input[7].x, input[7].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[4].x, input[4].y), O(input[3].x, input[3].y), O(input[6].x, input[6].y), O(input[4].x, input[4].y)]},5);
});

bp.registerBThread(""O_Player_Thread_10_4"", function(){
bp.sync({waitFor:[X(input[4].x, input[4].y)]});
bp.sync({waitFor:[X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[4].x, input[4].y), O(input[7].x, input[7].y), O(input[3].x, input[3].y), O(input[2].x, input[2].y)]},9);
});

bp.registerBThread(""O_Player_Thread_10_5"", function(){
bp.sync({waitFor:[X(input[5].x, input[5].y), O(input[2].x, input[2].y), O(input[6].x, input[6].y)]});
bp.sync({request:[O(input[5].x, input[5].y), O(input[0].x, input[0].y), O(input[7].x, input[7].y)]},1);
});

}
var inputs_10 = [[{x: 1, y: 1}, {x: 0, y: 2}, {x: 1, y: 2}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 2}, {x: 0, y: 1}],
[{x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 1}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 0, y: 1}, {x: 2, y: 2}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 1}],
[{x: 1, y: 0}, {x: 1, y: 0}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}],
[{x: 0, y: 0}, {x: 1, y: 0}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 2, y: 2}, {x: 0, y: 0}],
[{x: 2, y: 1}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 1, y: 2}, {x: 2, y: 1}, {x: 0, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 2, y: 2}, {x: 2, y: 2}],
[{x: 0, y: 1}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 2, y: 0}, {x: 2, y: 2}]]
inputs_10.forEach(function (input) {
behaviorSet10(input);
});

"
32,4.0,6.0,39.36507936507937,16.0,2.0,32.0,69.0,20.0,36.0,0.0,17.0,"function behaviorSet1(input) {
bp.registerBThread(""O_Player_Thread_1_1"", function(){
bp.sync({waitFor:[X(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[5].x, input[5].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[2].x, input[2].y), O(input[3].x, input[3].y)]},9);
});

}
var inputs_1 = [[{x: 0, y: 1}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 1, y: 1}, {x: 2, y: 1}],
[{x: 0, y: 2}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 0}],
[{x: 1, y: 0}, {x: 1, y: 0}, {x: 2, y: 2}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 2}],
[{x: 1, y: 1}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 2}],
[{x: 1, y: 2}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 1, y: 2}],
[{x: 1, y: 2}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 1, y: 1}, {x: 0, y: 2}, {x: 2, y: 0}],
[{x: 1, y: 2}, {x: 2, y: 1}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 2}]]
inputs_1.forEach(function (input) {
behaviorSet1(input);
});

function behaviorSet2(input) {
bp.registerBThread(""O_Player_Thread_2_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[2].x, input[2].y), X(input[1].x, input[1].y), O(input[4].x, input[4].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[4].x, input[4].y), O(input[1].x, input[1].y)]},3);
});

}
var inputs_2 = [[{x: 1, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 2, y: 1}, {x: 0, y: 0}]]
inputs_2.forEach(function (input) {
behaviorSet2(input);
});

function behaviorSet3(input) {
bp.registerBThread(""O_Player_Thread_3_1"", function(){
bp.sync({waitFor:[O(input[1].x, input[1].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[1].x, input[1].y), O(input[2].x, input[2].y)]},7);
});

bp.registerBThread(""O_Player_Thread_3_2"", function(){
bp.sync({waitFor:[O(input[1].x, input[1].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[2].x, input[2].y)]},10);
});

bp.registerBThread(""O_Player_Thread_3_3"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y)]},4);
});

bp.registerBThread(""O_Player_Thread_3_4"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y), O(input[1].x, input[1].y)]});
bp.sync({waitFor:[X(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y), O(input[1].x, input[1].y)]},11);
});

}
var inputs_3 = [[{x: 0, y: 2}, {x: 2, y: 2}, {x: 2, y: 2}],
[{x: 2, y: 1}, {x: 0, y: 2}, {x: 1, y: 2}],
[{x: 2, y: 0}, {x: 2, y: 0}, {x: 1, y: 0}],
[{x: 2, y: 2}, {x: 1, y: 2}, {x: 0, y: 2}],
[{x: 2, y: 2}, {x: 0, y: 0}, {x: 2, y: 2}],
[{x: 0, y: 0}, {x: 1, y: 0}, {x: 0, y: 1}]]
inputs_3.forEach(function (input) {
behaviorSet3(input);
});

function behaviorSet4(input) {
bp.registerBThread(""O_Player_Thread_4_1"", function(){
bp.sync({request:[O(input[5].x, input[5].y), O(input[6].x, input[6].y), O(input[3].x, input[3].y)]},6);
});

}
var inputs_4 = [[{x: 0, y: 0}, {x: 1, y: 1}, {x: 2, y: 1}, {x: 1, y: 0}, {x: 1, y: 0}, {x: 2, y: 2}, {x: 2, y: 0}],
[{x: 1, y: 1}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 0, y: 1}, {x: 2, y: 0}, {x: 0, y: 2}]]
inputs_4.forEach(function (input) {
behaviorSet4(input);
});

function behaviorSet5(input) {
bp.registerBThread(""O_Player_Thread_5_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[0].x, input[0].y), X(input[2].x, input[2].y), X(input[6].x, input[6].y)]});
bp.sync({request:[O(input[5].x, input[5].y), O(input[0].x, input[0].y), O(input[4].x, input[4].y)]},9);
});

bp.registerBThread(""O_Player_Thread_5_2"", function(){
bp.sync({request:[O(input[0].x, input[0].y), O(input[6].x, input[6].y)]},7);
});

bp.registerBThread(""O_Player_Thread_5_3"", function(){
bp.sync({waitFor:[O(input[3].x, input[3].y), O(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[3].x, input[3].y)]});
bp.sync({request:[O(input[6].x, input[6].y), O(input[0].x, input[0].y), O(input[3].x, input[3].y), O(input[1].x, input[1].y)]},11);
});

bp.registerBThread(""O_Player_Thread_5_4"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), O(input[0].x, input[0].y)]});
bp.sync({waitFor:[O(input[6].x, input[6].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[2].x, input[2].y), O(input[1].x, input[1].y)]},2);
});

bp.registerBThread(""O_Player_Thread_5_5"", function(){
bp.sync({waitFor:[O(input[4].x, input[4].y), O(input[1].x, input[1].y), O(input[5].x, input[5].y), O(input[6].x, input[6].y)]});
bp.sync({request:[O(input[2].x, input[2].y)]},2);
});

}
var inputs_5 = [[{x: 0, y: 1}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 2}, {x: 1, y: 0}, {x: 1, y: 2}],
[{x: 2, y: 0}, {x: 0, y: 1}, {x: 0, y: 2}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 0, y: 0}, {x: 0, y: 2}],
[{x: 0, y: 0}, {x: 2, y: 0}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 1, y: 0}, {x: 0, y: 2}, {x: 2, y: 0}],
[{x: 2, y: 2}, {x: 0, y: 1}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 1, y: 0}, {x: 1, y: 2}],
[{x: 0, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 2, y: 2}]]
inputs_5.forEach(function (input) {
behaviorSet5(input);
});

function behaviorSet6(input) {
bp.registerBThread(""O_Player_Thread_6_1"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[1].x, input[1].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y)]},6);
});

bp.registerBThread(""O_Player_Thread_6_2"", function(){
bp.sync({request:[O(input[2].x, input[2].y)]},2);
});

bp.registerBThread(""O_Player_Thread_6_3"", function(){
bp.sync({request:[O(input[2].x, input[2].y), O(input[1].x, input[1].y), O(input[2].x, input[2].y)]},7);
});

bp.registerBThread(""O_Player_Thread_6_4"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},10);
});

}
var inputs_6 = [[{x: 0, y: 0}, {x: 0, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 2}, {x: 0, y: 2}]]
inputs_6.forEach(function (input) {
behaviorSet6(input);
});

function behaviorSet7(input) {
bp.registerBThread(""O_Player_Thread_7_1"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y), X(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[3].x, input[3].y)]},3);
});

bp.registerBThread(""O_Player_Thread_7_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[3].x, input[3].y)]},7);
});

bp.registerBThread(""O_Player_Thread_7_3"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[3].x, input[3].y)]},11);
});

bp.registerBThread(""O_Player_Thread_7_4"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[3].x, input[3].y)]},5);
});

}
var inputs_7 = [[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 2, y: 2}],
[{x: 1, y: 0}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 1, y: 1}],
[{x: 0, y: 0}, {x: 2, y: 2}, {x: 0, y: 2}, {x: 1, y: 0}],
[{x: 1, y: 0}, {x: 1, y: 0}, {x: 0, y: 0}, {x: 2, y: 2}],
[{x: 1, y: 2}, {x: 0, y: 0}, {x: 2, y: 2}, {x: 2, y: 1}],
[{x: 2, y: 1}, {x: 0, y: 0}, {x: 0, y: 0}, {x: 0, y: 2}]]
inputs_7.forEach(function (input) {
behaviorSet7(input);
});

function behaviorSet8(input) {
bp.registerBThread(""O_Player_Thread_8_1"", function(){
bp.sync({waitFor:[X(input[4].x, input[4].y)]});
bp.sync({waitFor:[X(input[3].x, input[3].y), O(input[4].x, input[4].y), X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[2].x, input[2].y)]},6);
});

bp.registerBThread(""O_Player_Thread_8_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[4].x, input[4].y)]},8);
});

bp.registerBThread(""O_Player_Thread_8_3"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y), O(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[4].x, input[4].y)]});
bp.sync({waitFor:[O(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[3].x, input[3].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[4].x, input[4].y), O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[4].x, input[4].y)]},6);
});

}
var inputs_8 = [[{x: 0, y: 1}, {x: 2, y: 0}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}],
[{x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 2}]]
inputs_8.forEach(function (input) {
behaviorSet8(input);
});

function behaviorSet9(input) {
bp.registerBThread(""O_Player_Thread_9_1"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},9);
});

bp.registerBThread(""O_Player_Thread_9_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},2);
});

bp.registerBThread(""O_Player_Thread_9_3"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y), O(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},1);
});

bp.registerBThread(""O_Player_Thread_9_4"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), O(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y), O(input[0].x, input[0].y), X(input[0].x, input[0].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},3);
});

}
var inputs_9 = [[{x: 0, y: 0}],
[{x: 1, y: 1}],
[{x: 0, y: 0}],
[{x: 2, y: 1}]]
inputs_9.forEach(function (input) {
behaviorSet9(input);
});

function behaviorSet10(input) {
bp.registerBThread(""O_Player_Thread_10_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},8);
});

bp.registerBThread(""O_Player_Thread_10_2"", function(){
bp.sync({request:[O(input[0].x, input[0].y)]},1);
});

}
var inputs_10 = [[{x: 0, y: 0}, {x: 0, y: 1}, {x: 1, y: 0}],
[{x: 2, y: 1}, {x: 2, y: 0}, {x: 2, y: 2}],
[{x: 0, y: 2}, {x: 0, y: 2}, {x: 1, y: 0}],
[{x: 2, y: 1}, {x: 1, y: 2}, {x: 0, y: 0}],
[{x: 0, y: 2}, {x: 0, y: 0}, {x: 2, y: 2}],
[{x: 2, y: 2}, {x: 1, y: 0}, {x: 0, y: 0}],
[{x: 1, y: 2}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 2}, {x: 2, y: 1}, {x: 2, y: 0}]]
inputs_10.forEach(function (input) {
behaviorSet10(input);
});

"
33,4.0,9.0,39.7405257767156,13.0,4.0,33.0,66.0,16.0,35.0,0.0,22.0,"function behaviorSet1(input) {
bp.registerBThread(""O_Player_Thread_1_1"", function(){
bp.sync({waitFor:[X(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[5].x, input[5].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[2].x, input[2].y), O(input[3].x, input[3].y)]},9);
});

}
var inputs_1 = [[{x: 0, y: 1}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 1, y: 1}, {x: 2, y: 1}],
[{x: 0, y: 2}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 0}],
[{x: 1, y: 0}, {x: 1, y: 0}, {x: 2, y: 2}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 2}],
[{x: 1, y: 1}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 2}],
[{x: 1, y: 2}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 1, y: 2}],
[{x: 1, y: 2}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 1, y: 1}, {x: 0, y: 2}, {x: 2, y: 0}],
[{x: 1, y: 2}, {x: 2, y: 1}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 2}]]
inputs_1.forEach(function (input) {
behaviorSet1(input);
});

function behaviorSet2(input) {
bp.registerBThread(""O_Player_Thread_2_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[2].x, input[2].y), X(input[1].x, input[1].y), O(input[4].x, input[4].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[4].x, input[4].y), O(input[1].x, input[1].y)]},3);
});

}
var inputs_2 = [[{x: 1, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 2, y: 1}, {x: 0, y: 0}]]
inputs_2.forEach(function (input) {
behaviorSet2(input);
});

function behaviorSet3(input) {
bp.registerBThread(""O_Player_Thread_3_1"", function(){
bp.sync({waitFor:[O(input[1].x, input[1].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[1].x, input[1].y), O(input[2].x, input[2].y)]},7);
});

bp.registerBThread(""O_Player_Thread_3_2"", function(){
bp.sync({waitFor:[O(input[1].x, input[1].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[2].x, input[2].y)]},10);
});

bp.registerBThread(""O_Player_Thread_3_3"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y)]},4);
});

bp.registerBThread(""O_Player_Thread_3_4"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y), O(input[1].x, input[1].y)]});
bp.sync({waitFor:[X(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y), O(input[1].x, input[1].y)]},11);
});

}
var inputs_3 = [[{x: 0, y: 2}, {x: 2, y: 2}, {x: 2, y: 2}],
[{x: 2, y: 1}, {x: 0, y: 2}, {x: 1, y: 2}],
[{x: 2, y: 0}, {x: 2, y: 0}, {x: 1, y: 0}],
[{x: 2, y: 2}, {x: 1, y: 2}, {x: 0, y: 2}],
[{x: 2, y: 2}, {x: 0, y: 0}, {x: 2, y: 2}],
[{x: 0, y: 0}, {x: 1, y: 0}, {x: 0, y: 1}]]
inputs_3.forEach(function (input) {
behaviorSet3(input);
});

function behaviorSet4(input) {
bp.registerBThread(""O_Player_Thread_4_1"", function(){
bp.sync({request:[O(input[5].x, input[5].y), O(input[6].x, input[6].y), O(input[3].x, input[3].y)]},6);
});

}
var inputs_4 = [[{x: 0, y: 0}, {x: 1, y: 1}, {x: 2, y: 1}, {x: 1, y: 0}, {x: 1, y: 0}, {x: 2, y: 2}, {x: 2, y: 0}],
[{x: 1, y: 1}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 0, y: 1}, {x: 2, y: 0}, {x: 0, y: 2}]]
inputs_4.forEach(function (input) {
behaviorSet4(input);
});

function behaviorSet5(input) {
bp.registerBThread(""O_Player_Thread_5_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[0].x, input[0].y), X(input[2].x, input[2].y), X(input[6].x, input[6].y)]});
bp.sync({request:[O(input[5].x, input[5].y), O(input[0].x, input[0].y), O(input[4].x, input[4].y)]},9);
});

bp.registerBThread(""O_Player_Thread_5_2"", function(){
bp.sync({request:[O(input[0].x, input[0].y), O(input[6].x, input[6].y)]},7);
});

bp.registerBThread(""O_Player_Thread_5_3"", function(){
bp.sync({waitFor:[O(input[3].x, input[3].y), O(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[3].x, input[3].y)]});
bp.sync({request:[O(input[6].x, input[6].y), O(input[0].x, input[0].y), O(input[3].x, input[3].y), O(input[1].x, input[1].y)]},11);
});

bp.registerBThread(""O_Player_Thread_5_4"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), O(input[0].x, input[0].y)]});
bp.sync({waitFor:[O(input[6].x, input[6].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[2].x, input[2].y), O(input[1].x, input[1].y)]},2);
});

bp.registerBThread(""O_Player_Thread_5_5"", function(){
bp.sync({waitFor:[O(input[4].x, input[4].y), O(input[1].x, input[1].y), O(input[5].x, input[5].y), O(input[6].x, input[6].y)]});
bp.sync({request:[O(input[2].x, input[2].y)]},2);
});

}
var inputs_5 = [[{x: 0, y: 1}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 2}, {x: 1, y: 0}, {x: 1, y: 2}],
[{x: 2, y: 0}, {x: 0, y: 1}, {x: 0, y: 2}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 0, y: 0}, {x: 0, y: 2}],
[{x: 0, y: 0}, {x: 2, y: 0}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 1, y: 0}, {x: 0, y: 2}, {x: 2, y: 0}],
[{x: 2, y: 2}, {x: 0, y: 1}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 1, y: 0}, {x: 1, y: 2}],
[{x: 0, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 2, y: 2}]]
inputs_5.forEach(function (input) {
behaviorSet5(input);
});

function behaviorSet6(input) {
bp.registerBThread(""O_Player_Thread_6_1"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[1].x, input[1].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y)]},6);
});

bp.registerBThread(""O_Player_Thread_6_2"", function(){
bp.sync({request:[O(input[2].x, input[2].y)]},2);
});

bp.registerBThread(""O_Player_Thread_6_3"", function(){
bp.sync({request:[O(input[2].x, input[2].y), O(input[1].x, input[1].y), O(input[2].x, input[2].y)]},7);
});

bp.registerBThread(""O_Player_Thread_6_4"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[1].x, input[1].y)]},2);
});

}
var inputs_6 = [[{x: 0, y: 0}, {x: 0, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 2}, {x: 0, y: 2}]]
inputs_6.forEach(function (input) {
behaviorSet6(input);
});

function behaviorSet7(input) {
bp.registerBThread(""O_Player_Thread_7_1"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y), X(input[0].x, input[0].y)]});
bp.sync({waitFor:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[3].x, input[3].y)]},3);
});

bp.registerBThread(""O_Player_Thread_7_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[3].x, input[3].y)]},7);
});

bp.registerBThread(""O_Player_Thread_7_3"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[3].x, input[3].y)]},11);
});

bp.registerBThread(""O_Player_Thread_7_4"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[3].x, input[3].y)]},5);
});

}
var inputs_7 = [[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 2, y: 2}],
[{x: 1, y: 0}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 1, y: 1}],
[{x: 0, y: 0}, {x: 2, y: 2}, {x: 0, y: 2}, {x: 1, y: 0}],
[{x: 1, y: 0}, {x: 1, y: 0}, {x: 0, y: 0}, {x: 2, y: 2}],
[{x: 1, y: 2}, {x: 0, y: 0}, {x: 2, y: 2}, {x: 2, y: 1}],
[{x: 2, y: 1}, {x: 0, y: 0}, {x: 0, y: 0}, {x: 0, y: 2}]]
inputs_7.forEach(function (input) {
behaviorSet7(input);
});

function behaviorSet8(input) {
bp.registerBThread(""O_Player_Thread_8_1"", function(){
bp.sync({waitFor:[X(input[4].x, input[4].y)]});
bp.sync({waitFor:[X(input[3].x, input[3].y), O(input[4].x, input[4].y), X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[2].x, input[2].y)]},6);
});

bp.registerBThread(""O_Player_Thread_8_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[4].x, input[4].y)]},8);
});

bp.registerBThread(""O_Player_Thread_8_3"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y), O(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[4].x, input[4].y)]});
bp.sync({waitFor:[O(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[3].x, input[3].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[4].x, input[4].y), O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[4].x, input[4].y)]},6);
});

}
var inputs_8 = [[{x: 0, y: 1}, {x: 2, y: 0}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}],
[{x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 2}]]
inputs_8.forEach(function (input) {
behaviorSet8(input);
});

function behaviorSet9(input) {
bp.registerBThread(""O_Player_Thread_9_1"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},9);
});

bp.registerBThread(""O_Player_Thread_9_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},2);
});

bp.registerBThread(""O_Player_Thread_9_3"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y), O(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},1);
});

bp.registerBThread(""O_Player_Thread_9_4"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), O(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y), O(input[0].x, input[0].y), X(input[0].x, input[0].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},3);
});

}
var inputs_9 = [[{x: 0, y: 0}],
[{x: 1, y: 1}],
[{x: 0, y: 0}],
[{x: 2, y: 1}]]
inputs_9.forEach(function (input) {
behaviorSet9(input);
});

function behaviorSet10(input) {
bp.registerBThread(""O_Player_Thread_10_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},8);
});

bp.registerBThread(""O_Player_Thread_10_2"", function(){
bp.sync({request:[O(input[0].x, input[0].y)]},1);
});

}
var inputs_10 = [[{x: 0, y: 0}, {x: 0, y: 1}, {x: 1, y: 0}],
[{x: 2, y: 1}, {x: 2, y: 0}, {x: 2, y: 2}],
[{x: 0, y: 2}, {x: 0, y: 2}, {x: 1, y: 0}],
[{x: 2, y: 1}, {x: 1, y: 2}, {x: 0, y: 0}],
[{x: 0, y: 2}, {x: 0, y: 0}, {x: 2, y: 2}],
[{x: 2, y: 2}, {x: 1, y: 0}, {x: 0, y: 0}],
[{x: 1, y: 2}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 2}, {x: 2, y: 1}, {x: 2, y: 0}]]
inputs_10.forEach(function (input) {
behaviorSet10(input);
});

"
34,5.0,4.0,45.36859413537956,22.0,4.0,24.0,56.0,19.0,33.0,0.0,22.0,"function behaviorSet1(input) {
bp.registerBThread(""O_Player_Thread_1_1"", function(){
bp.sync({waitFor:[X(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[5].x, input[5].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[2].x, input[2].y), O(input[3].x, input[3].y)]},9);
});

}
var inputs_1 = [[{x: 0, y: 1}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 1, y: 1}, {x: 2, y: 1}],
[{x: 0, y: 2}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 0}],
[{x: 1, y: 0}, {x: 1, y: 0}, {x: 2, y: 2}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 2}],
[{x: 1, y: 1}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 2}],
[{x: 1, y: 2}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 1, y: 2}],
[{x: 1, y: 2}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 1, y: 1}, {x: 0, y: 2}, {x: 2, y: 0}],
[{x: 1, y: 2}, {x: 2, y: 1}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 2}]]
inputs_1.forEach(function (input) {
behaviorSet1(input);
});

function behaviorSet2(input) {
bp.registerBThread(""O_Player_Thread_2_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[2].x, input[2].y), X(input[1].x, input[1].y), O(input[4].x, input[4].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[4].x, input[4].y), O(input[1].x, input[1].y)]},3);
});

}
var inputs_2 = [[{x: 1, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 2, y: 1}, {x: 0, y: 0}]]
inputs_2.forEach(function (input) {
behaviorSet2(input);
});

function behaviorSet3(input) {
bp.registerBThread(""O_Player_Thread_3_1"", function(){
bp.sync({waitFor:[O(input[1].x, input[1].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[1].x, input[1].y), O(input[2].x, input[2].y)]},7);
});

bp.registerBThread(""O_Player_Thread_3_2"", function(){
bp.sync({waitFor:[O(input[1].x, input[1].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[2].x, input[2].y)]},10);
});

bp.registerBThread(""O_Player_Thread_3_3"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y)]},4);
});

bp.registerBThread(""O_Player_Thread_3_4"", function(){
bp.sync({request:[O(input[0].x, input[0].y), O(input[2].x, input[2].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y)]},4);
});

}
var inputs_3 = [[{x: 0, y: 2}, {x: 2, y: 2}, {x: 2, y: 2}],
[{x: 2, y: 1}, {x: 0, y: 2}, {x: 1, y: 2}],
[{x: 2, y: 0}, {x: 2, y: 0}, {x: 1, y: 0}],
[{x: 2, y: 2}, {x: 1, y: 2}, {x: 0, y: 2}],
[{x: 2, y: 2}, {x: 0, y: 0}, {x: 2, y: 2}],
[{x: 0, y: 0}, {x: 1, y: 0}, {x: 0, y: 1}]]
inputs_3.forEach(function (input) {
behaviorSet3(input);
});

function behaviorSet4(input) {
bp.registerBThread(""O_Player_Thread_4_1"", function(){
bp.sync({request:[O(input[5].x, input[5].y), O(input[6].x, input[6].y), O(input[3].x, input[3].y)]},6);
});

}
var inputs_4 = [[{x: 0, y: 0}, {x: 1, y: 1}, {x: 2, y: 1}, {x: 1, y: 0}, {x: 1, y: 0}, {x: 2, y: 2}, {x: 2, y: 0}],
[{x: 1, y: 1}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 0, y: 1}, {x: 2, y: 0}, {x: 0, y: 2}]]
inputs_4.forEach(function (input) {
behaviorSet4(input);
});

function behaviorSet5(input) {
bp.registerBThread(""O_Player_Thread_5_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[0].x, input[0].y), X(input[2].x, input[2].y), X(input[6].x, input[6].y)]});
bp.sync({request:[O(input[5].x, input[5].y), O(input[0].x, input[0].y), O(input[4].x, input[4].y)]},9);
});

bp.registerBThread(""O_Player_Thread_5_2"", function(){
bp.sync({request:[O(input[0].x, input[0].y), O(input[6].x, input[6].y)]},7);
});

bp.registerBThread(""O_Player_Thread_5_3"", function(){
bp.sync({waitFor:[O(input[3].x, input[3].y), O(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[3].x, input[3].y)]});
bp.sync({request:[O(input[6].x, input[6].y), O(input[0].x, input[0].y), O(input[3].x, input[3].y), O(input[1].x, input[1].y)]},11);
});

bp.registerBThread(""O_Player_Thread_5_4"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), O(input[0].x, input[0].y)]});
bp.sync({waitFor:[O(input[6].x, input[6].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[2].x, input[2].y), O(input[1].x, input[1].y)]},2);
});

bp.registerBThread(""O_Player_Thread_5_5"", function(){
bp.sync({waitFor:[O(input[4].x, input[4].y), O(input[1].x, input[1].y), O(input[5].x, input[5].y), O(input[6].x, input[6].y)]});
bp.sync({request:[O(input[2].x, input[2].y)]},2);
});

}
var inputs_5 = [[{x: 0, y: 1}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 2}, {x: 1, y: 0}, {x: 1, y: 2}],
[{x: 2, y: 0}, {x: 0, y: 1}, {x: 0, y: 2}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 0, y: 0}, {x: 0, y: 2}],
[{x: 0, y: 0}, {x: 2, y: 0}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 1, y: 0}, {x: 0, y: 2}, {x: 2, y: 0}],
[{x: 2, y: 2}, {x: 0, y: 1}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 1, y: 0}, {x: 1, y: 2}],
[{x: 0, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 2, y: 2}]]
inputs_5.forEach(function (input) {
behaviorSet5(input);
});

function behaviorSet6(input) {
bp.registerBThread(""O_Player_Thread_6_1"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[1].x, input[1].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y)]},6);
});

bp.registerBThread(""O_Player_Thread_6_2"", function(){
bp.sync({request:[O(input[2].x, input[2].y)]},2);
});

bp.registerBThread(""O_Player_Thread_6_3"", function(){
bp.sync({request:[O(input[2].x, input[2].y), O(input[1].x, input[1].y), O(input[2].x, input[2].y)]},7);
});

bp.registerBThread(""O_Player_Thread_6_4"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[1].x, input[1].y)]},2);
});

}
var inputs_6 = [[{x: 0, y: 0}, {x: 0, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 2}, {x: 0, y: 2}]]
inputs_6.forEach(function (input) {
behaviorSet6(input);
});

function behaviorSet7(input) {
bp.registerBThread(""O_Player_Thread_7_1"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y), X(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[3].x, input[3].y)]},3);
});

bp.registerBThread(""O_Player_Thread_7_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[3].x, input[3].y)]},7);
});

bp.registerBThread(""O_Player_Thread_7_3"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[3].x, input[3].y)]},11);
});

bp.registerBThread(""O_Player_Thread_7_4"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[3].x, input[3].y)]},5);
});

}
var inputs_7 = [[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 2, y: 2}],
[{x: 1, y: 0}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 1, y: 1}],
[{x: 0, y: 0}, {x: 2, y: 2}, {x: 0, y: 2}, {x: 1, y: 0}],
[{x: 1, y: 0}, {x: 1, y: 0}, {x: 0, y: 0}, {x: 2, y: 2}],
[{x: 1, y: 2}, {x: 0, y: 0}, {x: 2, y: 2}, {x: 2, y: 1}],
[{x: 2, y: 1}, {x: 0, y: 0}, {x: 0, y: 0}, {x: 0, y: 2}]]
inputs_7.forEach(function (input) {
behaviorSet7(input);
});

function behaviorSet8(input) {
bp.registerBThread(""O_Player_Thread_8_1"", function(){
bp.sync({waitFor:[X(input[4].x, input[4].y)]});
bp.sync({waitFor:[X(input[3].x, input[3].y), O(input[4].x, input[4].y), X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[2].x, input[2].y)]},6);
});

bp.registerBThread(""O_Player_Thread_8_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[4].x, input[4].y)]},8);
});

bp.registerBThread(""O_Player_Thread_8_3"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y), O(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[4].x, input[4].y)]});
bp.sync({waitFor:[O(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[3].x, input[3].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[4].x, input[4].y), O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[4].x, input[4].y)]},6);
});

}
var inputs_8 = [[{x: 0, y: 1}, {x: 2, y: 0}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}],
[{x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 2}]]
inputs_8.forEach(function (input) {
behaviorSet8(input);
});

function behaviorSet9(input) {
bp.registerBThread(""O_Player_Thread_9_1"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},9);
});

bp.registerBThread(""O_Player_Thread_9_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},2);
});

bp.registerBThread(""O_Player_Thread_9_3"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y), O(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},1);
});

bp.registerBThread(""O_Player_Thread_9_4"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), O(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y), O(input[0].x, input[0].y), X(input[0].x, input[0].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},3);
});

}
var inputs_9 = [[{x: 0, y: 0}],
[{x: 1, y: 1}],
[{x: 0, y: 0}],
[{x: 2, y: 1}]]
inputs_9.forEach(function (input) {
behaviorSet9(input);
});

function behaviorSet10(input) {
bp.registerBThread(""O_Player_Thread_10_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},8);
});

bp.registerBThread(""O_Player_Thread_10_2"", function(){
bp.sync({request:[O(input[0].x, input[0].y)]},1);
});

}
var inputs_10 = [[{x: 0, y: 0}, {x: 0, y: 1}, {x: 1, y: 0}],
[{x: 2, y: 1}, {x: 2, y: 0}, {x: 2, y: 2}],
[{x: 0, y: 2}, {x: 0, y: 2}, {x: 1, y: 0}],
[{x: 2, y: 1}, {x: 1, y: 2}, {x: 0, y: 0}],
[{x: 0, y: 2}, {x: 0, y: 0}, {x: 2, y: 2}],
[{x: 2, y: 2}, {x: 1, y: 0}, {x: 0, y: 0}],
[{x: 1, y: 2}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 2}, {x: 2, y: 1}, {x: 2, y: 0}]]
inputs_10.forEach(function (input) {
behaviorSet10(input);
});

"
35,5.0,1.0,41.49305555555556,19.0,2.0,29.0,67.0,17.0,29.0,0.0,19.0,"function behaviorSet1(input) {
bp.registerBThread(""O_Player_Thread_1_1"", function(){
bp.sync({waitFor:[X(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[5].x, input[5].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[2].x, input[2].y), O(input[3].x, input[3].y)]},9);
});

}
var inputs_1 = [[{x: 0, y: 1}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 1, y: 1}, {x: 2, y: 1}],
[{x: 0, y: 2}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 0}],
[{x: 1, y: 0}, {x: 1, y: 0}, {x: 2, y: 2}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 2}],
[{x: 1, y: 1}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 2}],
[{x: 1, y: 2}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 1, y: 2}],
[{x: 1, y: 2}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 1, y: 1}, {x: 0, y: 2}, {x: 2, y: 0}],
[{x: 1, y: 2}, {x: 2, y: 1}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 2}]]
inputs_1.forEach(function (input) {
behaviorSet1(input);
});

function behaviorSet2(input) {
bp.registerBThread(""O_Player_Thread_2_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[2].x, input[2].y), X(input[1].x, input[1].y), O(input[4].x, input[4].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[4].x, input[4].y), O(input[1].x, input[1].y)]},3);
});

}
var inputs_2 = [[{x: 1, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 2, y: 1}, {x: 0, y: 0}]]
inputs_2.forEach(function (input) {
behaviorSet2(input);
});

function behaviorSet3(input) {
bp.registerBThread(""O_Player_Thread_3_1"", function(){
bp.sync({waitFor:[O(input[1].x, input[1].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[1].x, input[1].y), O(input[2].x, input[2].y)]},7);
});

bp.registerBThread(""O_Player_Thread_3_2"", function(){
bp.sync({waitFor:[O(input[1].x, input[1].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[2].x, input[2].y)]},10);
});

bp.registerBThread(""O_Player_Thread_3_3"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y)]},4);
});

bp.registerBThread(""O_Player_Thread_3_4"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y), O(input[1].x, input[1].y)]});
bp.sync({waitFor:[X(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y), O(input[1].x, input[1].y)]},11);
});

}
var inputs_3 = [[{x: 0, y: 2}, {x: 2, y: 2}, {x: 2, y: 2}],
[{x: 2, y: 1}, {x: 0, y: 2}, {x: 1, y: 2}],
[{x: 2, y: 0}, {x: 2, y: 0}, {x: 1, y: 0}],
[{x: 2, y: 2}, {x: 1, y: 2}, {x: 0, y: 2}],
[{x: 2, y: 2}, {x: 0, y: 0}, {x: 2, y: 2}],
[{x: 0, y: 0}, {x: 1, y: 0}, {x: 0, y: 1}]]
inputs_3.forEach(function (input) {
behaviorSet3(input);
});

function behaviorSet4(input) {
bp.registerBThread(""O_Player_Thread_4_1"", function(){
bp.sync({request:[O(input[5].x, input[5].y), O(input[6].x, input[6].y), O(input[3].x, input[3].y)]},6);
});

}
var inputs_4 = [[{x: 0, y: 0}, {x: 1, y: 1}, {x: 2, y: 1}, {x: 1, y: 0}, {x: 1, y: 0}, {x: 2, y: 2}, {x: 2, y: 0}],
[{x: 1, y: 1}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 0, y: 1}, {x: 2, y: 0}, {x: 0, y: 2}]]
inputs_4.forEach(function (input) {
behaviorSet4(input);
});

function behaviorSet5(input) {
bp.registerBThread(""O_Player_Thread_5_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[0].x, input[0].y), X(input[2].x, input[2].y), X(input[6].x, input[6].y)]});
bp.sync({request:[O(input[5].x, input[5].y), O(input[0].x, input[0].y), O(input[4].x, input[4].y)]},9);
});

bp.registerBThread(""O_Player_Thread_5_2"", function(){
bp.sync({request:[O(input[0].x, input[0].y), O(input[6].x, input[6].y)]},7);
});

bp.registerBThread(""O_Player_Thread_5_3"", function(){
bp.sync({waitFor:[O(input[3].x, input[3].y), O(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[3].x, input[3].y)]});
bp.sync({request:[O(input[6].x, input[6].y), O(input[0].x, input[0].y), O(input[3].x, input[3].y), O(input[1].x, input[1].y)]},11);
});

bp.registerBThread(""O_Player_Thread_5_4"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), O(input[0].x, input[0].y)]});
bp.sync({waitFor:[O(input[6].x, input[6].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[2].x, input[2].y), O(input[1].x, input[1].y)]},2);
});

bp.registerBThread(""O_Player_Thread_5_5"", function(){
bp.sync({waitFor:[O(input[4].x, input[4].y), O(input[1].x, input[1].y), O(input[5].x, input[5].y), O(input[6].x, input[6].y)]});
bp.sync({request:[O(input[2].x, input[2].y)]},2);
});

}
var inputs_5 = [[{x: 0, y: 1}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 2}, {x: 1, y: 0}, {x: 1, y: 2}],
[{x: 2, y: 0}, {x: 0, y: 1}, {x: 0, y: 2}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 0, y: 0}, {x: 0, y: 2}],
[{x: 0, y: 0}, {x: 2, y: 0}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 1, y: 0}, {x: 0, y: 2}, {x: 2, y: 0}],
[{x: 2, y: 2}, {x: 0, y: 1}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 1, y: 0}, {x: 1, y: 2}],
[{x: 0, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 2, y: 2}]]
inputs_5.forEach(function (input) {
behaviorSet5(input);
});

function behaviorSet6(input) {
bp.registerBThread(""O_Player_Thread_6_1"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[1].x, input[1].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y)]},6);
});

bp.registerBThread(""O_Player_Thread_6_2"", function(){
bp.sync({request:[O(input[2].x, input[2].y)]},2);
});

bp.registerBThread(""O_Player_Thread_6_3"", function(){
bp.sync({request:[O(input[2].x, input[2].y), O(input[1].x, input[1].y), O(input[2].x, input[2].y)]},7);
});

bp.registerBThread(""O_Player_Thread_6_4"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[1].x, input[1].y)]},2);
});

}
var inputs_6 = [[{x: 0, y: 0}, {x: 0, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 2}, {x: 0, y: 2}]]
inputs_6.forEach(function (input) {
behaviorSet6(input);
});

function behaviorSet7(input) {
bp.registerBThread(""O_Player_Thread_7_1"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y), X(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[3].x, input[3].y)]},3);
});

bp.registerBThread(""O_Player_Thread_7_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[3].x, input[3].y)]},7);
});

bp.registerBThread(""O_Player_Thread_7_3"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[3].x, input[3].y)]},11);
});

bp.registerBThread(""O_Player_Thread_7_4"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[3].x, input[3].y)]},5);
});

}
var inputs_7 = [[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 2, y: 2}],
[{x: 1, y: 0}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 1, y: 1}],
[{x: 0, y: 0}, {x: 2, y: 2}, {x: 0, y: 2}, {x: 1, y: 0}],
[{x: 1, y: 0}, {x: 1, y: 0}, {x: 0, y: 0}, {x: 2, y: 2}],
[{x: 1, y: 2}, {x: 0, y: 0}, {x: 2, y: 2}, {x: 2, y: 1}],
[{x: 2, y: 1}, {x: 0, y: 0}, {x: 0, y: 0}, {x: 0, y: 2}]]
inputs_7.forEach(function (input) {
behaviorSet7(input);
});

function behaviorSet8(input) {
bp.registerBThread(""O_Player_Thread_8_1"", function(){
bp.sync({waitFor:[X(input[4].x, input[4].y)]});
bp.sync({waitFor:[X(input[3].x, input[3].y), O(input[4].x, input[4].y), X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[2].x, input[2].y)]},6);
});

bp.registerBThread(""O_Player_Thread_8_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[4].x, input[4].y)]},8);
});

bp.registerBThread(""O_Player_Thread_8_3"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y), O(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[4].x, input[4].y)]});
bp.sync({waitFor:[O(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[3].x, input[3].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[4].x, input[4].y), O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[4].x, input[4].y)]},6);
});

}
var inputs_8 = [[{x: 0, y: 1}, {x: 2, y: 0}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}],
[{x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 2}]]
inputs_8.forEach(function (input) {
behaviorSet8(input);
});

function behaviorSet9(input) {
bp.registerBThread(""O_Player_Thread_9_1"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},9);
});

bp.registerBThread(""O_Player_Thread_9_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},2);
});

bp.registerBThread(""O_Player_Thread_9_3"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y), O(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},1);
});

bp.registerBThread(""O_Player_Thread_9_4"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), O(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y), O(input[0].x, input[0].y), X(input[0].x, input[0].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},3);
});

}
var inputs_9 = [[{x: 0, y: 0}],
[{x: 1, y: 1}],
[{x: 0, y: 0}],
[{x: 2, y: 1}]]
inputs_9.forEach(function (input) {
behaviorSet9(input);
});

function behaviorSet10(input) {
bp.registerBThread(""O_Player_Thread_10_1"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},8);
});

bp.registerBThread(""O_Player_Thread_10_2"", function(){
bp.sync({request:[O(input[0].x, input[0].y)]},1);
});

}
var inputs_10 = [[{x: 0, y: 0}, {x: 0, y: 1}, {x: 1, y: 0}],
[{x: 2, y: 1}, {x: 2, y: 0}, {x: 2, y: 2}],
[{x: 0, y: 2}, {x: 0, y: 2}, {x: 1, y: 0}],
[{x: 2, y: 1}, {x: 1, y: 2}, {x: 0, y: 0}],
[{x: 0, y: 2}, {x: 0, y: 0}, {x: 2, y: 2}],
[{x: 2, y: 2}, {x: 1, y: 0}, {x: 0, y: 0}],
[{x: 1, y: 2}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 2}, {x: 2, y: 1}, {x: 2, y: 0}]]
inputs_10.forEach(function (input) {
behaviorSet10(input);
});

"
36,5.0,2.0,46.282833020637895,21.0,4.0,25.0,61.0,20.0,43.0,0.0,15.0,"function behaviorSet1(input) {
bp.registerBThread(""O_Player_Thread_1_1"", function(){
bp.sync({waitFor:[X(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[5].x, input[5].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[2].x, input[2].y), O(input[3].x, input[3].y)]},9);
});

}
var inputs_1 = [[{x: 0, y: 1}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 1, y: 1}, {x: 2, y: 1}],
[{x: 0, y: 2}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 0}],
[{x: 1, y: 0}, {x: 1, y: 0}, {x: 2, y: 2}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 2}],
[{x: 1, y: 1}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 2}],
[{x: 1, y: 2}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 1, y: 2}],
[{x: 1, y: 2}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 1, y: 1}, {x: 0, y: 2}, {x: 2, y: 0}],
[{x: 1, y: 2}, {x: 2, y: 1}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 2}]]
inputs_1.forEach(function (input) {
behaviorSet1(input);
});

function behaviorSet2(input) {
bp.registerBThread(""O_Player_Thread_2_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[2].x, input[2].y), X(input[1].x, input[1].y), O(input[4].x, input[4].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[4].x, input[4].y), O(input[1].x, input[1].y)]},3);
});

}
var inputs_2 = [[{x: 1, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 2, y: 1}, {x: 0, y: 0}]]
inputs_2.forEach(function (input) {
behaviorSet2(input);
});

function behaviorSet3(input) {
bp.registerBThread(""O_Player_Thread_3_1"", function(){
bp.sync({waitFor:[O(input[1].x, input[1].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[1].x, input[1].y), O(input[2].x, input[2].y)]},7);
});

bp.registerBThread(""O_Player_Thread_3_2"", function(){
bp.sync({waitFor:[O(input[1].x, input[1].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[2].x, input[2].y)]},10);
});

bp.registerBThread(""O_Player_Thread_3_3"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y)]},4);
});

bp.registerBThread(""O_Player_Thread_3_4"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y), O(input[1].x, input[1].y)]});
bp.sync({waitFor:[X(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y), O(input[1].x, input[1].y)]},11);
});

}
var inputs_3 = [[{x: 0, y: 2}, {x: 2, y: 2}, {x: 2, y: 2}],
[{x: 2, y: 1}, {x: 0, y: 2}, {x: 1, y: 2}],
[{x: 2, y: 0}, {x: 2, y: 0}, {x: 1, y: 0}],
[{x: 2, y: 2}, {x: 1, y: 2}, {x: 0, y: 2}],
[{x: 2, y: 2}, {x: 0, y: 0}, {x: 2, y: 2}],
[{x: 0, y: 0}, {x: 1, y: 0}, {x: 0, y: 1}]]
inputs_3.forEach(function (input) {
behaviorSet3(input);
});

function behaviorSet4(input) {
bp.registerBThread(""O_Player_Thread_4_1"", function(){
bp.sync({request:[O(input[5].x, input[5].y), O(input[6].x, input[6].y), O(input[3].x, input[3].y)]},6);
});

}
var inputs_4 = [[{x: 0, y: 0}, {x: 1, y: 1}, {x: 2, y: 1}, {x: 1, y: 0}, {x: 1, y: 0}, {x: 2, y: 2}, {x: 2, y: 0}],
[{x: 1, y: 1}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 0, y: 1}, {x: 2, y: 0}, {x: 0, y: 2}]]
inputs_4.forEach(function (input) {
behaviorSet4(input);
});

function behaviorSet5(input) {
bp.registerBThread(""O_Player_Thread_5_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[0].x, input[0].y), X(input[2].x, input[2].y), X(input[6].x, input[6].y)]});
bp.sync({request:[O(input[5].x, input[5].y), O(input[0].x, input[0].y), O(input[4].x, input[4].y)]},9);
});

bp.registerBThread(""O_Player_Thread_5_2"", function(){
bp.sync({request:[O(input[0].x, input[0].y), O(input[6].x, input[6].y)]},7);
});

bp.registerBThread(""O_Player_Thread_5_3"", function(){
bp.sync({waitFor:[O(input[3].x, input[3].y), O(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[3].x, input[3].y)]});
bp.sync({request:[O(input[6].x, input[6].y), O(input[0].x, input[0].y), O(input[3].x, input[3].y), O(input[1].x, input[1].y)]},11);
});

bp.registerBThread(""O_Player_Thread_5_4"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), O(input[0].x, input[0].y)]});
bp.sync({waitFor:[O(input[6].x, input[6].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[2].x, input[2].y), O(input[1].x, input[1].y)]},2);
});

bp.registerBThread(""O_Player_Thread_5_5"", function(){
bp.sync({waitFor:[O(input[4].x, input[4].y), O(input[1].x, input[1].y), O(input[5].x, input[5].y), O(input[6].x, input[6].y)]});
bp.sync({request:[O(input[2].x, input[2].y)]},2);
});

}
var inputs_5 = [[{x: 0, y: 1}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 2}, {x: 1, y: 0}, {x: 1, y: 2}],
[{x: 2, y: 0}, {x: 0, y: 1}, {x: 0, y: 2}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 0, y: 0}, {x: 0, y: 2}],
[{x: 0, y: 0}, {x: 2, y: 0}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 1, y: 0}, {x: 0, y: 2}, {x: 2, y: 0}],
[{x: 2, y: 2}, {x: 0, y: 1}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 1, y: 0}, {x: 1, y: 2}],
[{x: 0, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 2, y: 2}]]
inputs_5.forEach(function (input) {
behaviorSet5(input);
});

function behaviorSet6(input) {
bp.registerBThread(""O_Player_Thread_6_1"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[1].x, input[1].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y)]},6);
});

bp.registerBThread(""O_Player_Thread_6_2"", function(){
bp.sync({request:[O(input[2].x, input[2].y)]},2);
});

bp.registerBThread(""O_Player_Thread_6_3"", function(){
bp.sync({request:[O(input[2].x, input[2].y), O(input[1].x, input[1].y), O(input[2].x, input[2].y)]},7);
});

bp.registerBThread(""O_Player_Thread_6_4"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[1].x, input[1].y)]},2);
});

}
var inputs_6 = [[{x: 0, y: 0}, {x: 0, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 2}, {x: 0, y: 2}]]
inputs_6.forEach(function (input) {
behaviorSet6(input);
});

function behaviorSet7(input) {
bp.registerBThread(""O_Player_Thread_7_1"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y), X(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[3].x, input[3].y)]},3);
});

bp.registerBThread(""O_Player_Thread_7_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[3].x, input[3].y)]},7);
});

bp.registerBThread(""O_Player_Thread_7_3"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[3].x, input[3].y)]},11);
});

bp.registerBThread(""O_Player_Thread_7_4"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[3].x, input[3].y)]},5);
});

}
var inputs_7 = [[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 2, y: 2}],
[{x: 1, y: 0}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 1, y: 1}],
[{x: 0, y: 0}, {x: 2, y: 2}, {x: 0, y: 2}, {x: 1, y: 0}],
[{x: 1, y: 0}, {x: 1, y: 0}, {x: 0, y: 0}, {x: 2, y: 2}],
[{x: 1, y: 2}, {x: 0, y: 0}, {x: 2, y: 2}, {x: 2, y: 1}],
[{x: 2, y: 1}, {x: 0, y: 0}, {x: 0, y: 0}, {x: 0, y: 2}]]
inputs_7.forEach(function (input) {
behaviorSet7(input);
});

function behaviorSet8(input) {
bp.registerBThread(""O_Player_Thread_8_1"", function(){
bp.sync({waitFor:[X(input[4].x, input[4].y)]});
bp.sync({waitFor:[X(input[3].x, input[3].y), O(input[4].x, input[4].y), X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[2].x, input[2].y)]},6);
});

bp.registerBThread(""O_Player_Thread_8_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[4].x, input[4].y)]},8);
});

bp.registerBThread(""O_Player_Thread_8_3"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y), O(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[4].x, input[4].y)]});
bp.sync({waitFor:[O(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[3].x, input[3].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[4].x, input[4].y), O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[4].x, input[4].y)]},6);
});

}
var inputs_8 = [[{x: 0, y: 1}, {x: 2, y: 0}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}],
[{x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 2}]]
inputs_8.forEach(function (input) {
behaviorSet8(input);
});

function behaviorSet9(input) {
bp.registerBThread(""O_Player_Thread_9_1"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},9);
});

bp.registerBThread(""O_Player_Thread_9_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},2);
});

bp.registerBThread(""O_Player_Thread_9_3"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y), O(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},1);
});

bp.registerBThread(""O_Player_Thread_9_4"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), O(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y), O(input[0].x, input[0].y), X(input[0].x, input[0].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},3);
});

}
var inputs_9 = [[{x: 0, y: 0}],
[{x: 1, y: 1}],
[{x: 0, y: 0}],
[{x: 2, y: 1}]]
inputs_9.forEach(function (input) {
behaviorSet9(input);
});

function behaviorSet10(input) {
bp.registerBThread(""O_Player_Thread_10_1"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},8);
});

bp.registerBThread(""O_Player_Thread_10_2"", function(){
bp.sync({request:[O(input[0].x, input[0].y)]},1);
});

}
var inputs_10 = [[{x: 0, y: 0}, {x: 0, y: 1}, {x: 1, y: 0}],
[{x: 2, y: 1}, {x: 2, y: 0}, {x: 2, y: 2}],
[{x: 0, y: 2}, {x: 0, y: 2}, {x: 1, y: 0}],
[{x: 2, y: 1}, {x: 1, y: 2}, {x: 0, y: 0}],
[{x: 0, y: 2}, {x: 0, y: 0}, {x: 2, y: 2}],
[{x: 2, y: 2}, {x: 1, y: 0}, {x: 0, y: 0}],
[{x: 1, y: 2}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 2}, {x: 2, y: 1}, {x: 2, y: 0}]]
inputs_10.forEach(function (input) {
behaviorSet10(input);
});

"
37,5.0,3.0,47.56018217306441,15.0,6.0,29.0,60.0,14.0,46.0,0.0,15.0,"function behaviorSet1(input) {
bp.registerBThread(""O_Player_Thread_1_1"", function(){
bp.sync({waitFor:[O(input[5].x, input[5].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[5].x, input[5].y)]},2);
});

}
var inputs_1 = [[{x: 0, y: 1}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 0, y: 2}, {x: 1, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 0}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 1, y: 0}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 2, y: 1}],
[{x: 0, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 1}],
[{x: 1, y: 1}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 1}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 1, y: 0}, {x: 0, y: 2}]]
inputs_1.forEach(function (input) {
behaviorSet1(input);
});

function behaviorSet2(input) {
bp.registerBThread(""O_Player_Thread_2_1"", function(){
bp.sync({request:[O(input[6].x, input[6].y), O(input[3].x, input[3].y), O(input[2].x, input[2].y), O(input[2].x, input[2].y)]},4);
});

bp.registerBThread(""O_Player_Thread_2_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[5].x, input[5].y), X(input[7].x, input[7].y)]});
bp.sync({request:[O(input[7].x, input[7].y)]},2);
});

bp.registerBThread(""O_Player_Thread_2_3"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[0].x, input[0].y)]},8);
});

}
var inputs_2 = [[{x: 1, y: 0}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 2, y: 2}, {x: 1, y: 2}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 2, y: 2}, {x: 1, y: 1}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 1, y: 0}],
[{x: 2, y: 2}, {x: 1, y: 2}, {x: 0, y: 2}, {x: 1, y: 2}, {x: 1, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 0, y: 2}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 0, y: 2}],
[{x: 1, y: 0}, {x: 0, y: 0}, {x: 0, y: 1}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 0, y: 2}]]
inputs_2.forEach(function (input) {
behaviorSet2(input);
});

function behaviorSet3(input) {
bp.registerBThread(""O_Player_Thread_3_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y)]},9);
});

bp.registerBThread(""O_Player_Thread_3_2"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), O(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y)]},4);
});

bp.registerBThread(""O_Player_Thread_3_3"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y), X(input[2].x, input[2].y), O(input[1].x, input[1].y), X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y)]},10);
});

bp.registerBThread(""O_Player_Thread_3_4"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[1].x, input[1].y)]});
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},11);
});

bp.registerBThread(""O_Player_Thread_3_5"", function(){
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},10);
});

}
var inputs_3 = [[{x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}],
[{x: 1, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}],
[{x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 0}]]
inputs_3.forEach(function (input) {
behaviorSet3(input);
});

function behaviorSet4(input) {
bp.registerBThread(""O_Player_Thread_4_1"", function(){
bp.sync({waitFor:[O(input[4].x, input[4].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_4_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[3].x, input[3].y)]},8);
});

}
var inputs_4 = [[{x: 2, y: 0}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 2, y: 1}, {x: 1, y: 0}],
[{x: 2, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 0, y: 0}],
[{x: 0, y: 2}, {x: 1, y: 2}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 0, y: 0}],
[{x: 1, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 2, y: 0}, {x: 0, y: 0}],
[{x: 2, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 2, y: 2}]]
inputs_4.forEach(function (input) {
behaviorSet4(input);
});

function behaviorSet5(input) {
bp.registerBThread(""O_Player_Thread_5_1"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[1].x, input[1].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},3);
});

bp.registerBThread(""O_Player_Thread_5_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},9);
});

bp.registerBThread(""O_Player_Thread_5_3"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({waitFor:[X(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y), O(input[1].x, input[1].y)]},11);
});

}
var inputs_5 = [[{x: 1, y: 0}, {x: 1, y: 1}, {x: 1, y: 2}],
[{x: 2, y: 2}, {x: 0, y: 2}, {x: 2, y: 1}]]
inputs_5.forEach(function (input) {
behaviorSet5(input);
});

function behaviorSet6(input) {
bp.registerBThread(""O_Player_Thread_6_1"", function(){
bp.sync({waitFor:[O(input[1].x, input[1].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_6_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[1].x, input[1].y), O(input[1].x, input[1].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},10);
});

bp.registerBThread(""O_Player_Thread_6_3"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_6_4"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[1].x, input[1].y)]},3);
});

}
var inputs_6 = [[{x: 0, y: 2}, {x: 1, y: 0}],
[{x: 0, y: 0}, {x: 1, y: 2}]]
inputs_6.forEach(function (input) {
behaviorSet6(input);
});

function behaviorSet7(input) {
bp.registerBThread(""O_Player_Thread_7_1"", function(){
bp.sync({request:[O(input[4].x, input[4].y), O(input[3].x, input[3].y), O(input[1].x, input[1].y), O(input[4].x, input[4].y)]},2);
});

}
var inputs_7 = [[{x: 0, y: 1}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 1, y: 2}, {x: 1, y: 2}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 1, y: 2}],
[{x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 0, y: 2}],
[{x: 0, y: 1}, {x: 0, y: 2}, {x: 1, y: 1}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 2, y: 0}],
[{x: 1, y: 2}, {x: 0, y: 2}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 0, y: 0}, {x: 1, y: 2}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 2}, {x: 2, y: 1}]]
inputs_7.forEach(function (input) {
behaviorSet7(input);
});

function behaviorSet8(input) {
bp.registerBThread(""O_Player_Thread_8_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[0].x, input[0].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_8_2"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[1].x, input[1].y)]},4);
});

bp.registerBThread(""O_Player_Thread_8_3"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[1].x, input[1].y), O(input[0].x, input[0].y), X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[1].x, input[1].y)]},3);
});

}
var inputs_8 = [[{x: 1, y: 2}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 2, y: 2}],
[{x: 2, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}],
[{x: 0, y: 0}, {x: 2, y: 2}]]
inputs_8.forEach(function (input) {
behaviorSet8(input);
});

function behaviorSet9(input) {
bp.registerBThread(""O_Player_Thread_9_1"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y)]});
bp.sync({waitFor:[X(input[3].x, input[3].y), X(input[2].x, input[2].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},2);
});

bp.registerBThread(""O_Player_Thread_9_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y), O(input[2].x, input[2].y)]},8);
});

}
var inputs_9 = [[{x: 2, y: 0}, {x: 1, y: 2}, {x: 1, y: 2}, {x: 0, y: 1}],
[{x: 2, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}],
[{x: 0, y: 0}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 2, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}, {x: 1, y: 2}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}],
[{x: 1, y: 2}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 1, y: 0}]]
inputs_9.forEach(function (input) {
behaviorSet9(input);
});

function behaviorSet10(input) {
bp.registerBThread(""O_Player_Thread_10_1"", function(){
bp.sync({waitFor:[X(input[5].x, input[5].y)]});
bp.sync({waitFor:[O(input[3].x, input[3].y), O(input[6].x, input[6].y), X(input[2].x, input[2].y), X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[5].x, input[5].y), O(input[7].x, input[7].y)]},6);
});

bp.registerBThread(""O_Player_Thread_10_2"", function(){
bp.sync({request:[O(input[6].x, input[6].y)]},2);
});

bp.registerBThread(""O_Player_Thread_10_3"", function(){
bp.sync({waitFor:[X(input[7].x, input[7].y), O(input[3].x, input[3].y), O(input[6].x, input[6].y), O(input[5].x, input[5].y)]});
bp.sync({waitFor:[O(input[7].x, input[7].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[4].x, input[4].y), O(input[3].x, input[3].y), O(input[6].x, input[6].y), O(input[4].x, input[4].y)]},5);
});

bp.registerBThread(""O_Player_Thread_10_4"", function(){
bp.sync({waitFor:[X(input[4].x, input[4].y)]});
bp.sync({waitFor:[X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[4].x, input[4].y), O(input[7].x, input[7].y), O(input[3].x, input[3].y), O(input[2].x, input[2].y)]},9);
});

bp.registerBThread(""O_Player_Thread_10_5"", function(){
bp.sync({waitFor:[X(input[5].x, input[5].y), O(input[2].x, input[2].y), O(input[6].x, input[6].y)]});
bp.sync({request:[O(input[5].x, input[5].y), O(input[0].x, input[0].y), O(input[7].x, input[7].y)]},1);
});

}
var inputs_10 = [[{x: 1, y: 1}, {x: 0, y: 2}, {x: 1, y: 2}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 2}, {x: 0, y: 1}],
[{x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 1}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 0, y: 1}, {x: 2, y: 2}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 1}],
[{x: 1, y: 0}, {x: 1, y: 0}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}],
[{x: 0, y: 0}, {x: 1, y: 0}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 2, y: 2}, {x: 0, y: 0}],
[{x: 2, y: 1}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 1, y: 2}, {x: 2, y: 1}, {x: 0, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 2, y: 2}, {x: 2, y: 2}],
[{x: 0, y: 1}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 2, y: 0}, {x: 2, y: 2}]]
inputs_10.forEach(function (input) {
behaviorSet10(input);
});

"
38,6.0,1.0,41.975023126734506,21.0,6.0,23.0,58.0,25.0,36.0,0.0,22.0,"function behaviorSet1(input) {
bp.registerBThread(""O_Player_Thread_1_1"", function(){
bp.sync({waitFor:[X(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[1].x, input[1].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[2].x, input[2].y), O(input[3].x, input[3].y)]},9);
});

}
var inputs_1 = [[{x: 0, y: 1}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 1, y: 1}, {x: 2, y: 1}],
[{x: 0, y: 2}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 0}],
[{x: 1, y: 0}, {x: 1, y: 0}, {x: 2, y: 2}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 2}],
[{x: 1, y: 1}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 2}],
[{x: 1, y: 2}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 1, y: 2}],
[{x: 1, y: 2}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 1, y: 1}, {x: 0, y: 2}, {x: 2, y: 0}],
[{x: 1, y: 2}, {x: 2, y: 1}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 2}]]
inputs_1.forEach(function (input) {
behaviorSet1(input);
});

function behaviorSet2(input) {
bp.registerBThread(""O_Player_Thread_2_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[2].x, input[2].y), X(input[1].x, input[1].y), O(input[4].x, input[4].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[4].x, input[4].y), O(input[1].x, input[1].y)]},3);
});

}
var inputs_2 = [[{x: 1, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 2, y: 1}, {x: 0, y: 0}]]
inputs_2.forEach(function (input) {
behaviorSet2(input);
});

function behaviorSet3(input) {
bp.registerBThread(""O_Player_Thread_3_1"", function(){
bp.sync({waitFor:[O(input[1].x, input[1].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[1].x, input[1].y), O(input[2].x, input[2].y)]},7);
});

bp.registerBThread(""O_Player_Thread_3_2"", function(){
bp.sync({waitFor:[O(input[1].x, input[1].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[2].x, input[2].y)]},10);
});

bp.registerBThread(""O_Player_Thread_3_3"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y)]},4);
});

bp.registerBThread(""O_Player_Thread_3_4"", function(){
bp.sync({request:[O(input[0].x, input[0].y), O(input[2].x, input[2].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y)]},4);
});

}
var inputs_3 = [[{x: 0, y: 2}, {x: 2, y: 2}, {x: 2, y: 2}],
[{x: 2, y: 1}, {x: 0, y: 2}, {x: 1, y: 2}],
[{x: 2, y: 0}, {x: 2, y: 0}, {x: 1, y: 0}],
[{x: 2, y: 2}, {x: 1, y: 2}, {x: 0, y: 2}],
[{x: 2, y: 2}, {x: 0, y: 0}, {x: 2, y: 2}],
[{x: 0, y: 0}, {x: 1, y: 0}, {x: 0, y: 1}]]
inputs_3.forEach(function (input) {
behaviorSet3(input);
});

function behaviorSet4(input) {
bp.registerBThread(""O_Player_Thread_4_1"", function(){
bp.sync({request:[O(input[5].x, input[5].y), O(input[6].x, input[6].y), O(input[3].x, input[3].y)]},6);
});

}
var inputs_4 = [[{x: 0, y: 0}, {x: 1, y: 1}, {x: 2, y: 1}, {x: 1, y: 0}, {x: 1, y: 0}, {x: 2, y: 2}, {x: 2, y: 0}],
[{x: 1, y: 1}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 0, y: 1}, {x: 2, y: 0}, {x: 0, y: 2}]]
inputs_4.forEach(function (input) {
behaviorSet4(input);
});

function behaviorSet5(input) {
bp.registerBThread(""O_Player_Thread_5_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[0].x, input[0].y), X(input[2].x, input[2].y), X(input[6].x, input[6].y)]});
bp.sync({request:[O(input[5].x, input[5].y), O(input[0].x, input[0].y), O(input[4].x, input[4].y)]},9);
});

bp.registerBThread(""O_Player_Thread_5_2"", function(){
bp.sync({request:[O(input[0].x, input[0].y), O(input[6].x, input[6].y)]},7);
});

bp.registerBThread(""O_Player_Thread_5_3"", function(){
bp.sync({waitFor:[O(input[3].x, input[3].y), O(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[3].x, input[3].y)]});
bp.sync({request:[O(input[6].x, input[6].y), O(input[0].x, input[0].y), O(input[3].x, input[3].y), O(input[1].x, input[1].y)]},11);
});

bp.registerBThread(""O_Player_Thread_5_4"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), O(input[0].x, input[0].y)]});
bp.sync({waitFor:[O(input[6].x, input[6].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[2].x, input[2].y), O(input[1].x, input[1].y)]},2);
});

bp.registerBThread(""O_Player_Thread_5_5"", function(){
bp.sync({waitFor:[O(input[4].x, input[4].y), O(input[1].x, input[1].y), O(input[5].x, input[5].y), O(input[6].x, input[6].y)]});
bp.sync({request:[O(input[2].x, input[2].y)]},2);
});

}
var inputs_5 = [[{x: 0, y: 1}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 2}, {x: 1, y: 0}, {x: 1, y: 2}],
[{x: 2, y: 0}, {x: 0, y: 1}, {x: 0, y: 2}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 0, y: 0}, {x: 0, y: 2}],
[{x: 0, y: 0}, {x: 2, y: 0}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 1, y: 0}, {x: 0, y: 2}, {x: 2, y: 0}],
[{x: 2, y: 2}, {x: 0, y: 1}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 1, y: 0}, {x: 1, y: 2}],
[{x: 0, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 2, y: 2}]]
inputs_5.forEach(function (input) {
behaviorSet5(input);
});

function behaviorSet6(input) {
bp.registerBThread(""O_Player_Thread_6_1"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[1].x, input[1].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y)]},6);
});

bp.registerBThread(""O_Player_Thread_6_2"", function(){
bp.sync({request:[O(input[2].x, input[2].y)]},2);
});

bp.registerBThread(""O_Player_Thread_6_3"", function(){
bp.sync({request:[O(input[2].x, input[2].y), O(input[1].x, input[1].y), O(input[2].x, input[2].y)]},7);
});

bp.registerBThread(""O_Player_Thread_6_4"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[1].x, input[1].y)]},2);
});

}
var inputs_6 = [[{x: 0, y: 0}, {x: 0, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 2}, {x: 0, y: 2}]]
inputs_6.forEach(function (input) {
behaviorSet6(input);
});

function behaviorSet7(input) {
bp.registerBThread(""O_Player_Thread_7_1"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y), X(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[3].x, input[3].y)]},3);
});

bp.registerBThread(""O_Player_Thread_7_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[3].x, input[3].y)]},7);
});

bp.registerBThread(""O_Player_Thread_7_3"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[3].x, input[3].y)]},11);
});

bp.registerBThread(""O_Player_Thread_7_4"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[3].x, input[3].y)]},5);
});

}
var inputs_7 = [[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 2, y: 2}],
[{x: 1, y: 0}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 1, y: 1}],
[{x: 0, y: 0}, {x: 2, y: 2}, {x: 0, y: 2}, {x: 1, y: 0}],
[{x: 1, y: 0}, {x: 1, y: 0}, {x: 0, y: 0}, {x: 2, y: 2}],
[{x: 1, y: 2}, {x: 0, y: 0}, {x: 2, y: 2}, {x: 2, y: 1}],
[{x: 2, y: 1}, {x: 0, y: 0}, {x: 0, y: 0}, {x: 0, y: 2}]]
inputs_7.forEach(function (input) {
behaviorSet7(input);
});

function behaviorSet8(input) {
bp.registerBThread(""O_Player_Thread_8_1"", function(){
bp.sync({waitFor:[X(input[4].x, input[4].y)]});
bp.sync({waitFor:[X(input[3].x, input[3].y), O(input[4].x, input[4].y), X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[2].x, input[2].y)]},6);
});

bp.registerBThread(""O_Player_Thread_8_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[4].x, input[4].y)]},8);
});

bp.registerBThread(""O_Player_Thread_8_3"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y), O(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[4].x, input[4].y)]});
bp.sync({waitFor:[O(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[3].x, input[3].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[4].x, input[4].y), O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[4].x, input[4].y)]},6);
});

}
var inputs_8 = [[{x: 0, y: 1}, {x: 2, y: 0}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}],
[{x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 2}]]
inputs_8.forEach(function (input) {
behaviorSet8(input);
});

function behaviorSet9(input) {
bp.registerBThread(""O_Player_Thread_9_1"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},9);
});

bp.registerBThread(""O_Player_Thread_9_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},2);
});

bp.registerBThread(""O_Player_Thread_9_3"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y), O(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},1);
});

bp.registerBThread(""O_Player_Thread_9_4"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), O(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y), O(input[0].x, input[0].y), X(input[0].x, input[0].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},3);
});

}
var inputs_9 = [[{x: 0, y: 0}],
[{x: 1, y: 1}],
[{x: 0, y: 0}],
[{x: 2, y: 1}]]
inputs_9.forEach(function (input) {
behaviorSet9(input);
});

function behaviorSet10(input) {
bp.registerBThread(""O_Player_Thread_10_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},8);
});

bp.registerBThread(""O_Player_Thread_10_2"", function(){
bp.sync({request:[O(input[0].x, input[0].y)]},1);
});

}
var inputs_10 = [[{x: 0, y: 0}, {x: 0, y: 1}, {x: 1, y: 0}],
[{x: 2, y: 1}, {x: 2, y: 0}, {x: 2, y: 2}],
[{x: 0, y: 2}, {x: 0, y: 2}, {x: 1, y: 0}],
[{x: 2, y: 1}, {x: 1, y: 2}, {x: 0, y: 0}],
[{x: 0, y: 2}, {x: 0, y: 0}, {x: 2, y: 2}],
[{x: 2, y: 2}, {x: 1, y: 0}, {x: 0, y: 0}],
[{x: 1, y: 2}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 2}, {x: 2, y: 1}, {x: 2, y: 0}]]
inputs_10.forEach(function (input) {
behaviorSet10(input);
});

"
39,6.0,2.0,45.833333333333336,20.0,8.0,22.0,56.0,20.0,40.0,0.0,20.0,"function behaviorSet1(input) {
bp.registerBThread(""O_Player_Thread_1_1"", function(){
bp.sync({waitFor:[O(input[5].x, input[5].y)]});
bp.sync({request:[O(input[5].x, input[5].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[5].x, input[5].y)]},2);
});

}
var inputs_1 = [[{x: 0, y: 1}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 0, y: 2}, {x: 1, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 0}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 1, y: 0}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 2, y: 1}],
[{x: 0, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 1}],
[{x: 1, y: 1}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 1}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 1, y: 0}, {x: 0, y: 2}]]
inputs_1.forEach(function (input) {
behaviorSet1(input);
});

function behaviorSet2(input) {
bp.registerBThread(""O_Player_Thread_2_1"", function(){
bp.sync({request:[O(input[6].x, input[6].y), O(input[3].x, input[3].y), O(input[2].x, input[2].y), O(input[2].x, input[2].y)]},4);
});

bp.registerBThread(""O_Player_Thread_2_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[5].x, input[5].y), X(input[7].x, input[7].y)]});
bp.sync({request:[O(input[7].x, input[7].y)]},2);
});

bp.registerBThread(""O_Player_Thread_2_3"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[0].x, input[0].y)]},8);
});

}
var inputs_2 = [[{x: 1, y: 0}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 2, y: 2}, {x: 1, y: 2}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 2, y: 2}, {x: 1, y: 1}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 1, y: 0}],
[{x: 2, y: 2}, {x: 1, y: 2}, {x: 0, y: 2}, {x: 1, y: 2}, {x: 1, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 0, y: 2}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 0, y: 2}],
[{x: 1, y: 0}, {x: 0, y: 0}, {x: 0, y: 1}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 0, y: 2}]]
inputs_2.forEach(function (input) {
behaviorSet2(input);
});

function behaviorSet3(input) {
bp.registerBThread(""O_Player_Thread_3_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y)]},9);
});

bp.registerBThread(""O_Player_Thread_3_2"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), O(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y)]},4);
});

bp.registerBThread(""O_Player_Thread_3_3"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y), X(input[2].x, input[2].y), O(input[1].x, input[1].y), X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y)]},10);
});

bp.registerBThread(""O_Player_Thread_3_4"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[1].x, input[1].y)]});
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},11);
});

bp.registerBThread(""O_Player_Thread_3_5"", function(){
bp.sync({request:[O(input[1].x, input[1].y)]},2);
});

}
var inputs_3 = [[{x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}],
[{x: 1, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}],
[{x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 0}]]
inputs_3.forEach(function (input) {
behaviorSet3(input);
});

function behaviorSet4(input) {
bp.registerBThread(""O_Player_Thread_4_1"", function(){
bp.sync({waitFor:[O(input[4].x, input[4].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_4_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[3].x, input[3].y)]},8);
});

}
var inputs_4 = [[{x: 2, y: 0}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 2, y: 1}, {x: 1, y: 0}],
[{x: 2, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 0, y: 0}],
[{x: 0, y: 2}, {x: 1, y: 2}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 0, y: 0}],
[{x: 1, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 2, y: 0}, {x: 0, y: 0}],
[{x: 2, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 2, y: 2}]]
inputs_4.forEach(function (input) {
behaviorSet4(input);
});

function behaviorSet5(input) {
bp.registerBThread(""O_Player_Thread_5_1"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[1].x, input[1].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},3);
});

bp.registerBThread(""O_Player_Thread_5_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},9);
});

bp.registerBThread(""O_Player_Thread_5_3"", function(){
bp.sync({request:[O(input[0].x, input[0].y), O(input[2].x, input[2].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y)]},4);
});

}
var inputs_5 = [[{x: 1, y: 0}, {x: 1, y: 1}, {x: 1, y: 2}],
[{x: 2, y: 2}, {x: 0, y: 2}, {x: 2, y: 1}]]
inputs_5.forEach(function (input) {
behaviorSet5(input);
});

function behaviorSet6(input) {
bp.registerBThread(""O_Player_Thread_6_1"", function(){
bp.sync({waitFor:[O(input[1].x, input[1].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_6_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[1].x, input[1].y), O(input[1].x, input[1].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},10);
});

bp.registerBThread(""O_Player_Thread_6_3"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_6_4"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[1].x, input[1].y)]},3);
});

}
var inputs_6 = [[{x: 0, y: 2}, {x: 1, y: 0}],
[{x: 0, y: 0}, {x: 1, y: 2}]]
inputs_6.forEach(function (input) {
behaviorSet6(input);
});

function behaviorSet7(input) {
bp.registerBThread(""O_Player_Thread_7_1"", function(){
bp.sync({request:[O(input[4].x, input[4].y), O(input[3].x, input[3].y), O(input[1].x, input[1].y), O(input[4].x, input[4].y)]},2);
});

}
var inputs_7 = [[{x: 0, y: 1}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 1, y: 2}, {x: 1, y: 2}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 1, y: 2}],
[{x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 0, y: 2}],
[{x: 0, y: 1}, {x: 0, y: 2}, {x: 1, y: 1}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 2, y: 0}],
[{x: 1, y: 2}, {x: 0, y: 2}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 0, y: 0}, {x: 1, y: 2}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 2}, {x: 2, y: 1}]]
inputs_7.forEach(function (input) {
behaviorSet7(input);
});

function behaviorSet8(input) {
bp.registerBThread(""O_Player_Thread_8_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[0].x, input[0].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_8_2"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[1].x, input[1].y)]},4);
});

bp.registerBThread(""O_Player_Thread_8_3"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[1].x, input[1].y), O(input[0].x, input[0].y), X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[1].x, input[1].y)]},3);
});

}
var inputs_8 = [[{x: 1, y: 2}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 2, y: 2}],
[{x: 2, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}],
[{x: 0, y: 0}, {x: 2, y: 2}]]
inputs_8.forEach(function (input) {
behaviorSet8(input);
});

function behaviorSet9(input) {
bp.registerBThread(""O_Player_Thread_9_1"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y)]});
bp.sync({waitFor:[X(input[3].x, input[3].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},2);
});

bp.registerBThread(""O_Player_Thread_9_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y), O(input[2].x, input[2].y)]},8);
});

}
var inputs_9 = [[{x: 2, y: 0}, {x: 1, y: 2}, {x: 1, y: 2}, {x: 0, y: 1}],
[{x: 2, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}],
[{x: 0, y: 0}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 2, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}, {x: 1, y: 2}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}],
[{x: 1, y: 2}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 1, y: 0}]]
inputs_9.forEach(function (input) {
behaviorSet9(input);
});

function behaviorSet10(input) {
bp.registerBThread(""O_Player_Thread_10_1"", function(){
bp.sync({waitFor:[X(input[5].x, input[5].y)]});
bp.sync({waitFor:[O(input[3].x, input[3].y), O(input[6].x, input[6].y), X(input[2].x, input[2].y), X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[5].x, input[5].y), O(input[7].x, input[7].y)]},6);
});

bp.registerBThread(""O_Player_Thread_10_2"", function(){
bp.sync({request:[O(input[6].x, input[6].y)]},2);
});

bp.registerBThread(""O_Player_Thread_10_3"", function(){
bp.sync({waitFor:[X(input[7].x, input[7].y), O(input[3].x, input[3].y), O(input[6].x, input[6].y), O(input[5].x, input[5].y)]});
bp.sync({waitFor:[O(input[7].x, input[7].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[4].x, input[4].y), O(input[3].x, input[3].y), O(input[6].x, input[6].y), O(input[4].x, input[4].y)]},5);
});

bp.registerBThread(""O_Player_Thread_10_4"", function(){
bp.sync({waitFor:[X(input[4].x, input[4].y)]});
bp.sync({waitFor:[X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[4].x, input[4].y), O(input[7].x, input[7].y), O(input[3].x, input[3].y), O(input[2].x, input[2].y)]},9);
});

bp.registerBThread(""O_Player_Thread_10_5"", function(){
bp.sync({waitFor:[X(input[5].x, input[5].y), O(input[2].x, input[2].y), O(input[6].x, input[6].y)]});
bp.sync({request:[O(input[5].x, input[5].y), O(input[0].x, input[0].y), O(input[7].x, input[7].y)]},1);
});

}
var inputs_10 = [[{x: 1, y: 1}, {x: 0, y: 2}, {x: 1, y: 2}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 2}, {x: 0, y: 1}],
[{x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 1}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 0, y: 1}, {x: 2, y: 2}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 1}],
[{x: 1, y: 0}, {x: 1, y: 0}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}],
[{x: 0, y: 0}, {x: 1, y: 0}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 2, y: 2}, {x: 0, y: 0}],
[{x: 2, y: 1}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 1, y: 2}, {x: 2, y: 1}, {x: 0, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 2, y: 2}, {x: 2, y: 2}],
[{x: 0, y: 1}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 2, y: 0}, {x: 2, y: 2}]]
inputs_10.forEach(function (input) {
behaviorSet10(input);
});

"
40,6.0,4.0,47.038327526132406,21.0,5.0,24.0,60.0,20.0,45.0,0.0,25.0,"function behaviorSet1(input) {
bp.registerBThread(""O_Player_Thread_1_1"", function(){
bp.sync({waitFor:[X(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[5].x, input[5].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[2].x, input[2].y), O(input[3].x, input[3].y)]},9);
});

}
var inputs_1 = [[{x: 0, y: 1}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 1, y: 1}, {x: 2, y: 1}],
[{x: 0, y: 2}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 0}],
[{x: 1, y: 0}, {x: 1, y: 0}, {x: 2, y: 2}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 2}],
[{x: 1, y: 1}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 2}],
[{x: 1, y: 2}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 1, y: 2}],
[{x: 1, y: 2}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 1, y: 1}, {x: 0, y: 2}, {x: 2, y: 0}],
[{x: 1, y: 2}, {x: 2, y: 1}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 2}]]
inputs_1.forEach(function (input) {
behaviorSet1(input);
});

function behaviorSet2(input) {
bp.registerBThread(""O_Player_Thread_2_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[2].x, input[2].y), X(input[1].x, input[1].y), O(input[4].x, input[4].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[4].x, input[4].y), O(input[1].x, input[1].y)]},3);
});

}
var inputs_2 = [[{x: 1, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 2, y: 1}, {x: 0, y: 0}]]
inputs_2.forEach(function (input) {
behaviorSet2(input);
});

function behaviorSet3(input) {
bp.registerBThread(""O_Player_Thread_3_1"", function(){
bp.sync({waitFor:[O(input[1].x, input[1].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[1].x, input[1].y), O(input[2].x, input[2].y)]},7);
});

bp.registerBThread(""O_Player_Thread_3_2"", function(){
bp.sync({waitFor:[O(input[1].x, input[1].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[2].x, input[2].y)]},10);
});

bp.registerBThread(""O_Player_Thread_3_3"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y)]},4);
});

bp.registerBThread(""O_Player_Thread_3_4"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y), O(input[1].x, input[1].y)]});
bp.sync({waitFor:[X(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y), O(input[1].x, input[1].y)]},11);
});

}
var inputs_3 = [[{x: 0, y: 2}, {x: 2, y: 2}, {x: 2, y: 2}],
[{x: 2, y: 1}, {x: 0, y: 2}, {x: 1, y: 2}],
[{x: 2, y: 0}, {x: 2, y: 0}, {x: 1, y: 0}],
[{x: 2, y: 2}, {x: 1, y: 2}, {x: 0, y: 2}],
[{x: 2, y: 2}, {x: 0, y: 0}, {x: 2, y: 2}],
[{x: 0, y: 0}, {x: 1, y: 0}, {x: 0, y: 1}]]
inputs_3.forEach(function (input) {
behaviorSet3(input);
});

function behaviorSet4(input) {
bp.registerBThread(""O_Player_Thread_4_1"", function(){
bp.sync({request:[O(input[5].x, input[5].y), O(input[6].x, input[6].y), O(input[3].x, input[3].y)]},6);
});

}
var inputs_4 = [[{x: 0, y: 0}, {x: 1, y: 1}, {x: 2, y: 1}, {x: 1, y: 0}, {x: 1, y: 0}, {x: 2, y: 2}, {x: 2, y: 0}],
[{x: 1, y: 1}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 0, y: 1}, {x: 2, y: 0}, {x: 0, y: 2}]]
inputs_4.forEach(function (input) {
behaviorSet4(input);
});

function behaviorSet5(input) {
bp.registerBThread(""O_Player_Thread_5_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[0].x, input[0].y), X(input[2].x, input[2].y), X(input[6].x, input[6].y)]});
bp.sync({request:[O(input[5].x, input[5].y), O(input[0].x, input[0].y), O(input[4].x, input[4].y)]},9);
});

bp.registerBThread(""O_Player_Thread_5_2"", function(){
bp.sync({request:[O(input[0].x, input[0].y), O(input[6].x, input[6].y)]},7);
});

bp.registerBThread(""O_Player_Thread_5_3"", function(){
bp.sync({waitFor:[O(input[3].x, input[3].y), O(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[3].x, input[3].y)]});
bp.sync({request:[O(input[6].x, input[6].y), O(input[0].x, input[0].y), O(input[3].x, input[3].y), O(input[1].x, input[1].y)]},11);
});

bp.registerBThread(""O_Player_Thread_5_4"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), O(input[0].x, input[0].y)]});
bp.sync({waitFor:[O(input[6].x, input[6].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[2].x, input[2].y), O(input[1].x, input[1].y)]},2);
});

bp.registerBThread(""O_Player_Thread_5_5"", function(){
bp.sync({waitFor:[O(input[4].x, input[4].y), O(input[1].x, input[1].y), O(input[5].x, input[5].y), O(input[6].x, input[6].y)]});
bp.sync({request:[O(input[2].x, input[2].y)]},2);
});

}
var inputs_5 = [[{x: 0, y: 1}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 2}, {x: 1, y: 0}, {x: 1, y: 2}],
[{x: 2, y: 0}, {x: 0, y: 1}, {x: 0, y: 2}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 0, y: 0}, {x: 0, y: 2}],
[{x: 0, y: 0}, {x: 2, y: 0}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 1, y: 0}, {x: 0, y: 2}, {x: 2, y: 0}],
[{x: 2, y: 2}, {x: 0, y: 1}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 1, y: 0}, {x: 1, y: 2}],
[{x: 0, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 2, y: 2}]]
inputs_5.forEach(function (input) {
behaviorSet5(input);
});

function behaviorSet6(input) {
bp.registerBThread(""O_Player_Thread_6_1"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[1].x, input[1].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y)]},6);
});

bp.registerBThread(""O_Player_Thread_6_2"", function(){
bp.sync({request:[O(input[2].x, input[2].y)]},2);
});

bp.registerBThread(""O_Player_Thread_6_3"", function(){
bp.sync({request:[O(input[2].x, input[2].y), O(input[1].x, input[1].y), O(input[2].x, input[2].y)]},7);
});

bp.registerBThread(""O_Player_Thread_6_4"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[1].x, input[1].y)]},2);
});

}
var inputs_6 = [[{x: 0, y: 0}, {x: 0, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 2}, {x: 0, y: 2}]]
inputs_6.forEach(function (input) {
behaviorSet6(input);
});

function behaviorSet7(input) {
bp.registerBThread(""O_Player_Thread_7_1"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y), X(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[3].x, input[3].y)]},3);
});

bp.registerBThread(""O_Player_Thread_7_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[3].x, input[3].y)]},7);
});

bp.registerBThread(""O_Player_Thread_7_3"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[3].x, input[3].y)]},11);
});

bp.registerBThread(""O_Player_Thread_7_4"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[3].x, input[3].y)]},5);
});

}
var inputs_7 = [[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 2, y: 2}],
[{x: 1, y: 0}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 1, y: 1}],
[{x: 0, y: 0}, {x: 2, y: 2}, {x: 0, y: 2}, {x: 1, y: 0}],
[{x: 1, y: 0}, {x: 1, y: 0}, {x: 0, y: 0}, {x: 2, y: 2}],
[{x: 1, y: 2}, {x: 0, y: 0}, {x: 2, y: 2}, {x: 2, y: 1}],
[{x: 2, y: 1}, {x: 0, y: 0}, {x: 0, y: 0}, {x: 0, y: 2}]]
inputs_7.forEach(function (input) {
behaviorSet7(input);
});

function behaviorSet8(input) {
bp.registerBThread(""O_Player_Thread_8_1"", function(){
bp.sync({waitFor:[X(input[4].x, input[4].y)]});
bp.sync({waitFor:[X(input[3].x, input[3].y), O(input[4].x, input[4].y), X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[2].x, input[2].y)]},6);
});

bp.registerBThread(""O_Player_Thread_8_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[4].x, input[4].y)]},8);
});

bp.registerBThread(""O_Player_Thread_8_3"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y), O(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[4].x, input[4].y)]});
bp.sync({waitFor:[O(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[3].x, input[3].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[4].x, input[4].y), O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[4].x, input[4].y)]},6);
});

}
var inputs_8 = [[{x: 2, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 0, y: 0}],
[{x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 2}]]
inputs_8.forEach(function (input) {
behaviorSet8(input);
});

function behaviorSet9(input) {
bp.registerBThread(""O_Player_Thread_9_1"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},9);
});

bp.registerBThread(""O_Player_Thread_9_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},2);
});

bp.registerBThread(""O_Player_Thread_9_3"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y), O(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},1);
});

bp.registerBThread(""O_Player_Thread_9_4"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), O(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y), O(input[0].x, input[0].y), X(input[0].x, input[0].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},3);
});

}
var inputs_9 = [[{x: 0, y: 0}],
[{x: 1, y: 1}],
[{x: 0, y: 0}],
[{x: 2, y: 1}]]
inputs_9.forEach(function (input) {
behaviorSet9(input);
});

function behaviorSet10(input) {
bp.registerBThread(""O_Player_Thread_10_1"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},8);
});

bp.registerBThread(""O_Player_Thread_10_2"", function(){
bp.sync({request:[O(input[0].x, input[0].y)]},1);
});

}
var inputs_10 = [[{x: 0, y: 0}, {x: 0, y: 1}, {x: 1, y: 0}],
[{x: 2, y: 1}, {x: 2, y: 0}, {x: 2, y: 2}],
[{x: 0, y: 2}, {x: 0, y: 2}, {x: 1, y: 0}],
[{x: 2, y: 1}, {x: 1, y: 2}, {x: 0, y: 0}],
[{x: 0, y: 2}, {x: 0, y: 0}, {x: 2, y: 2}],
[{x: 2, y: 2}, {x: 1, y: 0}, {x: 0, y: 0}],
[{x: 1, y: 2}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 2}, {x: 2, y: 1}, {x: 2, y: 0}]]
inputs_10.forEach(function (input) {
behaviorSet10(input);
});

"
41,6.0,3.0,55.169340463458106,15.0,9.0,26.0,59.0,7.0,43.0,0.0,10.0,"function behaviorSet1(input) {
bp.registerBThread(""O_Player_Thread_1_1"", function(){
bp.sync({waitFor:[O(input[5].x, input[5].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[5].x, input[5].y)]},2);
});

}
var inputs_1 = [[{x: 0, y: 1}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 0, y: 2}, {x: 1, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 0}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 1, y: 0}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 2, y: 1}],
[{x: 0, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 1}],
[{x: 1, y: 1}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 1}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 1, y: 0}, {x: 0, y: 2}]]
inputs_1.forEach(function (input) {
behaviorSet1(input);
});

function behaviorSet2(input) {
bp.registerBThread(""O_Player_Thread_2_1"", function(){
bp.sync({request:[O(input[6].x, input[6].y), O(input[3].x, input[3].y), O(input[2].x, input[2].y), O(input[2].x, input[2].y)]},4);
});

bp.registerBThread(""O_Player_Thread_2_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[5].x, input[5].y), X(input[7].x, input[7].y)]});
bp.sync({request:[O(input[7].x, input[7].y)]},2);
});

bp.registerBThread(""O_Player_Thread_2_3"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[0].x, input[0].y)]},8);
});

}
var inputs_2 = [[{x: 1, y: 0}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 2, y: 2}, {x: 1, y: 2}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 2, y: 2}, {x: 1, y: 1}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 1, y: 0}],
[{x: 2, y: 2}, {x: 1, y: 2}, {x: 0, y: 2}, {x: 1, y: 2}, {x: 1, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 0, y: 2}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 0, y: 2}],
[{x: 1, y: 0}, {x: 0, y: 0}, {x: 0, y: 1}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 0, y: 2}]]
inputs_2.forEach(function (input) {
behaviorSet2(input);
});

function behaviorSet3(input) {
bp.registerBThread(""O_Player_Thread_3_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y)]},9);
});

bp.registerBThread(""O_Player_Thread_3_2"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), O(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y)]},4);
});

bp.registerBThread(""O_Player_Thread_3_3"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y), X(input[2].x, input[2].y), O(input[1].x, input[1].y), X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y)]},10);
});

bp.registerBThread(""O_Player_Thread_3_4"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[1].x, input[1].y)]});
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},11);
});

bp.registerBThread(""O_Player_Thread_3_5"", function(){
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},10);
});

}
var inputs_3 = [[{x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}],
[{x: 1, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}],
[{x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 0}]]
inputs_3.forEach(function (input) {
behaviorSet3(input);
});

function behaviorSet4(input) {
bp.registerBThread(""O_Player_Thread_4_1"", function(){
bp.sync({waitFor:[O(input[4].x, input[4].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_4_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[3].x, input[3].y)]},8);
});

}
var inputs_4 = [[{x: 2, y: 0}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 2, y: 1}, {x: 1, y: 0}],
[{x: 0, y: 1}, {x: 2, y: 0}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}],
[{x: 0, y: 2}, {x: 1, y: 2}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 0, y: 0}],
[{x: 1, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 2, y: 0}, {x: 0, y: 0}],
[{x: 2, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 2, y: 2}]]
inputs_4.forEach(function (input) {
behaviorSet4(input);
});

function behaviorSet5(input) {
bp.registerBThread(""O_Player_Thread_5_1"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[1].x, input[1].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},3);
});

bp.registerBThread(""O_Player_Thread_5_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},9);
});

bp.registerBThread(""O_Player_Thread_5_3"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({waitFor:[X(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y), O(input[1].x, input[1].y)]},11);
});

}
var inputs_5 = [[{x: 1, y: 0}, {x: 1, y: 1}, {x: 1, y: 2}],
[{x: 2, y: 2}, {x: 0, y: 2}, {x: 2, y: 1}]]
inputs_5.forEach(function (input) {
behaviorSet5(input);
});

function behaviorSet6(input) {
bp.registerBThread(""O_Player_Thread_6_1"", function(){
bp.sync({waitFor:[O(input[1].x, input[1].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_6_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[1].x, input[1].y), O(input[1].x, input[1].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},10);
});

bp.registerBThread(""O_Player_Thread_6_3"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_6_4"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[1].x, input[1].y)]},3);
});

}
var inputs_6 = [[{x: 0, y: 2}, {x: 1, y: 0}],
[{x: 0, y: 0}, {x: 1, y: 2}]]
inputs_6.forEach(function (input) {
behaviorSet6(input);
});

function behaviorSet7(input) {
bp.registerBThread(""O_Player_Thread_7_1"", function(){
bp.sync({request:[O(input[4].x, input[4].y), O(input[3].x, input[3].y), O(input[1].x, input[1].y), O(input[4].x, input[4].y)]},2);
});

}
var inputs_7 = [[{x: 0, y: 1}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 1, y: 2}, {x: 1, y: 2}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 1, y: 2}],
[{x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 0, y: 2}],
[{x: 0, y: 1}, {x: 0, y: 2}, {x: 1, y: 1}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 2, y: 0}],
[{x: 1, y: 2}, {x: 0, y: 2}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 0, y: 0}, {x: 1, y: 2}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 2}, {x: 2, y: 1}]]
inputs_7.forEach(function (input) {
behaviorSet7(input);
});

function behaviorSet8(input) {
bp.registerBThread(""O_Player_Thread_8_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[0].x, input[0].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_8_2"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[1].x, input[1].y)]},4);
});

bp.registerBThread(""O_Player_Thread_8_3"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[1].x, input[1].y), O(input[0].x, input[0].y), X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[1].x, input[1].y)]},3);
});

}
var inputs_8 = [[{x: 1, y: 2}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 2, y: 2}],
[{x: 2, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}],
[{x: 0, y: 0}, {x: 2, y: 2}]]
inputs_8.forEach(function (input) {
behaviorSet8(input);
});

function behaviorSet9(input) {
bp.registerBThread(""O_Player_Thread_9_1"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y)]});
bp.sync({waitFor:[X(input[3].x, input[3].y), X(input[2].x, input[2].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},2);
});

bp.registerBThread(""O_Player_Thread_9_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y), O(input[2].x, input[2].y)]},8);
});

}
var inputs_9 = [[{x: 2, y: 0}, {x: 1, y: 2}, {x: 1, y: 2}, {x: 0, y: 1}],
[{x: 2, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}],
[{x: 0, y: 0}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 2, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}, {x: 1, y: 2}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}],
[{x: 1, y: 2}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 1, y: 0}]]
inputs_9.forEach(function (input) {
behaviorSet9(input);
});

function behaviorSet10(input) {
bp.registerBThread(""O_Player_Thread_10_1"", function(){
bp.sync({waitFor:[X(input[5].x, input[5].y)]});
bp.sync({waitFor:[O(input[3].x, input[3].y), O(input[6].x, input[6].y), X(input[2].x, input[2].y), X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[5].x, input[5].y), O(input[7].x, input[7].y)]},6);
});

bp.registerBThread(""O_Player_Thread_10_2"", function(){
bp.sync({request:[O(input[6].x, input[6].y)]},2);
});

bp.registerBThread(""O_Player_Thread_10_3"", function(){
bp.sync({waitFor:[X(input[7].x, input[7].y), O(input[3].x, input[3].y), O(input[6].x, input[6].y), O(input[5].x, input[5].y)]});
bp.sync({waitFor:[O(input[7].x, input[7].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[4].x, input[4].y), O(input[3].x, input[3].y), O(input[6].x, input[6].y), O(input[4].x, input[4].y)]},5);
});

bp.registerBThread(""O_Player_Thread_10_4"", function(){
bp.sync({waitFor:[X(input[4].x, input[4].y)]});
bp.sync({waitFor:[X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[4].x, input[4].y), O(input[7].x, input[7].y), O(input[3].x, input[3].y), O(input[2].x, input[2].y)]},9);
});

bp.registerBThread(""O_Player_Thread_10_5"", function(){
bp.sync({waitFor:[X(input[5].x, input[5].y), O(input[2].x, input[2].y), O(input[6].x, input[6].y)]});
bp.sync({request:[O(input[5].x, input[5].y), O(input[0].x, input[0].y), O(input[7].x, input[7].y)]},1);
});

}
var inputs_10 = [[{x: 1, y: 1}, {x: 0, y: 2}, {x: 1, y: 2}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 2}, {x: 0, y: 1}],
[{x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 1}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 0, y: 1}, {x: 2, y: 2}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 1}],
[{x: 1, y: 0}, {x: 1, y: 0}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}],
[{x: 0, y: 0}, {x: 1, y: 0}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 2, y: 2}, {x: 0, y: 0}],
[{x: 2, y: 1}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 1, y: 2}, {x: 2, y: 1}, {x: 0, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 2, y: 2}, {x: 2, y: 2}],
[{x: 0, y: 1}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 2, y: 0}, {x: 2, y: 2}]]
inputs_10.forEach(function (input) {
behaviorSet10(input);
});

"
42,6.0,5.0,40.0,12.0,6.0,32.0,68.0,13.0,32.0,0.0,18.0,"function behaviorSet1(input) {
bp.registerBThread(""O_Player_Thread_1_1"", function(){
bp.sync({waitFor:[X(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[5].x, input[5].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[2].x, input[2].y), O(input[3].x, input[3].y)]},9);
});

}
var inputs_1 = [[{x: 0, y: 1}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 1, y: 1}, {x: 2, y: 1}],
[{x: 0, y: 2}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 0}],
[{x: 1, y: 0}, {x: 1, y: 0}, {x: 2, y: 2}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 2}],
[{x: 1, y: 1}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 2}],
[{x: 1, y: 2}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 1, y: 2}],
[{x: 1, y: 2}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 1, y: 1}, {x: 0, y: 2}, {x: 2, y: 0}],
[{x: 1, y: 2}, {x: 2, y: 1}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 2}]]
inputs_1.forEach(function (input) {
behaviorSet1(input);
});

function behaviorSet2(input) {
bp.registerBThread(""O_Player_Thread_2_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[2].x, input[2].y), X(input[1].x, input[1].y), O(input[4].x, input[4].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[4].x, input[4].y), O(input[1].x, input[1].y)]},3);
});

}
var inputs_2 = [[{x: 1, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 2, y: 1}, {x: 0, y: 0}]]
inputs_2.forEach(function (input) {
behaviorSet2(input);
});

function behaviorSet3(input) {
bp.registerBThread(""O_Player_Thread_3_1"", function(){
bp.sync({waitFor:[O(input[1].x, input[1].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[1].x, input[1].y), O(input[2].x, input[2].y)]},7);
});

bp.registerBThread(""O_Player_Thread_3_2"", function(){
bp.sync({waitFor:[O(input[1].x, input[1].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[2].x, input[2].y)]},10);
});

bp.registerBThread(""O_Player_Thread_3_3"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y)]},4);
});

bp.registerBThread(""O_Player_Thread_3_4"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y), O(input[1].x, input[1].y)]});
bp.sync({waitFor:[X(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y), O(input[1].x, input[1].y)]},11);
});

}
var inputs_3 = [[{x: 0, y: 2}, {x: 2, y: 2}, {x: 2, y: 2}],
[{x: 2, y: 1}, {x: 0, y: 2}, {x: 1, y: 2}],
[{x: 2, y: 0}, {x: 2, y: 0}, {x: 1, y: 0}],
[{x: 2, y: 2}, {x: 1, y: 2}, {x: 0, y: 2}],
[{x: 2, y: 2}, {x: 0, y: 0}, {x: 2, y: 2}],
[{x: 0, y: 0}, {x: 1, y: 0}, {x: 0, y: 1}]]
inputs_3.forEach(function (input) {
behaviorSet3(input);
});

function behaviorSet4(input) {
bp.registerBThread(""O_Player_Thread_4_1"", function(){
bp.sync({request:[O(input[5].x, input[5].y), O(input[6].x, input[6].y), O(input[3].x, input[3].y)]},6);
});

}
var inputs_4 = [[{x: 0, y: 0}, {x: 1, y: 1}, {x: 2, y: 1}, {x: 1, y: 0}, {x: 1, y: 0}, {x: 2, y: 2}, {x: 2, y: 0}],
[{x: 1, y: 1}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 0, y: 1}, {x: 2, y: 0}, {x: 0, y: 2}]]
inputs_4.forEach(function (input) {
behaviorSet4(input);
});

function behaviorSet5(input) {
bp.registerBThread(""O_Player_Thread_5_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[0].x, input[0].y), X(input[2].x, input[2].y), X(input[6].x, input[6].y)]});
bp.sync({request:[O(input[5].x, input[5].y), O(input[0].x, input[0].y), O(input[4].x, input[4].y)]},9);
});

bp.registerBThread(""O_Player_Thread_5_2"", function(){
bp.sync({request:[O(input[0].x, input[0].y), O(input[6].x, input[6].y)]},7);
});

bp.registerBThread(""O_Player_Thread_5_3"", function(){
bp.sync({waitFor:[O(input[3].x, input[3].y), O(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[3].x, input[3].y)]});
bp.sync({request:[O(input[6].x, input[6].y), O(input[0].x, input[0].y), O(input[3].x, input[3].y), O(input[1].x, input[1].y)]},11);
});

bp.registerBThread(""O_Player_Thread_5_4"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), O(input[0].x, input[0].y)]});
bp.sync({waitFor:[O(input[6].x, input[6].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[2].x, input[2].y), O(input[1].x, input[1].y)]},2);
});

bp.registerBThread(""O_Player_Thread_5_5"", function(){
bp.sync({waitFor:[O(input[4].x, input[4].y), O(input[1].x, input[1].y), O(input[5].x, input[5].y), O(input[6].x, input[6].y)]});
bp.sync({request:[O(input[2].x, input[2].y)]},2);
});

}
var inputs_5 = [[{x: 0, y: 1}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 2}, {x: 1, y: 0}, {x: 1, y: 2}],
[{x: 2, y: 0}, {x: 0, y: 1}, {x: 0, y: 2}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 0, y: 0}, {x: 0, y: 2}],
[{x: 0, y: 0}, {x: 2, y: 0}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 1, y: 0}, {x: 0, y: 2}, {x: 2, y: 0}],
[{x: 2, y: 2}, {x: 0, y: 1}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 1, y: 0}, {x: 1, y: 2}],
[{x: 0, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 2, y: 2}]]
inputs_5.forEach(function (input) {
behaviorSet5(input);
});

function behaviorSet6(input) {
bp.registerBThread(""O_Player_Thread_6_1"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[1].x, input[1].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y)]},6);
});

bp.registerBThread(""O_Player_Thread_6_2"", function(){
bp.sync({request:[O(input[2].x, input[2].y)]},2);
});

bp.registerBThread(""O_Player_Thread_6_3"", function(){
bp.sync({request:[O(input[2].x, input[2].y), O(input[1].x, input[1].y), O(input[2].x, input[2].y)]},7);
});

bp.registerBThread(""O_Player_Thread_6_4"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[1].x, input[1].y)]},2);
});

}
var inputs_6 = [[{x: 0, y: 0}, {x: 0, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 2}, {x: 0, y: 2}]]
inputs_6.forEach(function (input) {
behaviorSet6(input);
});

function behaviorSet7(input) {
bp.registerBThread(""O_Player_Thread_7_1"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y), X(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[3].x, input[3].y)]},3);
});

bp.registerBThread(""O_Player_Thread_7_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[3].x, input[3].y)]},7);
});

bp.registerBThread(""O_Player_Thread_7_3"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[3].x, input[3].y)]},11);
});

bp.registerBThread(""O_Player_Thread_7_4"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[3].x, input[3].y)]},5);
});

}
var inputs_7 = [[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 2, y: 2}],
[{x: 1, y: 0}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 1, y: 1}],
[{x: 0, y: 0}, {x: 2, y: 2}, {x: 0, y: 2}, {x: 1, y: 0}],
[{x: 1, y: 0}, {x: 1, y: 0}, {x: 0, y: 0}, {x: 2, y: 2}],
[{x: 1, y: 2}, {x: 0, y: 0}, {x: 2, y: 2}, {x: 2, y: 1}],
[{x: 2, y: 1}, {x: 0, y: 0}, {x: 0, y: 0}, {x: 0, y: 2}]]
inputs_7.forEach(function (input) {
behaviorSet7(input);
});

function behaviorSet8(input) {
bp.registerBThread(""O_Player_Thread_8_1"", function(){
bp.sync({waitFor:[X(input[4].x, input[4].y)]});
bp.sync({waitFor:[X(input[3].x, input[3].y), O(input[4].x, input[4].y), X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[2].x, input[2].y)]},6);
});

bp.registerBThread(""O_Player_Thread_8_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[4].x, input[4].y)]},8);
});

bp.registerBThread(""O_Player_Thread_8_3"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y), O(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[4].x, input[4].y)]});
bp.sync({waitFor:[O(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[3].x, input[3].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[4].x, input[4].y), O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[4].x, input[4].y)]},6);
});

}
var inputs_8 = [[{x: 0, y: 1}, {x: 2, y: 0}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}],
[{x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 2}]]
inputs_8.forEach(function (input) {
behaviorSet8(input);
});

function behaviorSet9(input) {
bp.registerBThread(""O_Player_Thread_9_1"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},9);
});

bp.registerBThread(""O_Player_Thread_9_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},2);
});

bp.registerBThread(""O_Player_Thread_9_3"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y), O(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},1);
});

bp.registerBThread(""O_Player_Thread_9_4"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), O(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y), O(input[0].x, input[0].y), X(input[0].x, input[0].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},3);
});

}
var inputs_9 = [[{x: 2, y: 0}],
[{x: 1, y: 1}],
[{x: 0, y: 0}],
[{x: 2, y: 1}]]
inputs_9.forEach(function (input) {
behaviorSet9(input);
});

function behaviorSet10(input) {
bp.registerBThread(""O_Player_Thread_10_1"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},8);
});

bp.registerBThread(""O_Player_Thread_10_2"", function(){
bp.sync({request:[O(input[0].x, input[0].y)]},1);
});

}
var inputs_10 = [[{x: 0, y: 0}, {x: 0, y: 1}, {x: 1, y: 0}],
[{x: 2, y: 1}, {x: 2, y: 0}, {x: 2, y: 2}],
[{x: 0, y: 2}, {x: 0, y: 2}, {x: 1, y: 0}],
[{x: 2, y: 1}, {x: 1, y: 2}, {x: 0, y: 0}],
[{x: 0, y: 2}, {x: 0, y: 0}, {x: 2, y: 2}],
[{x: 2, y: 2}, {x: 1, y: 0}, {x: 0, y: 0}],
[{x: 1, y: 2}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 2}, {x: 2, y: 1}, {x: 2, y: 0}]]
inputs_10.forEach(function (input) {
behaviorSet10(input);
});

"
43,6.0,6.0,36.83510638297872,17.0,3.0,30.0,60.0,30.0,36.0,0.0,20.0,"function behaviorSet1(input) {
bp.registerBThread(""O_Player_Thread_1_1"", function(){
bp.sync({waitFor:[X(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[5].x, input[5].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[2].x, input[2].y), O(input[3].x, input[3].y)]},9);
});

}
var inputs_1 = [[{x: 0, y: 1}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 1, y: 1}, {x: 2, y: 1}],
[{x: 0, y: 2}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 0}],
[{x: 1, y: 0}, {x: 1, y: 0}, {x: 2, y: 2}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 2}],
[{x: 1, y: 1}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 2}],
[{x: 1, y: 2}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 0, y: 1}, {x: 1, y: 2}],
[{x: 1, y: 2}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 1, y: 1}, {x: 0, y: 2}, {x: 2, y: 0}],
[{x: 1, y: 2}, {x: 2, y: 1}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 2}]]
inputs_1.forEach(function (input) {
behaviorSet1(input);
});

function behaviorSet2(input) {
bp.registerBThread(""O_Player_Thread_2_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[2].x, input[2].y), X(input[1].x, input[1].y), O(input[4].x, input[4].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[4].x, input[4].y), O(input[1].x, input[1].y)]},3);
});

}
var inputs_2 = [[{x: 1, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 2, y: 1}, {x: 0, y: 0}]]
inputs_2.forEach(function (input) {
behaviorSet2(input);
});

function behaviorSet3(input) {
bp.registerBThread(""O_Player_Thread_3_1"", function(){
bp.sync({waitFor:[O(input[1].x, input[1].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[1].x, input[1].y), O(input[2].x, input[2].y)]},7);
});

bp.registerBThread(""O_Player_Thread_3_2"", function(){
bp.sync({waitFor:[O(input[1].x, input[1].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[2].x, input[2].y)]},10);
});

bp.registerBThread(""O_Player_Thread_3_3"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y)]},4);
});

bp.registerBThread(""O_Player_Thread_3_4"", function(){
bp.sync({request:[O(input[0].x, input[0].y), O(input[2].x, input[2].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y)]},4);
});

}
var inputs_3 = [[{x: 0, y: 2}, {x: 2, y: 2}, {x: 2, y: 2}],
[{x: 2, y: 1}, {x: 0, y: 2}, {x: 1, y: 2}],
[{x: 2, y: 0}, {x: 2, y: 0}, {x: 1, y: 0}],
[{x: 2, y: 2}, {x: 1, y: 2}, {x: 0, y: 2}],
[{x: 2, y: 2}, {x: 0, y: 0}, {x: 2, y: 2}],
[{x: 0, y: 0}, {x: 1, y: 0}, {x: 0, y: 1}]]
inputs_3.forEach(function (input) {
behaviorSet3(input);
});

function behaviorSet4(input) {
bp.registerBThread(""O_Player_Thread_4_1"", function(){
bp.sync({request:[O(input[5].x, input[5].y), O(input[6].x, input[6].y), O(input[3].x, input[3].y)]},6);
});

}
var inputs_4 = [[{x: 0, y: 0}, {x: 1, y: 1}, {x: 2, y: 1}, {x: 1, y: 0}, {x: 1, y: 0}, {x: 2, y: 2}, {x: 2, y: 0}],
[{x: 1, y: 1}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 0, y: 1}, {x: 2, y: 0}, {x: 0, y: 2}]]
inputs_4.forEach(function (input) {
behaviorSet4(input);
});

function behaviorSet5(input) {
bp.registerBThread(""O_Player_Thread_5_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[0].x, input[0].y), X(input[2].x, input[2].y), X(input[6].x, input[6].y)]});
bp.sync({request:[O(input[5].x, input[5].y), O(input[0].x, input[0].y), O(input[4].x, input[4].y)]},9);
});

bp.registerBThread(""O_Player_Thread_5_2"", function(){
bp.sync({request:[O(input[0].x, input[0].y), O(input[6].x, input[6].y)]},7);
});

bp.registerBThread(""O_Player_Thread_5_3"", function(){
bp.sync({waitFor:[O(input[3].x, input[3].y), O(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[3].x, input[3].y)]});
bp.sync({request:[O(input[6].x, input[6].y), O(input[0].x, input[0].y), O(input[3].x, input[3].y), O(input[1].x, input[1].y)]},11);
});

bp.registerBThread(""O_Player_Thread_5_4"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), O(input[0].x, input[0].y)]});
bp.sync({waitFor:[O(input[6].x, input[6].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[2].x, input[2].y), O(input[1].x, input[1].y)]},2);
});

bp.registerBThread(""O_Player_Thread_5_5"", function(){
bp.sync({waitFor:[O(input[4].x, input[4].y), O(input[1].x, input[1].y), O(input[5].x, input[5].y), O(input[6].x, input[6].y)]});
bp.sync({request:[O(input[2].x, input[2].y)]},2);
});

}
var inputs_5 = [[{x: 0, y: 1}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 2}, {x: 1, y: 0}, {x: 1, y: 2}],
[{x: 2, y: 0}, {x: 0, y: 1}, {x: 0, y: 2}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 0, y: 0}, {x: 0, y: 2}],
[{x: 0, y: 0}, {x: 2, y: 0}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 1, y: 0}, {x: 0, y: 2}, {x: 2, y: 0}],
[{x: 2, y: 2}, {x: 0, y: 1}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 1, y: 0}, {x: 1, y: 2}],
[{x: 0, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 2, y: 2}]]
inputs_5.forEach(function (input) {
behaviorSet5(input);
});

function behaviorSet6(input) {
bp.registerBThread(""O_Player_Thread_6_1"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[1].x, input[1].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y)]},6);
});

bp.registerBThread(""O_Player_Thread_6_2"", function(){
bp.sync({request:[O(input[2].x, input[2].y)]},2);
});

bp.registerBThread(""O_Player_Thread_6_3"", function(){
bp.sync({request:[O(input[2].x, input[2].y), O(input[1].x, input[1].y), O(input[2].x, input[2].y)]},7);
});

bp.registerBThread(""O_Player_Thread_6_4"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[1].x, input[1].y)]},2);
});

}
var inputs_6 = [[{x: 0, y: 0}, {x: 0, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 2}, {x: 0, y: 2}]]
inputs_6.forEach(function (input) {
behaviorSet6(input);
});

function behaviorSet7(input) {
bp.registerBThread(""O_Player_Thread_7_1"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y), X(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[3].x, input[3].y)]},3);
});

bp.registerBThread(""O_Player_Thread_7_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[3].x, input[3].y)]},7);
});

bp.registerBThread(""O_Player_Thread_7_3"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[3].x, input[3].y)]},11);
});

bp.registerBThread(""O_Player_Thread_7_4"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[3].x, input[3].y)]},5);
});

}
var inputs_7 = [[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 2, y: 2}],
[{x: 1, y: 0}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 1, y: 1}],
[{x: 0, y: 0}, {x: 2, y: 2}, {x: 0, y: 2}, {x: 1, y: 0}],
[{x: 1, y: 0}, {x: 1, y: 0}, {x: 0, y: 0}, {x: 2, y: 2}],
[{x: 1, y: 2}, {x: 0, y: 0}, {x: 2, y: 2}, {x: 2, y: 1}],
[{x: 2, y: 1}, {x: 0, y: 0}, {x: 0, y: 0}, {x: 0, y: 2}]]
inputs_7.forEach(function (input) {
behaviorSet7(input);
});

function behaviorSet8(input) {
bp.registerBThread(""O_Player_Thread_8_1"", function(){
bp.sync({waitFor:[X(input[4].x, input[4].y)]});
bp.sync({waitFor:[X(input[3].x, input[3].y), O(input[4].x, input[4].y), X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[2].x, input[2].y)]},6);
});

bp.registerBThread(""O_Player_Thread_8_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[4].x, input[4].y)]},8);
});

bp.registerBThread(""O_Player_Thread_8_3"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y), O(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[4].x, input[4].y)]});
bp.sync({waitFor:[O(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[3].x, input[3].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[4].x, input[4].y), O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[4].x, input[4].y)]},6);
});

}
var inputs_8 = [[{x: 0, y: 1}, {x: 2, y: 0}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}],
[{x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 2}]]
inputs_8.forEach(function (input) {
behaviorSet8(input);
});

function behaviorSet9(input) {
bp.registerBThread(""O_Player_Thread_9_1"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},9);
});

bp.registerBThread(""O_Player_Thread_9_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},2);
});

bp.registerBThread(""O_Player_Thread_9_3"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y), O(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},1);
});

bp.registerBThread(""O_Player_Thread_9_4"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), O(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y), O(input[0].x, input[0].y), X(input[0].x, input[0].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},3);
});

}
var inputs_9 = [[{x: 0, y: 0}],
[{x: 1, y: 1}],
[{x: 0, y: 0}],
[{x: 2, y: 1}]]
inputs_9.forEach(function (input) {
behaviorSet9(input);
});

function behaviorSet10(input) {
bp.registerBThread(""O_Player_Thread_10_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},8);
});

bp.registerBThread(""O_Player_Thread_10_2"", function(){
bp.sync({request:[O(input[0].x, input[0].y)]},1);
});

}
var inputs_10 = [[{x: 0, y: 0}, {x: 0, y: 1}, {x: 1, y: 0}],
[{x: 2, y: 1}, {x: 2, y: 0}, {x: 2, y: 2}],
[{x: 0, y: 2}, {x: 0, y: 2}, {x: 1, y: 0}],
[{x: 2, y: 1}, {x: 1, y: 2}, {x: 0, y: 0}],
[{x: 0, y: 2}, {x: 0, y: 0}, {x: 2, y: 2}],
[{x: 2, y: 2}, {x: 1, y: 0}, {x: 0, y: 0}],
[{x: 1, y: 2}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 2}, {x: 2, y: 1}, {x: 2, y: 0}]]
inputs_10.forEach(function (input) {
behaviorSet10(input);
});

"
44,7.0,2.0,54.43595769682726,25.0,7.0,18.0,54.0,12.0,38.0,0.0,20.0,"function behaviorSet1(input) {
bp.registerBThread(""O_Player_Thread_1_1"", function(){
bp.sync({waitFor:[O(input[5].x, input[5].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[5].x, input[5].y)]},2);
});

}
var inputs_1 = [[{x: 0, y: 1}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 0, y: 2}, {x: 1, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 0}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 1, y: 0}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 2, y: 1}],
[{x: 0, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 1}],
[{x: 1, y: 1}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 1}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 1, y: 0}, {x: 0, y: 2}]]
inputs_1.forEach(function (input) {
behaviorSet1(input);
});

function behaviorSet2(input) {
bp.registerBThread(""O_Player_Thread_2_1"", function(){
bp.sync({request:[O(input[6].x, input[6].y), O(input[3].x, input[3].y), O(input[2].x, input[2].y), O(input[2].x, input[2].y)]},4);
});

bp.registerBThread(""O_Player_Thread_2_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[5].x, input[5].y), X(input[7].x, input[7].y)]});
bp.sync({request:[O(input[7].x, input[7].y)]},2);
});

bp.registerBThread(""O_Player_Thread_2_3"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[0].x, input[0].y)]},8);
});

}
var inputs_2 = [[{x: 1, y: 0}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 2, y: 2}, {x: 1, y: 2}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 2, y: 2}, {x: 1, y: 1}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 1, y: 0}],
[{x: 2, y: 2}, {x: 1, y: 2}, {x: 0, y: 2}, {x: 1, y: 2}, {x: 1, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 0, y: 2}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 0, y: 2}],
[{x: 1, y: 0}, {x: 0, y: 0}, {x: 0, y: 1}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 0, y: 2}]]
inputs_2.forEach(function (input) {
behaviorSet2(input);
});

function behaviorSet3(input) {
bp.registerBThread(""O_Player_Thread_3_1"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},8);
});

bp.registerBThread(""O_Player_Thread_3_2"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), O(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y)]},4);
});

bp.registerBThread(""O_Player_Thread_3_3"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y), X(input[2].x, input[2].y), O(input[1].x, input[1].y), X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y)]},10);
});

bp.registerBThread(""O_Player_Thread_3_4"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[1].x, input[1].y)]});
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},11);
});

bp.registerBThread(""O_Player_Thread_3_5"", function(){
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},10);
});

}
var inputs_3 = [[{x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}],
[{x: 1, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}],
[{x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 0}]]
inputs_3.forEach(function (input) {
behaviorSet3(input);
});

function behaviorSet4(input) {
bp.registerBThread(""O_Player_Thread_4_1"", function(){
bp.sync({waitFor:[O(input[4].x, input[4].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_4_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[3].x, input[3].y)]},8);
});

}
var inputs_4 = [[{x: 2, y: 0}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 2, y: 1}, {x: 1, y: 0}],
[{x: 2, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 0, y: 0}],
[{x: 0, y: 2}, {x: 1, y: 2}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 0, y: 0}],
[{x: 1, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 2, y: 0}, {x: 0, y: 0}],
[{x: 2, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 2, y: 2}]]
inputs_4.forEach(function (input) {
behaviorSet4(input);
});

function behaviorSet5(input) {
bp.registerBThread(""O_Player_Thread_5_1"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[1].x, input[1].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},3);
});

bp.registerBThread(""O_Player_Thread_5_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},9);
});

bp.registerBThread(""O_Player_Thread_5_3"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({waitFor:[X(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y), O(input[1].x, input[1].y)]},11);
});

}
var inputs_5 = [[{x: 1, y: 0}, {x: 1, y: 1}, {x: 1, y: 2}],
[{x: 2, y: 2}, {x: 0, y: 2}, {x: 2, y: 1}]]
inputs_5.forEach(function (input) {
behaviorSet5(input);
});

function behaviorSet6(input) {
bp.registerBThread(""O_Player_Thread_6_1"", function(){
bp.sync({waitFor:[O(input[1].x, input[1].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_6_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[1].x, input[1].y), O(input[1].x, input[1].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},10);
});

bp.registerBThread(""O_Player_Thread_6_3"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_6_4"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[1].x, input[1].y)]},3);
});

}
var inputs_6 = [[{x: 0, y: 2}, {x: 1, y: 0}],
[{x: 0, y: 0}, {x: 1, y: 2}]]
inputs_6.forEach(function (input) {
behaviorSet6(input);
});

function behaviorSet7(input) {
bp.registerBThread(""O_Player_Thread_7_1"", function(){
bp.sync({request:[O(input[4].x, input[4].y), O(input[3].x, input[3].y), O(input[1].x, input[1].y), O(input[4].x, input[4].y)]},2);
});

}
var inputs_7 = [[{x: 0, y: 1}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 1, y: 2}, {x: 1, y: 2}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 1, y: 2}],
[{x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 0, y: 2}],
[{x: 0, y: 1}, {x: 0, y: 2}, {x: 1, y: 1}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 2, y: 0}],
[{x: 1, y: 2}, {x: 0, y: 2}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 0, y: 0}, {x: 1, y: 2}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 2}, {x: 2, y: 1}]]
inputs_7.forEach(function (input) {
behaviorSet7(input);
});

function behaviorSet8(input) {
bp.registerBThread(""O_Player_Thread_8_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[0].x, input[0].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_8_2"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[1].x, input[1].y)]},4);
});

bp.registerBThread(""O_Player_Thread_8_3"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[1].x, input[1].y), O(input[0].x, input[0].y), X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[1].x, input[1].y)]},3);
});

}
var inputs_8 = [[{x: 1, y: 2}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 2, y: 2}],
[{x: 2, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}],
[{x: 0, y: 0}, {x: 2, y: 2}]]
inputs_8.forEach(function (input) {
behaviorSet8(input);
});

function behaviorSet9(input) {
bp.registerBThread(""O_Player_Thread_9_1"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y)]});
bp.sync({waitFor:[X(input[3].x, input[3].y), X(input[2].x, input[2].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},2);
});

bp.registerBThread(""O_Player_Thread_9_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y), O(input[2].x, input[2].y)]},8);
});

}
var inputs_9 = [[{x: 2, y: 0}, {x: 1, y: 2}, {x: 1, y: 2}, {x: 0, y: 1}],
[{x: 2, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}],
[{x: 0, y: 0}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 2, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}, {x: 1, y: 2}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}],
[{x: 1, y: 2}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 1, y: 0}]]
inputs_9.forEach(function (input) {
behaviorSet9(input);
});

function behaviorSet10(input) {
bp.registerBThread(""O_Player_Thread_10_1"", function(){
bp.sync({waitFor:[X(input[5].x, input[5].y)]});
bp.sync({waitFor:[O(input[3].x, input[3].y), O(input[6].x, input[6].y), X(input[2].x, input[2].y), X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[5].x, input[5].y), O(input[7].x, input[7].y)]},6);
});

bp.registerBThread(""O_Player_Thread_10_2"", function(){
bp.sync({request:[O(input[6].x, input[6].y)]},2);
});

bp.registerBThread(""O_Player_Thread_10_3"", function(){
bp.sync({waitFor:[X(input[7].x, input[7].y), O(input[3].x, input[3].y), O(input[6].x, input[6].y), O(input[5].x, input[5].y)]});
bp.sync({waitFor:[O(input[7].x, input[7].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[4].x, input[4].y), O(input[3].x, input[3].y), O(input[6].x, input[6].y), O(input[4].x, input[4].y)]},5);
});

bp.registerBThread(""O_Player_Thread_10_4"", function(){
bp.sync({waitFor:[X(input[4].x, input[4].y)]});
bp.sync({waitFor:[X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[4].x, input[4].y), O(input[7].x, input[7].y), O(input[3].x, input[3].y), O(input[2].x, input[2].y)]},9);
});

bp.registerBThread(""O_Player_Thread_10_5"", function(){
bp.sync({waitFor:[X(input[5].x, input[5].y), O(input[2].x, input[2].y), O(input[6].x, input[6].y)]});
bp.sync({request:[O(input[5].x, input[5].y), O(input[0].x, input[0].y), O(input[7].x, input[7].y)]},1);
});

}
var inputs_10 = [[{x: 1, y: 1}, {x: 0, y: 2}, {x: 1, y: 2}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 2}, {x: 0, y: 1}],
[{x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 1}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 0, y: 1}, {x: 2, y: 2}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 1}],
[{x: 1, y: 0}, {x: 1, y: 0}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}],
[{x: 0, y: 0}, {x: 1, y: 0}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 2, y: 2}, {x: 0, y: 0}],
[{x: 2, y: 1}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 1, y: 2}, {x: 2, y: 1}, {x: 0, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 2, y: 2}, {x: 2, y: 2}],
[{x: 0, y: 1}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 2, y: 0}, {x: 2, y: 2}]]
inputs_10.forEach(function (input) {
behaviorSet10(input);
});

"
45,7.0,1.0,33.4578313253012,19.0,0.0,31.0,59.0,31.0,24.0,0.0,23.0,"function behaviorSet1(input) {
bp.registerBThread(""O_Player_Thread_1_1"", function(){
bp.sync({waitFor:[X(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[5].x, input[5].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[2].x, input[2].y), O(input[3].x, input[3].y)]},9);
});

}
var inputs_1 = [[{x: 0, y: 1}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 1, y: 1}, {x: 2, y: 1}],
[{x: 0, y: 2}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 0}],
[{x: 1, y: 0}, {x: 1, y: 0}, {x: 2, y: 2}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 2}],
[{x: 1, y: 1}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 2}],
[{x: 1, y: 2}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 1, y: 2}],
[{x: 1, y: 2}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 1, y: 1}, {x: 0, y: 2}, {x: 2, y: 0}],
[{x: 1, y: 2}, {x: 2, y: 1}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 2}]]
inputs_1.forEach(function (input) {
behaviorSet1(input);
});

function behaviorSet2(input) {
bp.registerBThread(""O_Player_Thread_2_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[2].x, input[2].y), X(input[1].x, input[1].y), O(input[4].x, input[4].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[4].x, input[4].y), O(input[1].x, input[1].y)]},3);
});

}
var inputs_2 = [[{x: 1, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 2, y: 1}, {x: 0, y: 0}]]
inputs_2.forEach(function (input) {
behaviorSet2(input);
});

function behaviorSet3(input) {
bp.registerBThread(""O_Player_Thread_3_1"", function(){
bp.sync({waitFor:[O(input[1].x, input[1].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[1].x, input[1].y), O(input[2].x, input[2].y)]},7);
});

bp.registerBThread(""O_Player_Thread_3_2"", function(){
bp.sync({waitFor:[O(input[1].x, input[1].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[2].x, input[2].y)]},10);
});

bp.registerBThread(""O_Player_Thread_3_3"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y)]},4);
});

bp.registerBThread(""O_Player_Thread_3_4"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y), O(input[1].x, input[1].y)]});
bp.sync({waitFor:[X(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y), O(input[1].x, input[1].y)]},11);
});

}
var inputs_3 = [[{x: 0, y: 2}, {x: 2, y: 2}, {x: 2, y: 2}],
[{x: 2, y: 1}, {x: 0, y: 2}, {x: 1, y: 2}],
[{x: 2, y: 0}, {x: 2, y: 0}, {x: 1, y: 0}],
[{x: 2, y: 2}, {x: 1, y: 2}, {x: 0, y: 2}],
[{x: 2, y: 2}, {x: 0, y: 0}, {x: 2, y: 2}],
[{x: 0, y: 0}, {x: 1, y: 0}, {x: 0, y: 1}]]
inputs_3.forEach(function (input) {
behaviorSet3(input);
});

function behaviorSet4(input) {
bp.registerBThread(""O_Player_Thread_4_1"", function(){
bp.sync({request:[O(input[5].x, input[5].y), O(input[6].x, input[6].y), O(input[3].x, input[3].y)]},6);
});

}
var inputs_4 = [[{x: 0, y: 0}, {x: 1, y: 1}, {x: 2, y: 1}, {x: 1, y: 0}, {x: 1, y: 0}, {x: 2, y: 2}, {x: 2, y: 0}],
[{x: 1, y: 1}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 0, y: 1}, {x: 2, y: 0}, {x: 0, y: 2}]]
inputs_4.forEach(function (input) {
behaviorSet4(input);
});

function behaviorSet5(input) {
bp.registerBThread(""O_Player_Thread_5_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[0].x, input[0].y), X(input[2].x, input[2].y), X(input[6].x, input[6].y)]});
bp.sync({request:[O(input[5].x, input[5].y), O(input[0].x, input[0].y), O(input[4].x, input[4].y)]},9);
});

bp.registerBThread(""O_Player_Thread_5_2"", function(){
bp.sync({request:[O(input[0].x, input[0].y), O(input[6].x, input[6].y)]},7);
});

bp.registerBThread(""O_Player_Thread_5_3"", function(){
bp.sync({waitFor:[O(input[3].x, input[3].y), O(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[3].x, input[3].y)]});
bp.sync({request:[O(input[6].x, input[6].y), O(input[0].x, input[0].y), O(input[3].x, input[3].y), O(input[1].x, input[1].y)]},11);
});

bp.registerBThread(""O_Player_Thread_5_4"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), O(input[0].x, input[0].y)]});
bp.sync({waitFor:[O(input[6].x, input[6].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[2].x, input[2].y), O(input[1].x, input[1].y)]},2);
});

bp.registerBThread(""O_Player_Thread_5_5"", function(){
bp.sync({waitFor:[O(input[4].x, input[4].y), O(input[1].x, input[1].y), O(input[5].x, input[5].y), O(input[6].x, input[6].y)]});
bp.sync({request:[O(input[2].x, input[2].y)]},2);
});

}
var inputs_5 = [[{x: 0, y: 1}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 2}, {x: 1, y: 0}, {x: 1, y: 2}],
[{x: 2, y: 0}, {x: 0, y: 1}, {x: 0, y: 2}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 0, y: 0}, {x: 0, y: 2}],
[{x: 0, y: 0}, {x: 2, y: 0}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 1, y: 0}, {x: 0, y: 2}, {x: 2, y: 0}],
[{x: 2, y: 2}, {x: 0, y: 1}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 1, y: 0}, {x: 1, y: 2}],
[{x: 0, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 2, y: 2}]]
inputs_5.forEach(function (input) {
behaviorSet5(input);
});

function behaviorSet6(input) {
bp.registerBThread(""O_Player_Thread_6_1"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[1].x, input[1].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y)]},6);
});

bp.registerBThread(""O_Player_Thread_6_2"", function(){
bp.sync({request:[O(input[2].x, input[2].y)]},2);
});

bp.registerBThread(""O_Player_Thread_6_3"", function(){
bp.sync({request:[O(input[2].x, input[2].y), O(input[1].x, input[1].y), O(input[2].x, input[2].y)]},7);
});

bp.registerBThread(""O_Player_Thread_6_4"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[1].x, input[1].y)]},2);
});

}
var inputs_6 = [[{x: 0, y: 0}, {x: 0, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 2}, {x: 0, y: 2}]]
inputs_6.forEach(function (input) {
behaviorSet6(input);
});

function behaviorSet7(input) {
bp.registerBThread(""O_Player_Thread_7_1"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y), X(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[3].x, input[3].y)]},3);
});

bp.registerBThread(""O_Player_Thread_7_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[3].x, input[3].y)]},7);
});

bp.registerBThread(""O_Player_Thread_7_3"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[3].x, input[3].y)]},11);
});

bp.registerBThread(""O_Player_Thread_7_4"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[3].x, input[3].y)]},5);
});

}
var inputs_7 = [[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 2, y: 2}],
[{x: 1, y: 0}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 1, y: 1}],
[{x: 0, y: 0}, {x: 2, y: 2}, {x: 0, y: 2}, {x: 1, y: 0}],
[{x: 1, y: 0}, {x: 1, y: 0}, {x: 0, y: 0}, {x: 2, y: 2}],
[{x: 1, y: 2}, {x: 0, y: 0}, {x: 2, y: 2}, {x: 2, y: 1}],
[{x: 2, y: 1}, {x: 0, y: 0}, {x: 0, y: 0}, {x: 0, y: 2}]]
inputs_7.forEach(function (input) {
behaviorSet7(input);
});

function behaviorSet8(input) {
bp.registerBThread(""O_Player_Thread_8_1"", function(){
bp.sync({waitFor:[X(input[4].x, input[4].y)]});
bp.sync({waitFor:[X(input[3].x, input[3].y), O(input[4].x, input[4].y), X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[2].x, input[2].y)]},6);
});

bp.registerBThread(""O_Player_Thread_8_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[4].x, input[4].y)]},8);
});

bp.registerBThread(""O_Player_Thread_8_3"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y), O(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[4].x, input[4].y)]});
bp.sync({waitFor:[O(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[3].x, input[3].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[4].x, input[4].y), O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[4].x, input[4].y)]},6);
});

}
var inputs_8 = [[{x: 2, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 0, y: 0}],
[{x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 2}]]
inputs_8.forEach(function (input) {
behaviorSet8(input);
});

function behaviorSet9(input) {
bp.registerBThread(""O_Player_Thread_9_1"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},9);
});

bp.registerBThread(""O_Player_Thread_9_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},2);
});

bp.registerBThread(""O_Player_Thread_9_3"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y), O(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},1);
});

bp.registerBThread(""O_Player_Thread_9_4"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), O(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y), O(input[0].x, input[0].y), X(input[0].x, input[0].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},3);
});

}
var inputs_9 = [[{x: 0, y: 0}],
[{x: 1, y: 1}],
[{x: 0, y: 0}],
[{x: 2, y: 1}]]
inputs_9.forEach(function (input) {
behaviorSet9(input);
});

function behaviorSet10(input) {
bp.registerBThread(""O_Player_Thread_10_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y)]},9);
});

bp.registerBThread(""O_Player_Thread_10_2"", function(){
bp.sync({request:[O(input[0].x, input[0].y)]},1);
});

}
var inputs_10 = [[{x: 0, y: 0}, {x: 0, y: 1}, {x: 1, y: 0}],
[{x: 2, y: 1}, {x: 2, y: 0}, {x: 2, y: 2}],
[{x: 0, y: 2}, {x: 0, y: 2}, {x: 1, y: 0}],
[{x: 2, y: 1}, {x: 1, y: 2}, {x: 0, y: 0}],
[{x: 0, y: 2}, {x: 0, y: 0}, {x: 2, y: 2}],
[{x: 2, y: 2}, {x: 1, y: 0}, {x: 0, y: 0}],
[{x: 1, y: 2}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 2}, {x: 2, y: 1}, {x: 2, y: 0}]]
inputs_10.forEach(function (input) {
behaviorSet10(input);
});

"
46,7.0,4.0,41.33663366336634,16.0,5.0,29.0,68.0,16.0,33.0,0.0,10.0,"function behaviorSet1(input) {
bp.registerBThread(""O_Player_Thread_1_1"", function(){
bp.sync({waitFor:[O(input[5].x, input[5].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[5].x, input[5].y)]},2);
});

}
var inputs_1 = [[{x: 0, y: 1}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 0, y: 2}, {x: 1, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 0}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 1, y: 0}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 2, y: 1}],
[{x: 0, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 1}],
[{x: 1, y: 1}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 1}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 1, y: 0}, {x: 0, y: 2}]]
inputs_1.forEach(function (input) {
behaviorSet1(input);
});

function behaviorSet2(input) {
bp.registerBThread(""O_Player_Thread_2_1"", function(){
bp.sync({request:[O(input[6].x, input[6].y), O(input[3].x, input[3].y), O(input[2].x, input[2].y), O(input[2].x, input[2].y)]},4);
});

bp.registerBThread(""O_Player_Thread_2_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[5].x, input[5].y), X(input[7].x, input[7].y)]});
bp.sync({request:[O(input[7].x, input[7].y)]},2);
});

bp.registerBThread(""O_Player_Thread_2_3"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[0].x, input[0].y)]},8);
});

}
var inputs_2 = [[{x: 1, y: 0}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 2, y: 2}, {x: 1, y: 2}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 2, y: 2}, {x: 1, y: 1}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 1, y: 0}],
[{x: 2, y: 2}, {x: 1, y: 2}, {x: 0, y: 2}, {x: 1, y: 2}, {x: 1, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 0, y: 2}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 0, y: 2}],
[{x: 1, y: 0}, {x: 0, y: 0}, {x: 0, y: 1}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 0, y: 2}]]
inputs_2.forEach(function (input) {
behaviorSet2(input);
});

function behaviorSet3(input) {
bp.registerBThread(""O_Player_Thread_3_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y)]},9);
});

bp.registerBThread(""O_Player_Thread_3_2"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), O(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y)]},4);
});

bp.registerBThread(""O_Player_Thread_3_3"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y), X(input[2].x, input[2].y), O(input[1].x, input[1].y), X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y)]},10);
});

bp.registerBThread(""O_Player_Thread_3_4"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[1].x, input[1].y)]});
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},11);
});

bp.registerBThread(""O_Player_Thread_3_5"", function(){
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},10);
});

}
var inputs_3 = [[{x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}],
[{x: 1, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}],
[{x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 0}]]
inputs_3.forEach(function (input) {
behaviorSet3(input);
});

function behaviorSet4(input) {
bp.registerBThread(""O_Player_Thread_4_1"", function(){
bp.sync({waitFor:[O(input[4].x, input[4].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_4_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[3].x, input[3].y)]},8);
});

}
var inputs_4 = [[{x: 2, y: 0}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 2, y: 1}, {x: 1, y: 0}],
[{x: 2, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 0, y: 0}],
[{x: 0, y: 2}, {x: 1, y: 2}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 0, y: 0}],
[{x: 1, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 2, y: 0}, {x: 0, y: 0}],
[{x: 2, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 2, y: 2}]]
inputs_4.forEach(function (input) {
behaviorSet4(input);
});

function behaviorSet5(input) {
bp.registerBThread(""O_Player_Thread_5_1"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[1].x, input[1].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},3);
});

bp.registerBThread(""O_Player_Thread_5_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},9);
});

bp.registerBThread(""O_Player_Thread_5_3"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({waitFor:[X(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y), O(input[1].x, input[1].y)]},11);
});

}
var inputs_5 = [[{x: 1, y: 0}, {x: 1, y: 1}, {x: 1, y: 2}],
[{x: 2, y: 2}, {x: 0, y: 2}, {x: 2, y: 1}]]
inputs_5.forEach(function (input) {
behaviorSet5(input);
});

function behaviorSet6(input) {
bp.registerBThread(""O_Player_Thread_6_1"", function(){
bp.sync({waitFor:[O(input[1].x, input[1].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_6_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[1].x, input[1].y), O(input[1].x, input[1].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},10);
});

bp.registerBThread(""O_Player_Thread_6_3"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_6_4"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[1].x, input[1].y)]},3);
});

}
var inputs_6 = [[{x: 0, y: 2}, {x: 1, y: 0}],
[{x: 0, y: 0}, {x: 1, y: 2}]]
inputs_6.forEach(function (input) {
behaviorSet6(input);
});

function behaviorSet7(input) {
bp.registerBThread(""O_Player_Thread_7_1"", function(){
bp.sync({request:[O(input[4].x, input[4].y), O(input[3].x, input[3].y), O(input[1].x, input[1].y), O(input[4].x, input[4].y)]},2);
});

}
var inputs_7 = [[{x: 0, y: 1}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 1, y: 2}, {x: 1, y: 2}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 1, y: 2}],
[{x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 0, y: 2}],
[{x: 0, y: 1}, {x: 0, y: 2}, {x: 1, y: 1}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 2, y: 0}],
[{x: 1, y: 2}, {x: 0, y: 2}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 0, y: 0}, {x: 1, y: 2}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 2}, {x: 2, y: 1}]]
inputs_7.forEach(function (input) {
behaviorSet7(input);
});

function behaviorSet8(input) {
bp.registerBThread(""O_Player_Thread_8_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[0].x, input[0].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_8_2"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[1].x, input[1].y)]},4);
});

bp.registerBThread(""O_Player_Thread_8_3"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[1].x, input[1].y), O(input[0].x, input[0].y), X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[1].x, input[1].y)]},3);
});

}
var inputs_8 = [[{x: 1, y: 2}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 2, y: 2}],
[{x: 2, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}],
[{x: 0, y: 0}, {x: 2, y: 2}]]
inputs_8.forEach(function (input) {
behaviorSet8(input);
});

function behaviorSet9(input) {
bp.registerBThread(""O_Player_Thread_9_1"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y)]});
bp.sync({waitFor:[X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},2);
});

bp.registerBThread(""O_Player_Thread_9_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y), O(input[2].x, input[2].y)]},8);
});

}
var inputs_9 = [[{x: 2, y: 0}, {x: 1, y: 2}, {x: 1, y: 2}, {x: 0, y: 1}],
[{x: 2, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}],
[{x: 0, y: 0}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 2, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}, {x: 1, y: 2}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}],
[{x: 1, y: 2}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 1, y: 0}]]
inputs_9.forEach(function (input) {
behaviorSet9(input);
});

function behaviorSet10(input) {
bp.registerBThread(""O_Player_Thread_10_1"", function(){
bp.sync({waitFor:[X(input[5].x, input[5].y)]});
bp.sync({waitFor:[O(input[3].x, input[3].y), O(input[6].x, input[6].y), X(input[2].x, input[2].y), X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[5].x, input[5].y), O(input[7].x, input[7].y)]},6);
});

bp.registerBThread(""O_Player_Thread_10_2"", function(){
bp.sync({request:[O(input[6].x, input[6].y)]},2);
});

bp.registerBThread(""O_Player_Thread_10_3"", function(){
bp.sync({waitFor:[X(input[7].x, input[7].y), O(input[3].x, input[3].y), O(input[6].x, input[6].y), O(input[5].x, input[5].y)]});
bp.sync({waitFor:[O(input[7].x, input[7].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[4].x, input[4].y), O(input[3].x, input[3].y), O(input[6].x, input[6].y), O(input[4].x, input[4].y)]},5);
});

bp.registerBThread(""O_Player_Thread_10_4"", function(){
bp.sync({waitFor:[X(input[4].x, input[4].y)]});
bp.sync({waitFor:[X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[4].x, input[4].y), O(input[7].x, input[7].y), O(input[3].x, input[3].y), O(input[2].x, input[2].y)]},9);
});

bp.registerBThread(""O_Player_Thread_10_5"", function(){
bp.sync({waitFor:[X(input[5].x, input[5].y), O(input[2].x, input[2].y), O(input[6].x, input[6].y)]});
bp.sync({request:[O(input[5].x, input[5].y), O(input[0].x, input[0].y), O(input[7].x, input[7].y)]},1);
});

}
var inputs_10 = [[{x: 1, y: 1}, {x: 0, y: 2}, {x: 1, y: 2}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 2}, {x: 0, y: 1}],
[{x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 1}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 0, y: 1}, {x: 2, y: 2}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 1}],
[{x: 1, y: 0}, {x: 1, y: 0}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}],
[{x: 0, y: 0}, {x: 1, y: 0}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 2, y: 2}, {x: 0, y: 0}],
[{x: 2, y: 1}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 1, y: 2}, {x: 2, y: 1}, {x: 0, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 2, y: 2}, {x: 2, y: 2}],
[{x: 0, y: 1}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 2, y: 0}, {x: 2, y: 2}]]
inputs_10.forEach(function (input) {
behaviorSet10(input);
});

"
47,7.0,3.0,42.5531914893617,15.0,8.0,27.0,61.0,15.0,33.0,0.0,15.0,"function behaviorSet1(input) {
bp.registerBThread(""O_Player_Thread_1_1"", function(){
bp.sync({waitFor:[O(input[5].x, input[5].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[5].x, input[5].y)]},2);
});

}
var inputs_1 = [[{x: 0, y: 1}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 0, y: 2}, {x: 1, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 0}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 1, y: 0}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 2, y: 1}],
[{x: 0, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 1}],
[{x: 1, y: 1}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 1}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 1, y: 0}, {x: 0, y: 2}]]
inputs_1.forEach(function (input) {
behaviorSet1(input);
});

function behaviorSet2(input) {
bp.registerBThread(""O_Player_Thread_2_1"", function(){
bp.sync({request:[O(input[6].x, input[6].y), O(input[3].x, input[3].y), O(input[2].x, input[2].y), O(input[2].x, input[2].y)]},4);
});

bp.registerBThread(""O_Player_Thread_2_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[5].x, input[5].y), X(input[7].x, input[7].y)]});
bp.sync({request:[O(input[7].x, input[7].y)]},2);
});

bp.registerBThread(""O_Player_Thread_2_3"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[0].x, input[0].y)]},8);
});

}
var inputs_2 = [[{x: 1, y: 0}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 2, y: 2}, {x: 1, y: 2}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 2, y: 2}, {x: 1, y: 1}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 1, y: 0}],
[{x: 2, y: 2}, {x: 1, y: 2}, {x: 0, y: 2}, {x: 1, y: 2}, {x: 1, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 0, y: 2}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 0, y: 2}],
[{x: 1, y: 0}, {x: 0, y: 0}, {x: 0, y: 1}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 0, y: 2}]]
inputs_2.forEach(function (input) {
behaviorSet2(input);
});

function behaviorSet3(input) {
bp.registerBThread(""O_Player_Thread_3_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y)]},9);
});

bp.registerBThread(""O_Player_Thread_3_2"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), O(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y)]},4);
});

bp.registerBThread(""O_Player_Thread_3_3"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y), X(input[2].x, input[2].y), O(input[1].x, input[1].y), X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y)]},10);
});

bp.registerBThread(""O_Player_Thread_3_4"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[1].x, input[1].y)]});
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},11);
});

bp.registerBThread(""O_Player_Thread_3_5"", function(){
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},10);
});

}
var inputs_3 = [[{x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}],
[{x: 1, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}],
[{x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 0}]]
inputs_3.forEach(function (input) {
behaviorSet3(input);
});

function behaviorSet4(input) {
bp.registerBThread(""O_Player_Thread_4_1"", function(){
bp.sync({waitFor:[O(input[4].x, input[4].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_4_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[3].x, input[3].y)]},8);
});

}
var inputs_4 = [[{x: 2, y: 0}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 2, y: 1}, {x: 1, y: 0}],
[{x: 0, y: 1}, {x: 2, y: 0}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}],
[{x: 0, y: 2}, {x: 1, y: 2}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 0, y: 0}],
[{x: 1, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 2, y: 0}, {x: 0, y: 0}],
[{x: 2, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 2, y: 2}]]
inputs_4.forEach(function (input) {
behaviorSet4(input);
});

function behaviorSet5(input) {
bp.registerBThread(""O_Player_Thread_5_1"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[1].x, input[1].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},3);
});

bp.registerBThread(""O_Player_Thread_5_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},9);
});

bp.registerBThread(""O_Player_Thread_5_3"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({waitFor:[X(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y), O(input[1].x, input[1].y)]},11);
});

}
var inputs_5 = [[{x: 1, y: 0}, {x: 1, y: 1}, {x: 1, y: 2}],
[{x: 2, y: 2}, {x: 0, y: 2}, {x: 2, y: 1}]]
inputs_5.forEach(function (input) {
behaviorSet5(input);
});

function behaviorSet6(input) {
bp.registerBThread(""O_Player_Thread_6_1"", function(){
bp.sync({waitFor:[O(input[1].x, input[1].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_6_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[1].x, input[1].y), O(input[1].x, input[1].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},10);
});

bp.registerBThread(""O_Player_Thread_6_3"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_6_4"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[1].x, input[1].y)]},3);
});

}
var inputs_6 = [[{x: 0, y: 2}, {x: 1, y: 0}],
[{x: 0, y: 0}, {x: 1, y: 2}]]
inputs_6.forEach(function (input) {
behaviorSet6(input);
});

function behaviorSet7(input) {
bp.registerBThread(""O_Player_Thread_7_1"", function(){
bp.sync({request:[O(input[4].x, input[4].y), O(input[3].x, input[3].y), O(input[1].x, input[1].y), O(input[4].x, input[4].y)]},2);
});

}
var inputs_7 = [[{x: 0, y: 1}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 1, y: 2}, {x: 1, y: 2}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 1, y: 2}],
[{x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 0, y: 2}],
[{x: 0, y: 1}, {x: 0, y: 2}, {x: 1, y: 1}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 2, y: 0}],
[{x: 1, y: 2}, {x: 0, y: 2}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 0, y: 0}, {x: 1, y: 2}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 2}, {x: 2, y: 1}]]
inputs_7.forEach(function (input) {
behaviorSet7(input);
});

function behaviorSet8(input) {
bp.registerBThread(""O_Player_Thread_8_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[0].x, input[0].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_8_2"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[1].x, input[1].y)]},4);
});

bp.registerBThread(""O_Player_Thread_8_3"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[1].x, input[1].y), O(input[0].x, input[0].y), X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[1].x, input[1].y)]},3);
});

}
var inputs_8 = [[{x: 1, y: 2}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 2, y: 2}],
[{x: 2, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}],
[{x: 0, y: 0}, {x: 2, y: 2}]]
inputs_8.forEach(function (input) {
behaviorSet8(input);
});

function behaviorSet9(input) {
bp.registerBThread(""O_Player_Thread_9_1"", function(){
bp.sync({waitFor:[X(input[3].x, input[3].y), X(input[2].x, input[2].y), O(input[2].x, input[2].y)]});
bp.sync({waitFor:[X(input[3].x, input[3].y), X(input[2].x, input[2].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},2);
});

bp.registerBThread(""O_Player_Thread_9_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y), O(input[2].x, input[2].y)]},8);
});

}
var inputs_9 = [[{x: 2, y: 0}, {x: 1, y: 2}, {x: 1, y: 2}, {x: 0, y: 1}],
[{x: 2, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}],
[{x: 0, y: 0}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 2, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}, {x: 1, y: 2}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}],
[{x: 1, y: 2}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 1, y: 0}]]
inputs_9.forEach(function (input) {
behaviorSet9(input);
});

function behaviorSet10(input) {
bp.registerBThread(""O_Player_Thread_10_1"", function(){
bp.sync({waitFor:[X(input[5].x, input[5].y)]});
bp.sync({waitFor:[O(input[3].x, input[3].y), O(input[6].x, input[6].y), X(input[2].x, input[2].y), X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[5].x, input[5].y), O(input[7].x, input[7].y)]},6);
});

bp.registerBThread(""O_Player_Thread_10_2"", function(){
bp.sync({request:[O(input[6].x, input[6].y)]},2);
});

bp.registerBThread(""O_Player_Thread_10_3"", function(){
bp.sync({waitFor:[X(input[7].x, input[7].y), O(input[3].x, input[3].y), O(input[6].x, input[6].y), O(input[5].x, input[5].y)]});
bp.sync({waitFor:[O(input[7].x, input[7].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[4].x, input[4].y), O(input[3].x, input[3].y), O(input[6].x, input[6].y), O(input[4].x, input[4].y)]},5);
});

bp.registerBThread(""O_Player_Thread_10_4"", function(){
bp.sync({waitFor:[X(input[4].x, input[4].y)]});
bp.sync({waitFor:[X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[4].x, input[4].y), O(input[7].x, input[7].y), O(input[3].x, input[3].y), O(input[2].x, input[2].y)]},9);
});

bp.registerBThread(""O_Player_Thread_10_5"", function(){
bp.sync({waitFor:[X(input[5].x, input[5].y), O(input[2].x, input[2].y), O(input[6].x, input[6].y)]});
bp.sync({request:[O(input[5].x, input[5].y), O(input[0].x, input[0].y), O(input[7].x, input[7].y)]},1);
});

}
var inputs_10 = [[{x: 1, y: 1}, {x: 0, y: 2}, {x: 1, y: 2}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 2}, {x: 0, y: 1}],
[{x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 1}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 0, y: 1}, {x: 2, y: 2}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 1}],
[{x: 1, y: 0}, {x: 1, y: 0}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}],
[{x: 0, y: 0}, {x: 1, y: 0}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 2, y: 2}, {x: 0, y: 0}],
[{x: 2, y: 1}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 1, y: 2}, {x: 2, y: 1}, {x: 0, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 2, y: 2}, {x: 2, y: 2}],
[{x: 0, y: 1}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 2, y: 0}, {x: 2, y: 2}]]
inputs_10.forEach(function (input) {
behaviorSet10(input);
});

"
48,8.0,1.0,50.09469696969697,20.0,1.0,29.0,58.0,13.0,38.0,0.0,18.0,"function behaviorSet1(input) {
bp.registerBThread(""O_Player_Thread_1_1"", function(){
bp.sync({waitFor:[O(input[5].x, input[5].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[5].x, input[5].y)]},2);
});

}
var inputs_1 = [[{x: 0, y: 1}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 0, y: 2}, {x: 1, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 0}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 1, y: 0}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 2, y: 1}],
[{x: 0, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 1}],
[{x: 1, y: 1}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 1}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 1, y: 0}, {x: 0, y: 2}]]
inputs_1.forEach(function (input) {
behaviorSet1(input);
});

function behaviorSet2(input) {
bp.registerBThread(""O_Player_Thread_2_1"", function(){
bp.sync({request:[O(input[6].x, input[6].y), O(input[3].x, input[3].y), O(input[2].x, input[2].y), O(input[2].x, input[2].y)]},4);
});

bp.registerBThread(""O_Player_Thread_2_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[5].x, input[5].y), X(input[7].x, input[7].y)]});
bp.sync({request:[O(input[7].x, input[7].y)]},2);
});

bp.registerBThread(""O_Player_Thread_2_3"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[0].x, input[0].y)]},8);
});

}
var inputs_2 = [[{x: 1, y: 0}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 2, y: 2}, {x: 1, y: 2}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 2, y: 2}, {x: 1, y: 1}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 1, y: 0}],
[{x: 2, y: 2}, {x: 1, y: 2}, {x: 0, y: 2}, {x: 1, y: 2}, {x: 1, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 0, y: 2}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 0, y: 2}],
[{x: 1, y: 0}, {x: 0, y: 0}, {x: 0, y: 1}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 0, y: 2}]]
inputs_2.forEach(function (input) {
behaviorSet2(input);
});

function behaviorSet3(input) {
bp.registerBThread(""O_Player_Thread_3_1"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},8);
});

bp.registerBThread(""O_Player_Thread_3_2"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), O(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y)]},4);
});

bp.registerBThread(""O_Player_Thread_3_3"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y), X(input[2].x, input[2].y), O(input[1].x, input[1].y), X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y)]},10);
});

bp.registerBThread(""O_Player_Thread_3_4"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[1].x, input[1].y)]});
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},11);
});

bp.registerBThread(""O_Player_Thread_3_5"", function(){
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},10);
});

}
var inputs_3 = [[{x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}],
[{x: 1, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}],
[{x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 0}]]
inputs_3.forEach(function (input) {
behaviorSet3(input);
});

function behaviorSet4(input) {
bp.registerBThread(""O_Player_Thread_4_1"", function(){
bp.sync({waitFor:[O(input[4].x, input[4].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_4_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[3].x, input[3].y)]},8);
});

}
var inputs_4 = [[{x: 2, y: 0}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 2, y: 1}, {x: 1, y: 0}],
[{x: 2, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 0, y: 0}],
[{x: 0, y: 2}, {x: 1, y: 2}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 0, y: 0}],
[{x: 1, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 2, y: 0}, {x: 0, y: 0}],
[{x: 2, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 2, y: 2}]]
inputs_4.forEach(function (input) {
behaviorSet4(input);
});

function behaviorSet5(input) {
bp.registerBThread(""O_Player_Thread_5_1"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[1].x, input[1].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},3);
});

bp.registerBThread(""O_Player_Thread_5_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},9);
});

bp.registerBThread(""O_Player_Thread_5_3"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({waitFor:[X(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y), O(input[1].x, input[1].y)]},11);
});

}
var inputs_5 = [[{x: 1, y: 0}, {x: 1, y: 1}, {x: 1, y: 2}],
[{x: 2, y: 2}, {x: 0, y: 2}, {x: 2, y: 1}]]
inputs_5.forEach(function (input) {
behaviorSet5(input);
});

function behaviorSet6(input) {
bp.registerBThread(""O_Player_Thread_6_1"", function(){
bp.sync({waitFor:[O(input[1].x, input[1].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_6_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[1].x, input[1].y), O(input[1].x, input[1].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},10);
});

bp.registerBThread(""O_Player_Thread_6_3"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_6_4"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[1].x, input[1].y)]},3);
});

}
var inputs_6 = [[{x: 0, y: 2}, {x: 1, y: 0}],
[{x: 0, y: 0}, {x: 1, y: 2}]]
inputs_6.forEach(function (input) {
behaviorSet6(input);
});

function behaviorSet7(input) {
bp.registerBThread(""O_Player_Thread_7_1"", function(){
bp.sync({request:[O(input[4].x, input[4].y), O(input[3].x, input[3].y), O(input[1].x, input[1].y), O(input[4].x, input[4].y)]},2);
});

}
var inputs_7 = [[{x: 0, y: 1}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 1, y: 2}, {x: 1, y: 2}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 1, y: 2}],
[{x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 0, y: 2}],
[{x: 0, y: 1}, {x: 0, y: 2}, {x: 1, y: 1}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 2, y: 0}],
[{x: 1, y: 2}, {x: 0, y: 2}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 0, y: 0}, {x: 1, y: 2}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 2}, {x: 2, y: 1}]]
inputs_7.forEach(function (input) {
behaviorSet7(input);
});

function behaviorSet8(input) {
bp.registerBThread(""O_Player_Thread_8_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[0].x, input[0].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_8_2"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[1].x, input[1].y)]},4);
});

bp.registerBThread(""O_Player_Thread_8_3"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[1].x, input[1].y), O(input[0].x, input[0].y), X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[1].x, input[1].y)]},3);
});

}
var inputs_8 = [[{x: 1, y: 2}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 2, y: 2}],
[{x: 2, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}],
[{x: 0, y: 0}, {x: 2, y: 2}]]
inputs_8.forEach(function (input) {
behaviorSet8(input);
});

function behaviorSet9(input) {
bp.registerBThread(""O_Player_Thread_9_1"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y)]});
bp.sync({waitFor:[X(input[3].x, input[3].y), X(input[2].x, input[2].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},2);
});

bp.registerBThread(""O_Player_Thread_9_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y), O(input[2].x, input[2].y)]},8);
});

}
var inputs_9 = [[{x: 2, y: 0}, {x: 1, y: 2}, {x: 1, y: 2}, {x: 0, y: 1}],
[{x: 2, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}],
[{x: 0, y: 0}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 2, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}, {x: 1, y: 2}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}],
[{x: 1, y: 2}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 1, y: 0}]]
inputs_9.forEach(function (input) {
behaviorSet9(input);
});

function behaviorSet10(input) {
bp.registerBThread(""O_Player_Thread_10_1"", function(){
bp.sync({waitFor:[X(input[5].x, input[5].y)]});
bp.sync({waitFor:[O(input[3].x, input[3].y), O(input[6].x, input[6].y), X(input[2].x, input[2].y), X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[5].x, input[5].y), O(input[7].x, input[7].y)]},6);
});

bp.registerBThread(""O_Player_Thread_10_2"", function(){
bp.sync({request:[O(input[6].x, input[6].y)]},2);
});

bp.registerBThread(""O_Player_Thread_10_3"", function(){
bp.sync({waitFor:[X(input[7].x, input[7].y), O(input[3].x, input[3].y), O(input[6].x, input[6].y), O(input[5].x, input[5].y)]});
bp.sync({waitFor:[O(input[7].x, input[7].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[4].x, input[4].y), O(input[3].x, input[3].y), O(input[6].x, input[6].y), O(input[4].x, input[4].y)]},5);
});

bp.registerBThread(""O_Player_Thread_10_4"", function(){
bp.sync({waitFor:[X(input[4].x, input[4].y)]});
bp.sync({waitFor:[X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[4].x, input[4].y), O(input[7].x, input[7].y), O(input[3].x, input[3].y), O(input[2].x, input[2].y)]},9);
});

bp.registerBThread(""O_Player_Thread_10_5"", function(){
bp.sync({waitFor:[X(input[5].x, input[5].y), O(input[2].x, input[2].y), O(input[6].x, input[6].y)]});
bp.sync({request:[O(input[5].x, input[5].y), O(input[0].x, input[0].y), O(input[7].x, input[7].y)]},1);
});

}
var inputs_10 = [[{x: 1, y: 1}, {x: 0, y: 2}, {x: 1, y: 2}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 2}, {x: 0, y: 1}],
[{x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 1}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 0, y: 1}, {x: 2, y: 2}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 1}],
[{x: 1, y: 0}, {x: 1, y: 0}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}],
[{x: 0, y: 0}, {x: 1, y: 0}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 2, y: 2}, {x: 0, y: 0}],
[{x: 2, y: 1}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 1, y: 2}, {x: 2, y: 1}, {x: 0, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 2, y: 2}, {x: 2, y: 2}],
[{x: 0, y: 1}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 2, y: 0}, {x: 2, y: 2}]]
inputs_10.forEach(function (input) {
behaviorSet10(input);
});

"
49,8.0,2.0,42.289964382987634,17.0,6.0,27.0,61.0,26.0,50.0,0.0,12.0,"function behaviorSet1(input) {
bp.registerBThread(""O_Player_Thread_1_1"", function(){
bp.sync({waitFor:[O(input[5].x, input[5].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[5].x, input[5].y)]},2);
});

}
var inputs_1 = [[{x: 0, y: 1}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 0, y: 2}, {x: 1, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 0}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 1, y: 0}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 2, y: 1}],
[{x: 0, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 1}],
[{x: 1, y: 1}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 1}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 1, y: 0}, {x: 0, y: 2}]]
inputs_1.forEach(function (input) {
behaviorSet1(input);
});

function behaviorSet2(input) {
bp.registerBThread(""O_Player_Thread_2_1"", function(){
bp.sync({request:[O(input[6].x, input[6].y), O(input[3].x, input[3].y), O(input[2].x, input[2].y), O(input[2].x, input[2].y)]},4);
});

bp.registerBThread(""O_Player_Thread_2_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[5].x, input[5].y), X(input[7].x, input[7].y)]});
bp.sync({request:[O(input[7].x, input[7].y)]},2);
});

bp.registerBThread(""O_Player_Thread_2_3"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[0].x, input[0].y)]},8);
});

}
var inputs_2 = [[{x: 1, y: 0}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 2, y: 2}, {x: 1, y: 2}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 2, y: 2}, {x: 1, y: 1}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 1, y: 0}],
[{x: 2, y: 2}, {x: 1, y: 2}, {x: 0, y: 2}, {x: 1, y: 2}, {x: 1, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 0, y: 2}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 0, y: 2}],
[{x: 1, y: 0}, {x: 0, y: 0}, {x: 0, y: 1}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 0, y: 2}]]
inputs_2.forEach(function (input) {
behaviorSet2(input);
});

function behaviorSet3(input) {
bp.registerBThread(""O_Player_Thread_3_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y)]},9);
});

bp.registerBThread(""O_Player_Thread_3_2"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), O(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y)]},4);
});

bp.registerBThread(""O_Player_Thread_3_3"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y), X(input[2].x, input[2].y), O(input[1].x, input[1].y), X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y)]},10);
});

bp.registerBThread(""O_Player_Thread_3_4"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[1].x, input[1].y)]});
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},11);
});

bp.registerBThread(""O_Player_Thread_3_5"", function(){
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},10);
});

}
var inputs_3 = [[{x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}],
[{x: 1, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}],
[{x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 0}]]
inputs_3.forEach(function (input) {
behaviorSet3(input);
});

function behaviorSet4(input) {
bp.registerBThread(""O_Player_Thread_4_1"", function(){
bp.sync({waitFor:[O(input[4].x, input[4].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_4_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[3].x, input[3].y)]},8);
});

}
var inputs_4 = [[{x: 2, y: 0}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 2, y: 1}, {x: 1, y: 0}],
[{x: 2, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 0, y: 0}],
[{x: 0, y: 2}, {x: 1, y: 2}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 0, y: 0}],
[{x: 1, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 2, y: 0}, {x: 0, y: 0}],
[{x: 2, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 2, y: 2}]]
inputs_4.forEach(function (input) {
behaviorSet4(input);
});

function behaviorSet5(input) {
bp.registerBThread(""O_Player_Thread_5_1"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[1].x, input[1].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},3);
});

bp.registerBThread(""O_Player_Thread_5_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},9);
});

bp.registerBThread(""O_Player_Thread_5_3"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({waitFor:[X(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y), O(input[1].x, input[1].y)]},11);
});

}
var inputs_5 = [[{x: 1, y: 0}, {x: 1, y: 1}, {x: 1, y: 2}],
[{x: 2, y: 2}, {x: 0, y: 2}, {x: 2, y: 1}]]
inputs_5.forEach(function (input) {
behaviorSet5(input);
});

function behaviorSet6(input) {
bp.registerBThread(""O_Player_Thread_6_1"", function(){
bp.sync({waitFor:[O(input[1].x, input[1].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_6_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[1].x, input[1].y), O(input[1].x, input[1].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},10);
});

bp.registerBThread(""O_Player_Thread_6_3"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_6_4"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[1].x, input[1].y)]},3);
});

}
var inputs_6 = [[{x: 0, y: 2}, {x: 1, y: 0}],
[{x: 0, y: 0}, {x: 1, y: 2}]]
inputs_6.forEach(function (input) {
behaviorSet6(input);
});

function behaviorSet7(input) {
bp.registerBThread(""O_Player_Thread_7_1"", function(){
bp.sync({request:[O(input[4].x, input[4].y), O(input[3].x, input[3].y), O(input[1].x, input[1].y), O(input[4].x, input[4].y)]},2);
});

}
var inputs_7 = [[{x: 0, y: 1}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 1, y: 2}, {x: 1, y: 2}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 1, y: 2}],
[{x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 0, y: 2}],
[{x: 0, y: 1}, {x: 0, y: 2}, {x: 1, y: 1}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 2, y: 0}],
[{x: 1, y: 2}, {x: 0, y: 2}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 0, y: 0}, {x: 1, y: 2}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 2}, {x: 2, y: 1}]]
inputs_7.forEach(function (input) {
behaviorSet7(input);
});

function behaviorSet8(input) {
bp.registerBThread(""O_Player_Thread_8_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[0].x, input[0].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_8_2"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[1].x, input[1].y)]},4);
});

bp.registerBThread(""O_Player_Thread_8_3"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[1].x, input[1].y), O(input[0].x, input[0].y), X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[1].x, input[1].y)]},3);
});

}
var inputs_8 = [[{x: 1, y: 2}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 2, y: 2}],
[{x: 2, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}],
[{x: 0, y: 0}, {x: 2, y: 2}]]
inputs_8.forEach(function (input) {
behaviorSet8(input);
});

function behaviorSet9(input) {
bp.registerBThread(""O_Player_Thread_9_1"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y)]});
bp.sync({waitFor:[X(input[3].x, input[3].y), X(input[2].x, input[2].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},2);
});

bp.registerBThread(""O_Player_Thread_9_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y), O(input[2].x, input[2].y)]},8);
});

}
var inputs_9 = [[{x: 2, y: 0}, {x: 1, y: 2}, {x: 1, y: 2}, {x: 0, y: 1}],
[{x: 2, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}],
[{x: 0, y: 0}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 2, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}, {x: 1, y: 2}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}],
[{x: 1, y: 2}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 1, y: 0}]]
inputs_9.forEach(function (input) {
behaviorSet9(input);
});

function behaviorSet10(input) {
bp.registerBThread(""O_Player_Thread_10_1"", function(){
bp.sync({waitFor:[X(input[5].x, input[5].y)]});
bp.sync({waitFor:[O(input[3].x, input[3].y), O(input[6].x, input[6].y), X(input[2].x, input[2].y), X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[5].x, input[5].y), O(input[7].x, input[7].y)]},6);
});

bp.registerBThread(""O_Player_Thread_10_2"", function(){
bp.sync({request:[O(input[6].x, input[6].y)]},2);
});

bp.registerBThread(""O_Player_Thread_10_3"", function(){
bp.sync({waitFor:[X(input[7].x, input[7].y), O(input[3].x, input[3].y), O(input[6].x, input[6].y), O(input[5].x, input[5].y)]});
bp.sync({waitFor:[O(input[7].x, input[7].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[4].x, input[4].y), O(input[3].x, input[3].y), O(input[6].x, input[6].y), O(input[4].x, input[4].y)]},5);
});

bp.registerBThread(""O_Player_Thread_10_4"", function(){
bp.sync({waitFor:[X(input[4].x, input[4].y)]});
bp.sync({waitFor:[X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[4].x, input[4].y), O(input[7].x, input[7].y), O(input[3].x, input[3].y), O(input[2].x, input[2].y)]},9);
});

bp.registerBThread(""O_Player_Thread_10_5"", function(){
bp.sync({waitFor:[X(input[5].x, input[5].y), O(input[2].x, input[2].y), O(input[6].x, input[6].y)]});
bp.sync({request:[O(input[5].x, input[5].y), O(input[0].x, input[0].y), O(input[7].x, input[7].y)]},1);
});

}
var inputs_10 = [[{x: 1, y: 1}, {x: 0, y: 2}, {x: 1, y: 2}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 2}, {x: 0, y: 1}],
[{x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 1}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 0, y: 1}, {x: 2, y: 2}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 1}],
[{x: 1, y: 0}, {x: 1, y: 0}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}],
[{x: 0, y: 0}, {x: 1, y: 0}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 2, y: 2}, {x: 0, y: 0}],
[{x: 2, y: 1}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 1, y: 2}, {x: 2, y: 1}, {x: 0, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 2, y: 2}, {x: 2, y: 2}],
[{x: 0, y: 1}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 2, y: 0}, {x: 2, y: 2}]]
inputs_10.forEach(function (input) {
behaviorSet10(input);
});

"
50,8.0,4.0,43.71345029239766,16.0,9.0,25.0,65.0,20.0,49.0,0.0,17.0,"function behaviorSet1(input) {
bp.registerBThread(""O_Player_Thread_1_1"", function(){
bp.sync({waitFor:[O(input[5].x, input[5].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[5].x, input[5].y)]},2);
});

}
var inputs_1 = [[{x: 0, y: 1}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 0, y: 2}, {x: 1, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 0}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 1, y: 0}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 2, y: 1}],
[{x: 0, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 1}],
[{x: 1, y: 1}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 1}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 1, y: 0}, {x: 0, y: 2}]]
inputs_1.forEach(function (input) {
behaviorSet1(input);
});

function behaviorSet2(input) {
bp.registerBThread(""O_Player_Thread_2_1"", function(){
bp.sync({request:[O(input[6].x, input[6].y), O(input[3].x, input[3].y), O(input[2].x, input[2].y), O(input[2].x, input[2].y)]},4);
});

bp.registerBThread(""O_Player_Thread_2_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[5].x, input[5].y), X(input[7].x, input[7].y)]});
bp.sync({request:[O(input[7].x, input[7].y)]},2);
});

bp.registerBThread(""O_Player_Thread_2_3"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[0].x, input[0].y)]},8);
});

}
var inputs_2 = [[{x: 1, y: 0}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 2, y: 2}, {x: 1, y: 2}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 2, y: 2}, {x: 1, y: 1}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 1, y: 0}],
[{x: 2, y: 2}, {x: 1, y: 2}, {x: 0, y: 2}, {x: 1, y: 2}, {x: 1, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 0, y: 2}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 0, y: 2}],
[{x: 1, y: 0}, {x: 0, y: 0}, {x: 0, y: 1}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 0, y: 2}]]
inputs_2.forEach(function (input) {
behaviorSet2(input);
});

function behaviorSet3(input) {
bp.registerBThread(""O_Player_Thread_3_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y)]},9);
});

bp.registerBThread(""O_Player_Thread_3_2"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), O(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y)]},4);
});

bp.registerBThread(""O_Player_Thread_3_3"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y), X(input[2].x, input[2].y), O(input[1].x, input[1].y), X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y)]},10);
});

bp.registerBThread(""O_Player_Thread_3_4"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[1].x, input[1].y)]});
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[1].x, input[1].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},11);
});

bp.registerBThread(""O_Player_Thread_3_5"", function(){
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},10);
});

}
var inputs_3 = [[{x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}],
[{x: 1, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}],
[{x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 0}]]
inputs_3.forEach(function (input) {
behaviorSet3(input);
});

function behaviorSet4(input) {
bp.registerBThread(""O_Player_Thread_4_1"", function(){
bp.sync({waitFor:[O(input[4].x, input[4].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_4_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[3].x, input[3].y)]},8);
});

}
var inputs_4 = [[{x: 2, y: 0}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 2, y: 1}, {x: 1, y: 0}],
[{x: 2, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 0, y: 0}],
[{x: 0, y: 2}, {x: 1, y: 2}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 0, y: 0}],
[{x: 1, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 2, y: 0}, {x: 0, y: 0}],
[{x: 2, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 2, y: 2}]]
inputs_4.forEach(function (input) {
behaviorSet4(input);
});

function behaviorSet5(input) {
bp.registerBThread(""O_Player_Thread_5_1"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[1].x, input[1].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},3);
});

bp.registerBThread(""O_Player_Thread_5_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},9);
});

bp.registerBThread(""O_Player_Thread_5_3"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({waitFor:[X(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y), O(input[1].x, input[1].y)]},11);
});

}
var inputs_5 = [[{x: 1, y: 0}, {x: 1, y: 1}, {x: 1, y: 2}],
[{x: 2, y: 2}, {x: 0, y: 2}, {x: 2, y: 1}]]
inputs_5.forEach(function (input) {
behaviorSet5(input);
});

function behaviorSet6(input) {
bp.registerBThread(""O_Player_Thread_6_1"", function(){
bp.sync({waitFor:[O(input[1].x, input[1].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_6_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[1].x, input[1].y), O(input[1].x, input[1].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},10);
});

bp.registerBThread(""O_Player_Thread_6_3"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_6_4"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[1].x, input[1].y)]},3);
});

}
var inputs_6 = [[{x: 0, y: 2}, {x: 1, y: 0}],
[{x: 0, y: 0}, {x: 1, y: 2}]]
inputs_6.forEach(function (input) {
behaviorSet6(input);
});

function behaviorSet7(input) {
bp.registerBThread(""O_Player_Thread_7_1"", function(){
bp.sync({request:[O(input[4].x, input[4].y), O(input[3].x, input[3].y), O(input[1].x, input[1].y), O(input[4].x, input[4].y)]},2);
});

}
var inputs_7 = [[{x: 0, y: 1}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 1, y: 2}, {x: 1, y: 2}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 1, y: 2}],
[{x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 0, y: 2}],
[{x: 0, y: 1}, {x: 0, y: 2}, {x: 1, y: 1}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 2, y: 0}],
[{x: 1, y: 2}, {x: 0, y: 2}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 0, y: 0}, {x: 1, y: 2}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 2}, {x: 2, y: 1}]]
inputs_7.forEach(function (input) {
behaviorSet7(input);
});

function behaviorSet8(input) {
bp.registerBThread(""O_Player_Thread_8_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[0].x, input[0].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_8_2"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[1].x, input[1].y)]},4);
});

bp.registerBThread(""O_Player_Thread_8_3"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[1].x, input[1].y), O(input[0].x, input[0].y), X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[1].x, input[1].y)]},3);
});

}
var inputs_8 = [[{x: 1, y: 2}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 2, y: 2}],
[{x: 2, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}],
[{x: 0, y: 0}, {x: 2, y: 2}]]
inputs_8.forEach(function (input) {
behaviorSet8(input);
});

function behaviorSet9(input) {
bp.registerBThread(""O_Player_Thread_9_1"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y)]});
bp.sync({waitFor:[X(input[3].x, input[3].y), X(input[2].x, input[2].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},2);
});

bp.registerBThread(""O_Player_Thread_9_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y), O(input[2].x, input[2].y)]},8);
});

}
var inputs_9 = [[{x: 2, y: 0}, {x: 1, y: 2}, {x: 1, y: 2}, {x: 0, y: 1}],
[{x: 2, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}],
[{x: 0, y: 0}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 2, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}, {x: 1, y: 2}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}],
[{x: 1, y: 2}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 1, y: 0}]]
inputs_9.forEach(function (input) {
behaviorSet9(input);
});

function behaviorSet10(input) {
bp.registerBThread(""O_Player_Thread_10_1"", function(){
bp.sync({waitFor:[X(input[5].x, input[5].y)]});
bp.sync({waitFor:[O(input[3].x, input[3].y), O(input[6].x, input[6].y), X(input[2].x, input[2].y), X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[5].x, input[5].y), O(input[7].x, input[7].y)]},6);
});

bp.registerBThread(""O_Player_Thread_10_2"", function(){
bp.sync({request:[O(input[6].x, input[6].y)]},2);
});

bp.registerBThread(""O_Player_Thread_10_3"", function(){
bp.sync({waitFor:[X(input[7].x, input[7].y), O(input[3].x, input[3].y), O(input[6].x, input[6].y), O(input[5].x, input[5].y)]});
bp.sync({waitFor:[O(input[7].x, input[7].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[4].x, input[4].y), O(input[3].x, input[3].y), O(input[6].x, input[6].y), O(input[4].x, input[4].y)]},5);
});

bp.registerBThread(""O_Player_Thread_10_4"", function(){
bp.sync({waitFor:[X(input[4].x, input[4].y)]});
bp.sync({waitFor:[X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[4].x, input[4].y), O(input[7].x, input[7].y), O(input[3].x, input[3].y), O(input[2].x, input[2].y)]},9);
});

bp.registerBThread(""O_Player_Thread_10_5"", function(){
bp.sync({waitFor:[X(input[5].x, input[5].y), O(input[2].x, input[2].y), O(input[6].x, input[6].y)]});
bp.sync({request:[O(input[5].x, input[5].y), O(input[0].x, input[0].y), O(input[7].x, input[7].y)]},1);
});

}
var inputs_10 = [[{x: 1, y: 1}, {x: 0, y: 2}, {x: 1, y: 2}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 2}, {x: 0, y: 1}],
[{x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 1}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 0, y: 1}, {x: 2, y: 2}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 1}],
[{x: 1, y: 0}, {x: 1, y: 0}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}],
[{x: 0, y: 0}, {x: 1, y: 0}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 2, y: 2}, {x: 0, y: 0}],
[{x: 2, y: 1}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 1, y: 2}, {x: 2, y: 1}, {x: 0, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 2, y: 2}, {x: 2, y: 2}],
[{x: 0, y: 1}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 2, y: 0}, {x: 2, y: 2}]]
inputs_10.forEach(function (input) {
behaviorSet10(input);
});

"
51,8.0,5.0,38.926426426426424,17.0,4.0,29.0,77.0,19.0,34.0,0.0,15.0,"function behaviorSet1(input) {
bp.registerBThread(""O_Player_Thread_1_1"", function(){
bp.sync({waitFor:[O(input[5].x, input[5].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[5].x, input[5].y)]},2);
});

}
var inputs_1 = [[{x: 0, y: 1}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 0, y: 2}, {x: 1, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 0}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 1, y: 0}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 2, y: 1}],
[{x: 0, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 1}],
[{x: 1, y: 1}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 1}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 1, y: 0}, {x: 0, y: 2}]]
inputs_1.forEach(function (input) {
behaviorSet1(input);
});

function behaviorSet2(input) {
bp.registerBThread(""O_Player_Thread_2_1"", function(){
bp.sync({request:[O(input[6].x, input[6].y), O(input[3].x, input[3].y), O(input[2].x, input[2].y), O(input[2].x, input[2].y)]},4);
});

bp.registerBThread(""O_Player_Thread_2_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[5].x, input[5].y), X(input[7].x, input[7].y)]});
bp.sync({request:[O(input[7].x, input[7].y)]},2);
});

bp.registerBThread(""O_Player_Thread_2_3"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[0].x, input[0].y)]},8);
});

}
var inputs_2 = [[{x: 1, y: 0}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 2, y: 2}, {x: 1, y: 2}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 2, y: 2}, {x: 1, y: 1}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 1, y: 0}],
[{x: 2, y: 2}, {x: 1, y: 2}, {x: 0, y: 2}, {x: 1, y: 2}, {x: 1, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 0, y: 2}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 0, y: 2}],
[{x: 1, y: 0}, {x: 0, y: 0}, {x: 0, y: 1}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 0, y: 2}]]
inputs_2.forEach(function (input) {
behaviorSet2(input);
});

function behaviorSet3(input) {
bp.registerBThread(""O_Player_Thread_3_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y)]},9);
});

bp.registerBThread(""O_Player_Thread_3_2"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), O(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y)]},4);
});

bp.registerBThread(""O_Player_Thread_3_3"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y), X(input[2].x, input[2].y), O(input[1].x, input[1].y), X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y)]},10);
});

bp.registerBThread(""O_Player_Thread_3_4"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[1].x, input[1].y)]});
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},11);
});

bp.registerBThread(""O_Player_Thread_3_5"", function(){
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},10);
});

}
var inputs_3 = [[{x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}],
[{x: 1, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}],
[{x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 0}]]
inputs_3.forEach(function (input) {
behaviorSet3(input);
});

function behaviorSet4(input) {
bp.registerBThread(""O_Player_Thread_4_1"", function(){
bp.sync({waitFor:[O(input[4].x, input[4].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_4_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[3].x, input[3].y)]},8);
});

}
var inputs_4 = [[{x: 2, y: 0}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 2, y: 1}, {x: 1, y: 0}],
[{x: 2, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 0, y: 0}],
[{x: 0, y: 2}, {x: 1, y: 2}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 0, y: 0}],
[{x: 1, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 2, y: 0}, {x: 0, y: 0}],
[{x: 2, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 2, y: 2}]]
inputs_4.forEach(function (input) {
behaviorSet4(input);
});

function behaviorSet5(input) {
bp.registerBThread(""O_Player_Thread_5_1"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[1].x, input[1].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},3);
});

bp.registerBThread(""O_Player_Thread_5_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},9);
});

bp.registerBThread(""O_Player_Thread_5_3"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({waitFor:[X(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y), O(input[1].x, input[1].y)]},11);
});

}
var inputs_5 = [[{x: 1, y: 0}, {x: 1, y: 1}, {x: 1, y: 2}],
[{x: 2, y: 2}, {x: 0, y: 2}, {x: 2, y: 1}]]
inputs_5.forEach(function (input) {
behaviorSet5(input);
});

function behaviorSet6(input) {
bp.registerBThread(""O_Player_Thread_6_1"", function(){
bp.sync({waitFor:[O(input[1].x, input[1].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_6_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[1].x, input[1].y), O(input[1].x, input[1].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},10);
});

bp.registerBThread(""O_Player_Thread_6_3"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_6_4"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[1].x, input[1].y)]},3);
});

}
var inputs_6 = [[{x: 0, y: 2}, {x: 1, y: 0}],
[{x: 0, y: 0}, {x: 1, y: 2}]]
inputs_6.forEach(function (input) {
behaviorSet6(input);
});

function behaviorSet7(input) {
bp.registerBThread(""O_Player_Thread_7_1"", function(){
bp.sync({request:[O(input[4].x, input[4].y), O(input[3].x, input[3].y), O(input[1].x, input[1].y), O(input[4].x, input[4].y)]},2);
});

}
var inputs_7 = [[{x: 0, y: 1}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 1, y: 2}, {x: 1, y: 2}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 1, y: 2}],
[{x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 0, y: 2}],
[{x: 0, y: 1}, {x: 0, y: 2}, {x: 1, y: 1}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 2, y: 0}],
[{x: 1, y: 2}, {x: 0, y: 2}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 0, y: 0}, {x: 1, y: 2}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 2}, {x: 2, y: 1}]]
inputs_7.forEach(function (input) {
behaviorSet7(input);
});

function behaviorSet8(input) {
bp.registerBThread(""O_Player_Thread_8_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[0].x, input[0].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_8_2"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[1].x, input[1].y)]},4);
});

bp.registerBThread(""O_Player_Thread_8_3"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[1].x, input[1].y), O(input[0].x, input[0].y), X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[1].x, input[1].y)]},3);
});

}
var inputs_8 = [[{x: 1, y: 2}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 2, y: 2}],
[{x: 2, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}],
[{x: 0, y: 0}, {x: 2, y: 2}]]
inputs_8.forEach(function (input) {
behaviorSet8(input);
});

function behaviorSet9(input) {
bp.registerBThread(""O_Player_Thread_9_1"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y)]});
bp.sync({waitFor:[X(input[3].x, input[3].y), X(input[2].x, input[2].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},2);
});

bp.registerBThread(""O_Player_Thread_9_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y), O(input[2].x, input[2].y)]},8);
});

}
var inputs_9 = [[{x: 2, y: 0}, {x: 1, y: 2}, {x: 1, y: 2}, {x: 0, y: 1}],
[{x: 2, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}],
[{x: 0, y: 0}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 2, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}, {x: 1, y: 2}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}],
[{x: 1, y: 2}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 1, y: 0}]]
inputs_9.forEach(function (input) {
behaviorSet9(input);
});

function behaviorSet10(input) {
bp.registerBThread(""O_Player_Thread_10_1"", function(){
bp.sync({waitFor:[X(input[5].x, input[5].y)]});
bp.sync({waitFor:[O(input[3].x, input[3].y), O(input[6].x, input[6].y), X(input[2].x, input[2].y), X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[5].x, input[5].y), O(input[7].x, input[7].y)]},6);
});

bp.registerBThread(""O_Player_Thread_10_2"", function(){
bp.sync({request:[O(input[6].x, input[6].y)]},2);
});

bp.registerBThread(""O_Player_Thread_10_3"", function(){
bp.sync({waitFor:[X(input[7].x, input[7].y), O(input[3].x, input[3].y), O(input[6].x, input[6].y), O(input[5].x, input[5].y)]});
bp.sync({waitFor:[O(input[7].x, input[7].y), X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[4].x, input[4].y), O(input[3].x, input[3].y), O(input[6].x, input[6].y), O(input[4].x, input[4].y)]},5);
});

bp.registerBThread(""O_Player_Thread_10_4"", function(){
bp.sync({waitFor:[X(input[4].x, input[4].y)]});
bp.sync({waitFor:[X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[4].x, input[4].y), O(input[7].x, input[7].y), O(input[3].x, input[3].y), O(input[2].x, input[2].y)]},9);
});

bp.registerBThread(""O_Player_Thread_10_5"", function(){
bp.sync({waitFor:[X(input[5].x, input[5].y), O(input[2].x, input[2].y), O(input[6].x, input[6].y)]});
bp.sync({request:[O(input[5].x, input[5].y), O(input[0].x, input[0].y), O(input[7].x, input[7].y)]},1);
});

}
var inputs_10 = [[{x: 1, y: 1}, {x: 0, y: 2}, {x: 1, y: 2}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 2}, {x: 0, y: 1}],
[{x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 1}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 0, y: 1}, {x: 2, y: 2}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 1}],
[{x: 1, y: 0}, {x: 1, y: 0}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}],
[{x: 0, y: 0}, {x: 1, y: 0}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 2, y: 2}, {x: 0, y: 0}],
[{x: 2, y: 1}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 1, y: 2}, {x: 2, y: 1}, {x: 0, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 2, y: 2}, {x: 2, y: 2}],
[{x: 0, y: 1}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 2, y: 0}, {x: 2, y: 2}]]
inputs_10.forEach(function (input) {
behaviorSet10(input);
});

"
52,8.0,8.0,53.15789473684211,27.0,2.0,21.0,51.0,18.0,44.0,0.0,15.0,"function behaviorSet1(input) {
bp.registerBThread(""O_Player_Thread_1_1"", function(){
bp.sync({waitFor:[O(input[5].x, input[5].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[5].x, input[5].y)]},2);
});

}
var inputs_1 = [[{x: 0, y: 1}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 0, y: 2}, {x: 1, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 0}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 1, y: 0}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 2, y: 1}],
[{x: 0, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 1}],
[{x: 1, y: 1}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 1}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 1, y: 0}, {x: 0, y: 2}]]
inputs_1.forEach(function (input) {
behaviorSet1(input);
});

function behaviorSet2(input) {
bp.registerBThread(""O_Player_Thread_2_1"", function(){
bp.sync({request:[O(input[6].x, input[6].y), O(input[3].x, input[3].y), O(input[2].x, input[2].y), O(input[2].x, input[2].y)]},4);
});

bp.registerBThread(""O_Player_Thread_2_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[5].x, input[5].y), X(input[7].x, input[7].y)]});
bp.sync({request:[O(input[7].x, input[7].y)]},2);
});

bp.registerBThread(""O_Player_Thread_2_3"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[0].x, input[0].y)]},8);
});

}
var inputs_2 = [[{x: 1, y: 0}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 2, y: 2}, {x: 1, y: 2}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 2, y: 2}, {x: 1, y: 1}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 1, y: 0}],
[{x: 2, y: 2}, {x: 1, y: 2}, {x: 0, y: 2}, {x: 1, y: 2}, {x: 1, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 0, y: 2}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 0, y: 2}],
[{x: 1, y: 0}, {x: 0, y: 0}, {x: 0, y: 1}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 0, y: 2}]]
inputs_2.forEach(function (input) {
behaviorSet2(input);
});

function behaviorSet3(input) {
bp.registerBThread(""O_Player_Thread_3_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y)]},9);
});

bp.registerBThread(""O_Player_Thread_3_2"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), O(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y)]},4);
});

bp.registerBThread(""O_Player_Thread_3_3"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y), X(input[2].x, input[2].y), O(input[1].x, input[1].y), X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y)]},10);
});

bp.registerBThread(""O_Player_Thread_3_4"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[1].x, input[1].y)]});
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},11);
});

bp.registerBThread(""O_Player_Thread_3_5"", function(){
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},10);
});

}
var inputs_3 = [[{x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}],
[{x: 1, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}],
[{x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 0}]]
inputs_3.forEach(function (input) {
behaviorSet3(input);
});

function behaviorSet4(input) {
bp.registerBThread(""O_Player_Thread_4_1"", function(){
bp.sync({waitFor:[O(input[4].x, input[4].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_4_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[3].x, input[3].y)]},8);
});

}
var inputs_4 = [[{x: 2, y: 0}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 2, y: 1}, {x: 1, y: 0}],
[{x: 0, y: 1}, {x: 2, y: 0}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}],
[{x: 0, y: 2}, {x: 1, y: 2}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 0, y: 0}],
[{x: 1, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 2, y: 0}, {x: 0, y: 0}],
[{x: 2, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 2, y: 2}]]
inputs_4.forEach(function (input) {
behaviorSet4(input);
});

function behaviorSet5(input) {
bp.registerBThread(""O_Player_Thread_5_1"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[1].x, input[1].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},3);
});

bp.registerBThread(""O_Player_Thread_5_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},9);
});

bp.registerBThread(""O_Player_Thread_5_3"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({waitFor:[X(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y), O(input[1].x, input[1].y)]},11);
});

}
var inputs_5 = [[{x: 1, y: 0}, {x: 1, y: 1}, {x: 1, y: 2}],
[{x: 2, y: 2}, {x: 0, y: 2}, {x: 2, y: 1}]]
inputs_5.forEach(function (input) {
behaviorSet5(input);
});

function behaviorSet6(input) {
bp.registerBThread(""O_Player_Thread_6_1"", function(){
bp.sync({waitFor:[O(input[1].x, input[1].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_6_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[1].x, input[1].y), O(input[1].x, input[1].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},10);
});

bp.registerBThread(""O_Player_Thread_6_3"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_6_4"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[1].x, input[1].y)]},3);
});

}
var inputs_6 = [[{x: 0, y: 2}, {x: 1, y: 0}],
[{x: 0, y: 0}, {x: 1, y: 2}]]
inputs_6.forEach(function (input) {
behaviorSet6(input);
});

function behaviorSet7(input) {
bp.registerBThread(""O_Player_Thread_7_1"", function(){
bp.sync({request:[O(input[4].x, input[4].y), O(input[3].x, input[3].y), O(input[1].x, input[1].y), O(input[4].x, input[4].y)]},2);
});

}
var inputs_7 = [[{x: 0, y: 1}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 1, y: 2}, {x: 1, y: 2}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 1, y: 2}],
[{x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 0, y: 2}],
[{x: 0, y: 1}, {x: 0, y: 2}, {x: 1, y: 1}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 2, y: 0}],
[{x: 1, y: 2}, {x: 0, y: 2}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 0, y: 0}, {x: 1, y: 2}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 2}, {x: 2, y: 1}]]
inputs_7.forEach(function (input) {
behaviorSet7(input);
});

function behaviorSet8(input) {
bp.registerBThread(""O_Player_Thread_8_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[0].x, input[0].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_8_2"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[1].x, input[1].y)]},4);
});

bp.registerBThread(""O_Player_Thread_8_3"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[1].x, input[1].y), O(input[0].x, input[0].y), X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[1].x, input[1].y)]},3);
});

}
var inputs_8 = [[{x: 1, y: 2}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 2, y: 2}],
[{x: 2, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}],
[{x: 0, y: 0}, {x: 2, y: 2}]]
inputs_8.forEach(function (input) {
behaviorSet8(input);
});

function behaviorSet9(input) {
bp.registerBThread(""O_Player_Thread_9_1"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y)]});
bp.sync({waitFor:[X(input[3].x, input[3].y), X(input[2].x, input[2].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},2);
});

bp.registerBThread(""O_Player_Thread_9_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y)]},8);
});

}
var inputs_9 = [[{x: 2, y: 0}, {x: 1, y: 2}, {x: 1, y: 2}, {x: 0, y: 1}],
[{x: 2, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}],
[{x: 0, y: 0}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 2, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}, {x: 1, y: 2}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}],
[{x: 1, y: 2}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 1, y: 0}]]
inputs_9.forEach(function (input) {
behaviorSet9(input);
});

function behaviorSet10(input) {
bp.registerBThread(""O_Player_Thread_10_1"", function(){
bp.sync({waitFor:[X(input[5].x, input[5].y)]});
bp.sync({waitFor:[O(input[3].x, input[3].y), O(input[6].x, input[6].y), X(input[2].x, input[2].y), X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[5].x, input[5].y), O(input[7].x, input[7].y)]},6);
});

bp.registerBThread(""O_Player_Thread_10_2"", function(){
bp.sync({request:[O(input[6].x, input[6].y)]},2);
});

bp.registerBThread(""O_Player_Thread_10_3"", function(){
bp.sync({waitFor:[X(input[7].x, input[7].y), O(input[3].x, input[3].y), O(input[6].x, input[6].y), O(input[5].x, input[5].y)]});
bp.sync({waitFor:[O(input[7].x, input[7].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[4].x, input[4].y), O(input[3].x, input[3].y), O(input[6].x, input[6].y), O(input[4].x, input[4].y)]},5);
});

bp.registerBThread(""O_Player_Thread_10_4"", function(){
bp.sync({waitFor:[X(input[4].x, input[4].y)]});
bp.sync({waitFor:[X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[4].x, input[4].y), O(input[7].x, input[7].y), O(input[3].x, input[3].y), O(input[2].x, input[2].y)]},9);
});

bp.registerBThread(""O_Player_Thread_10_5"", function(){
bp.sync({waitFor:[X(input[5].x, input[5].y), O(input[2].x, input[2].y), O(input[6].x, input[6].y)]});
bp.sync({request:[O(input[5].x, input[5].y), O(input[0].x, input[0].y), O(input[7].x, input[7].y)]},1);
});

}
var inputs_10 = [[{x: 1, y: 1}, {x: 0, y: 2}, {x: 1, y: 2}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 2}, {x: 0, y: 1}],
[{x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 1}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 0, y: 1}, {x: 2, y: 2}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 1}],
[{x: 1, y: 0}, {x: 1, y: 0}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}],
[{x: 0, y: 0}, {x: 1, y: 0}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 2, y: 2}, {x: 0, y: 0}],
[{x: 2, y: 1}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 1, y: 2}, {x: 2, y: 1}, {x: 0, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 2, y: 2}, {x: 2, y: 2}],
[{x: 0, y: 1}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 2, y: 0}, {x: 2, y: 2}]]
inputs_10.forEach(function (input) {
behaviorSet10(input);
});

"
53,8.0,7.0,46.431046431046425,19.0,7.0,24.0,62.0,20.0,49.0,0.0,17.0,"function behaviorSet1(input) {
bp.registerBThread(""O_Player_Thread_1_1"", function(){
bp.sync({waitFor:[O(input[5].x, input[5].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[5].x, input[5].y)]},2);
});

}
var inputs_1 = [[{x: 0, y: 1}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 0, y: 2}, {x: 1, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 0}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 1, y: 0}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 2, y: 1}],
[{x: 0, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 1}],
[{x: 1, y: 1}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 1}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 1, y: 0}, {x: 0, y: 2}]]
inputs_1.forEach(function (input) {
behaviorSet1(input);
});

function behaviorSet2(input) {
bp.registerBThread(""O_Player_Thread_2_1"", function(){
bp.sync({request:[O(input[6].x, input[6].y), O(input[3].x, input[3].y), O(input[2].x, input[2].y), O(input[2].x, input[2].y)]},4);
});

bp.registerBThread(""O_Player_Thread_2_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[5].x, input[5].y), X(input[7].x, input[7].y)]});
bp.sync({request:[O(input[7].x, input[7].y)]},2);
});

bp.registerBThread(""O_Player_Thread_2_3"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[0].x, input[0].y)]},8);
});

}
var inputs_2 = [[{x: 1, y: 0}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 2, y: 2}, {x: 1, y: 2}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 2, y: 2}, {x: 1, y: 1}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 1, y: 0}],
[{x: 2, y: 2}, {x: 1, y: 2}, {x: 0, y: 2}, {x: 1, y: 2}, {x: 1, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 0, y: 2}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 0, y: 2}],
[{x: 1, y: 0}, {x: 0, y: 0}, {x: 0, y: 1}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 0, y: 2}]]
inputs_2.forEach(function (input) {
behaviorSet2(input);
});

function behaviorSet3(input) {
bp.registerBThread(""O_Player_Thread_3_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y)]},9);
});

bp.registerBThread(""O_Player_Thread_3_2"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), O(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y)]},4);
});

bp.registerBThread(""O_Player_Thread_3_3"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y), X(input[2].x, input[2].y), O(input[1].x, input[1].y), X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y)]},10);
});

bp.registerBThread(""O_Player_Thread_3_4"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[1].x, input[1].y)]});
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},11);
});

bp.registerBThread(""O_Player_Thread_3_5"", function(){
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},10);
});

}
var inputs_3 = [[{x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}],
[{x: 1, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}],
[{x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 0}]]
inputs_3.forEach(function (input) {
behaviorSet3(input);
});

function behaviorSet4(input) {
bp.registerBThread(""O_Player_Thread_4_1"", function(){
bp.sync({waitFor:[O(input[4].x, input[4].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_4_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[3].x, input[3].y)]},8);
});

}
var inputs_4 = [[{x: 2, y: 0}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 2, y: 1}, {x: 1, y: 0}],
[{x: 2, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 0, y: 0}],
[{x: 0, y: 2}, {x: 1, y: 2}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 0, y: 0}],
[{x: 1, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 2, y: 0}, {x: 0, y: 0}],
[{x: 2, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 2, y: 2}]]
inputs_4.forEach(function (input) {
behaviorSet4(input);
});

function behaviorSet5(input) {
bp.registerBThread(""O_Player_Thread_5_1"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[1].x, input[1].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},3);
});

bp.registerBThread(""O_Player_Thread_5_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},9);
});

bp.registerBThread(""O_Player_Thread_5_3"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({waitFor:[X(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y), O(input[1].x, input[1].y)]},11);
});

}
var inputs_5 = [[{x: 1, y: 0}, {x: 1, y: 1}, {x: 1, y: 2}],
[{x: 2, y: 2}, {x: 0, y: 2}, {x: 2, y: 1}]]
inputs_5.forEach(function (input) {
behaviorSet5(input);
});

function behaviorSet6(input) {
bp.registerBThread(""O_Player_Thread_6_1"", function(){
bp.sync({waitFor:[O(input[1].x, input[1].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_6_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[1].x, input[1].y), O(input[1].x, input[1].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},10);
});

bp.registerBThread(""O_Player_Thread_6_3"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_6_4"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[1].x, input[1].y)]},3);
});

}
var inputs_6 = [[{x: 0, y: 2}, {x: 1, y: 0}],
[{x: 0, y: 0}, {x: 1, y: 2}]]
inputs_6.forEach(function (input) {
behaviorSet6(input);
});

function behaviorSet7(input) {
bp.registerBThread(""O_Player_Thread_7_1"", function(){
bp.sync({request:[O(input[4].x, input[4].y), O(input[3].x, input[3].y), O(input[1].x, input[1].y), O(input[4].x, input[4].y)]},2);
});

}
var inputs_7 = [[{x: 0, y: 1}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 1, y: 2}, {x: 1, y: 2}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 1, y: 2}],
[{x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 0, y: 2}],
[{x: 0, y: 1}, {x: 0, y: 2}, {x: 1, y: 1}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 2, y: 0}],
[{x: 1, y: 2}, {x: 0, y: 2}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 0, y: 0}, {x: 1, y: 2}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 2}, {x: 2, y: 1}]]
inputs_7.forEach(function (input) {
behaviorSet7(input);
});

function behaviorSet8(input) {
bp.registerBThread(""O_Player_Thread_8_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[0].x, input[0].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_8_2"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[1].x, input[1].y)]},4);
});

bp.registerBThread(""O_Player_Thread_8_3"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[1].x, input[1].y), O(input[0].x, input[0].y), X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[1].x, input[1].y)]},3);
});

}
var inputs_8 = [[{x: 1, y: 2}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 2, y: 2}],
[{x: 2, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}],
[{x: 0, y: 0}, {x: 2, y: 2}]]
inputs_8.forEach(function (input) {
behaviorSet8(input);
});

function behaviorSet9(input) {
bp.registerBThread(""O_Player_Thread_9_1"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y)]});
bp.sync({waitFor:[X(input[3].x, input[3].y), X(input[2].x, input[2].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[0].x, input[0].y)]},2);
});

bp.registerBThread(""O_Player_Thread_9_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y), O(input[2].x, input[2].y)]},8);
});

}
var inputs_9 = [[{x: 2, y: 0}, {x: 1, y: 2}, {x: 1, y: 2}, {x: 0, y: 1}],
[{x: 2, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}],
[{x: 0, y: 0}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 2, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}, {x: 1, y: 2}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}],
[{x: 1, y: 2}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 1, y: 0}]]
inputs_9.forEach(function (input) {
behaviorSet9(input);
});

function behaviorSet10(input) {
bp.registerBThread(""O_Player_Thread_10_1"", function(){
bp.sync({waitFor:[X(input[5].x, input[5].y)]});
bp.sync({waitFor:[O(input[3].x, input[3].y), O(input[6].x, input[6].y), X(input[2].x, input[2].y), X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[5].x, input[5].y), O(input[7].x, input[7].y)]},6);
});

bp.registerBThread(""O_Player_Thread_10_2"", function(){
bp.sync({request:[O(input[6].x, input[6].y)]},2);
});

bp.registerBThread(""O_Player_Thread_10_3"", function(){
bp.sync({waitFor:[X(input[7].x, input[7].y), O(input[3].x, input[3].y), O(input[6].x, input[6].y), O(input[5].x, input[5].y)]});
bp.sync({waitFor:[O(input[7].x, input[7].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[4].x, input[4].y), O(input[3].x, input[3].y), O(input[6].x, input[6].y), O(input[4].x, input[4].y)]},5);
});

bp.registerBThread(""O_Player_Thread_10_4"", function(){
bp.sync({waitFor:[X(input[4].x, input[4].y)]});
bp.sync({waitFor:[X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[4].x, input[4].y), O(input[7].x, input[7].y), O(input[3].x, input[3].y), O(input[2].x, input[2].y)]},9);
});

bp.registerBThread(""O_Player_Thread_10_5"", function(){
bp.sync({waitFor:[X(input[5].x, input[5].y), O(input[2].x, input[2].y), O(input[6].x, input[6].y)]});
bp.sync({request:[O(input[5].x, input[5].y), O(input[0].x, input[0].y), O(input[7].x, input[7].y)]},1);
});

}
var inputs_10 = [[{x: 1, y: 1}, {x: 0, y: 2}, {x: 1, y: 2}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 2}, {x: 0, y: 1}],
[{x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 1}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 0, y: 1}, {x: 2, y: 2}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 1}],
[{x: 1, y: 0}, {x: 1, y: 0}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}],
[{x: 0, y: 0}, {x: 1, y: 0}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 2, y: 2}, {x: 0, y: 0}],
[{x: 2, y: 1}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 1, y: 2}, {x: 2, y: 1}, {x: 0, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 2, y: 2}, {x: 2, y: 2}],
[{x: 0, y: 1}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 2, y: 0}, {x: 2, y: 2}]]
inputs_10.forEach(function (input) {
behaviorSet10(input);
});

"
54,8.0,3.0,42.279925477410345,17.0,6.0,27.0,68.0,21.0,45.0,0.0,19.0,"function behaviorSet1(input) {
bp.registerBThread(""O_Player_Thread_1_1"", function(){
bp.sync({waitFor:[O(input[5].x, input[5].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[5].x, input[5].y)]},2);
});

}
var inputs_1 = [[{x: 0, y: 1}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 0, y: 2}, {x: 1, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 0}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 1, y: 0}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 2, y: 1}],
[{x: 0, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 1}],
[{x: 1, y: 1}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 1}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 1, y: 0}, {x: 0, y: 2}]]
inputs_1.forEach(function (input) {
behaviorSet1(input);
});

function behaviorSet2(input) {
bp.registerBThread(""O_Player_Thread_2_1"", function(){
bp.sync({request:[O(input[6].x, input[6].y), O(input[3].x, input[3].y), O(input[2].x, input[2].y), O(input[2].x, input[2].y)]},4);
});

bp.registerBThread(""O_Player_Thread_2_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[5].x, input[5].y), X(input[7].x, input[7].y)]});
bp.sync({request:[O(input[7].x, input[7].y)]},2);
});

bp.registerBThread(""O_Player_Thread_2_3"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[0].x, input[0].y)]},8);
});

}
var inputs_2 = [[{x: 1, y: 0}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 2, y: 2}, {x: 1, y: 2}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 2, y: 2}, {x: 1, y: 1}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 1, y: 0}],
[{x: 2, y: 2}, {x: 1, y: 2}, {x: 0, y: 2}, {x: 1, y: 2}, {x: 1, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 0, y: 2}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 0, y: 2}],
[{x: 1, y: 0}, {x: 0, y: 0}, {x: 0, y: 1}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 0, y: 2}]]
inputs_2.forEach(function (input) {
behaviorSet2(input);
});

function behaviorSet3(input) {
bp.registerBThread(""O_Player_Thread_3_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y)]},9);
});

bp.registerBThread(""O_Player_Thread_3_2"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), O(input[2].x, input[2].y), X(input[0].x, input[0].y), X(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y)]},4);
});

bp.registerBThread(""O_Player_Thread_3_3"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y), X(input[2].x, input[2].y), O(input[1].x, input[1].y), X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y)]},10);
});

bp.registerBThread(""O_Player_Thread_3_4"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[1].x, input[1].y)]});
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},11);
});

bp.registerBThread(""O_Player_Thread_3_5"", function(){
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},10);
});

}
var inputs_3 = [[{x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}],
[{x: 1, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}],
[{x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 0}]]
inputs_3.forEach(function (input) {
behaviorSet3(input);
});

function behaviorSet4(input) {
bp.registerBThread(""O_Player_Thread_4_1"", function(){
bp.sync({waitFor:[O(input[4].x, input[4].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_4_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[3].x, input[3].y)]},8);
});

}
var inputs_4 = [[{x: 2, y: 0}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 2, y: 1}, {x: 1, y: 0}],
[{x: 0, y: 1}, {x: 2, y: 0}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}],
[{x: 0, y: 2}, {x: 1, y: 2}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 0, y: 0}],
[{x: 1, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 2, y: 0}, {x: 0, y: 0}],
[{x: 2, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 2, y: 2}]]
inputs_4.forEach(function (input) {
behaviorSet4(input);
});

function behaviorSet5(input) {
bp.registerBThread(""O_Player_Thread_5_1"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[1].x, input[1].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},3);
});

bp.registerBThread(""O_Player_Thread_5_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},9);
});

bp.registerBThread(""O_Player_Thread_5_3"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({waitFor:[X(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y), O(input[1].x, input[1].y)]},11);
});

}
var inputs_5 = [[{x: 1, y: 0}, {x: 1, y: 1}, {x: 1, y: 2}],
[{x: 2, y: 2}, {x: 0, y: 2}, {x: 2, y: 1}]]
inputs_5.forEach(function (input) {
behaviorSet5(input);
});

function behaviorSet6(input) {
bp.registerBThread(""O_Player_Thread_6_1"", function(){
bp.sync({waitFor:[O(input[1].x, input[1].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_6_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[1].x, input[1].y), O(input[1].x, input[1].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},10);
});

bp.registerBThread(""O_Player_Thread_6_3"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_6_4"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[1].x, input[1].y)]},3);
});

}
var inputs_6 = [[{x: 0, y: 2}, {x: 1, y: 0}],
[{x: 0, y: 0}, {x: 1, y: 2}]]
inputs_6.forEach(function (input) {
behaviorSet6(input);
});

function behaviorSet7(input) {
bp.registerBThread(""O_Player_Thread_7_1"", function(){
bp.sync({request:[O(input[4].x, input[4].y), O(input[3].x, input[3].y), O(input[1].x, input[1].y), O(input[4].x, input[4].y)]},2);
});

}
var inputs_7 = [[{x: 0, y: 1}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 1, y: 2}, {x: 1, y: 2}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 1, y: 2}],
[{x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 0, y: 2}],
[{x: 0, y: 1}, {x: 0, y: 2}, {x: 1, y: 1}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 2, y: 0}],
[{x: 1, y: 2}, {x: 0, y: 2}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 0, y: 0}, {x: 1, y: 2}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 2}, {x: 2, y: 1}]]
inputs_7.forEach(function (input) {
behaviorSet7(input);
});

function behaviorSet8(input) {
bp.registerBThread(""O_Player_Thread_8_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[0].x, input[0].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_8_2"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[1].x, input[1].y)]},4);
});

bp.registerBThread(""O_Player_Thread_8_3"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[1].x, input[1].y), O(input[0].x, input[0].y), X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[1].x, input[1].y)]},3);
});

}
var inputs_8 = [[{x: 1, y: 2}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 2, y: 2}],
[{x: 2, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}],
[{x: 0, y: 0}, {x: 2, y: 2}]]
inputs_8.forEach(function (input) {
behaviorSet8(input);
});

function behaviorSet9(input) {
bp.registerBThread(""O_Player_Thread_9_1"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y)]});
bp.sync({waitFor:[X(input[3].x, input[3].y), X(input[2].x, input[2].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},2);
});

bp.registerBThread(""O_Player_Thread_9_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y), O(input[2].x, input[2].y)]},8);
});

}
var inputs_9 = [[{x: 2, y: 0}, {x: 1, y: 2}, {x: 1, y: 2}, {x: 0, y: 1}],
[{x: 2, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}],
[{x: 0, y: 0}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 2, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}, {x: 1, y: 2}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}],
[{x: 1, y: 2}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 1, y: 0}]]
inputs_9.forEach(function (input) {
behaviorSet9(input);
});

function behaviorSet10(input) {
bp.registerBThread(""O_Player_Thread_10_1"", function(){
bp.sync({waitFor:[X(input[5].x, input[5].y)]});
bp.sync({waitFor:[O(input[3].x, input[3].y), O(input[6].x, input[6].y), X(input[2].x, input[2].y), X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[5].x, input[5].y), O(input[7].x, input[7].y)]},6);
});

bp.registerBThread(""O_Player_Thread_10_2"", function(){
bp.sync({request:[O(input[6].x, input[6].y)]},2);
});

bp.registerBThread(""O_Player_Thread_10_3"", function(){
bp.sync({waitFor:[X(input[7].x, input[7].y), O(input[3].x, input[3].y), O(input[6].x, input[6].y), O(input[5].x, input[5].y)]});
bp.sync({waitFor:[O(input[7].x, input[7].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[4].x, input[4].y), O(input[3].x, input[3].y), O(input[6].x, input[6].y), O(input[4].x, input[4].y)]},5);
});

bp.registerBThread(""O_Player_Thread_10_4"", function(){
bp.sync({waitFor:[X(input[4].x, input[4].y)]});
bp.sync({waitFor:[X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[4].x, input[4].y), O(input[7].x, input[7].y), O(input[3].x, input[3].y), O(input[2].x, input[2].y)]},9);
});

bp.registerBThread(""O_Player_Thread_10_5"", function(){
bp.sync({waitFor:[X(input[5].x, input[5].y), O(input[2].x, input[2].y), O(input[6].x, input[6].y)]});
bp.sync({request:[O(input[5].x, input[5].y), O(input[0].x, input[0].y), O(input[7].x, input[7].y)]},1);
});

}
var inputs_10 = [[{x: 1, y: 1}, {x: 0, y: 2}, {x: 1, y: 2}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 2}, {x: 0, y: 1}],
[{x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 1}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 0, y: 1}, {x: 2, y: 2}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 1}],
[{x: 1, y: 0}, {x: 1, y: 0}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}],
[{x: 0, y: 0}, {x: 1, y: 0}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 2, y: 2}, {x: 0, y: 0}],
[{x: 2, y: 1}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 1, y: 2}, {x: 2, y: 1}, {x: 0, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 2, y: 2}, {x: 2, y: 2}],
[{x: 0, y: 1}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 2, y: 0}, {x: 2, y: 2}]]
inputs_10.forEach(function (input) {
behaviorSet10(input);
});

"
55,8.0,9.0,57.298136645962735,19.0,5.0,26.0,49.0,9.0,43.0,0.0,19.0,"function behaviorSet1(input) {
bp.registerBThread(""O_Player_Thread_1_1"", function(){
bp.sync({waitFor:[O(input[5].x, input[5].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[5].x, input[5].y)]},2);
});

}
var inputs_1 = [[{x: 0, y: 1}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 0, y: 2}, {x: 1, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 0}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 1, y: 0}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 2, y: 1}],
[{x: 0, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 1}],
[{x: 1, y: 1}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 1}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 1, y: 0}, {x: 0, y: 2}]]
inputs_1.forEach(function (input) {
behaviorSet1(input);
});

function behaviorSet2(input) {
bp.registerBThread(""O_Player_Thread_2_1"", function(){
bp.sync({request:[O(input[6].x, input[6].y), O(input[3].x, input[3].y), O(input[2].x, input[2].y), O(input[2].x, input[2].y)]},4);
});

bp.registerBThread(""O_Player_Thread_2_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[5].x, input[5].y), X(input[7].x, input[7].y)]});
bp.sync({request:[O(input[7].x, input[7].y)]},2);
});

bp.registerBThread(""O_Player_Thread_2_3"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[0].x, input[0].y)]},8);
});

}
var inputs_2 = [[{x: 1, y: 0}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 2, y: 2}, {x: 1, y: 2}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 2, y: 2}, {x: 1, y: 1}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 1, y: 0}],
[{x: 2, y: 2}, {x: 1, y: 2}, {x: 0, y: 2}, {x: 1, y: 2}, {x: 1, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 0, y: 2}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 0, y: 2}],
[{x: 1, y: 0}, {x: 0, y: 0}, {x: 0, y: 1}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 0, y: 2}]]
inputs_2.forEach(function (input) {
behaviorSet2(input);
});

function behaviorSet3(input) {
bp.registerBThread(""O_Player_Thread_3_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y)]},9);
});

bp.registerBThread(""O_Player_Thread_3_2"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), O(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y)]},4);
});

bp.registerBThread(""O_Player_Thread_3_3"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y), X(input[2].x, input[2].y), O(input[1].x, input[1].y), X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y)]},10);
});

bp.registerBThread(""O_Player_Thread_3_4"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[1].x, input[1].y)]});
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},11);
});

bp.registerBThread(""O_Player_Thread_3_5"", function(){
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},10);
});

}
var inputs_3 = [[{x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}],
[{x: 1, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}],
[{x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 0}]]
inputs_3.forEach(function (input) {
behaviorSet3(input);
});

function behaviorSet4(input) {
bp.registerBThread(""O_Player_Thread_4_1"", function(){
bp.sync({waitFor:[O(input[4].x, input[4].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_4_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y)]},8);
});

}
var inputs_4 = [[{x: 2, y: 0}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 2, y: 1}, {x: 1, y: 0}],
[{x: 2, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 0, y: 0}],
[{x: 0, y: 2}, {x: 1, y: 2}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 0, y: 0}],
[{x: 1, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 2, y: 0}, {x: 0, y: 0}],
[{x: 2, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 2, y: 2}]]
inputs_4.forEach(function (input) {
behaviorSet4(input);
});

function behaviorSet5(input) {
bp.registerBThread(""O_Player_Thread_5_1"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[1].x, input[1].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},3);
});

bp.registerBThread(""O_Player_Thread_5_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},9);
});

bp.registerBThread(""O_Player_Thread_5_3"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({waitFor:[X(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y), O(input[1].x, input[1].y)]},11);
});

}
var inputs_5 = [[{x: 1, y: 0}, {x: 1, y: 1}, {x: 1, y: 2}],
[{x: 2, y: 2}, {x: 0, y: 2}, {x: 2, y: 1}]]
inputs_5.forEach(function (input) {
behaviorSet5(input);
});

function behaviorSet6(input) {
bp.registerBThread(""O_Player_Thread_6_1"", function(){
bp.sync({waitFor:[O(input[1].x, input[1].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_6_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[1].x, input[1].y), O(input[1].x, input[1].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},10);
});

bp.registerBThread(""O_Player_Thread_6_3"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_6_4"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[1].x, input[1].y)]},3);
});

}
var inputs_6 = [[{x: 0, y: 2}, {x: 1, y: 0}],
[{x: 0, y: 0}, {x: 1, y: 2}]]
inputs_6.forEach(function (input) {
behaviorSet6(input);
});

function behaviorSet7(input) {
bp.registerBThread(""O_Player_Thread_7_1"", function(){
bp.sync({request:[O(input[4].x, input[4].y), O(input[3].x, input[3].y), O(input[1].x, input[1].y), O(input[4].x, input[4].y)]},2);
});

}
var inputs_7 = [[{x: 0, y: 1}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 1, y: 2}, {x: 1, y: 2}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 1, y: 2}],
[{x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 0, y: 2}],
[{x: 0, y: 1}, {x: 0, y: 2}, {x: 1, y: 1}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 2, y: 0}],
[{x: 1, y: 2}, {x: 0, y: 2}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 0, y: 0}, {x: 1, y: 2}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 2}, {x: 2, y: 1}]]
inputs_7.forEach(function (input) {
behaviorSet7(input);
});

function behaviorSet8(input) {
bp.registerBThread(""O_Player_Thread_8_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[0].x, input[0].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_8_2"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[1].x, input[1].y)]},4);
});

bp.registerBThread(""O_Player_Thread_8_3"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[1].x, input[1].y), O(input[0].x, input[0].y), X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[1].x, input[1].y)]},3);
});

}
var inputs_8 = [[{x: 1, y: 2}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 2, y: 2}],
[{x: 2, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}],
[{x: 0, y: 0}, {x: 2, y: 2}]]
inputs_8.forEach(function (input) {
behaviorSet8(input);
});

function behaviorSet9(input) {
bp.registerBThread(""O_Player_Thread_9_1"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y)]});
bp.sync({waitFor:[X(input[3].x, input[3].y), X(input[2].x, input[2].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},2);
});

bp.registerBThread(""O_Player_Thread_9_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y), O(input[2].x, input[2].y)]},8);
});

}
var inputs_9 = [[{x: 2, y: 0}, {x: 1, y: 2}, {x: 1, y: 2}, {x: 0, y: 1}],
[{x: 2, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}],
[{x: 0, y: 0}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 2, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}, {x: 1, y: 2}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}],
[{x: 1, y: 2}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 1, y: 0}]]
inputs_9.forEach(function (input) {
behaviorSet9(input);
});

function behaviorSet10(input) {
bp.registerBThread(""O_Player_Thread_10_1"", function(){
bp.sync({waitFor:[X(input[5].x, input[5].y)]});
bp.sync({waitFor:[O(input[3].x, input[3].y), O(input[6].x, input[6].y), X(input[2].x, input[2].y), X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[5].x, input[5].y), O(input[7].x, input[7].y)]},6);
});

bp.registerBThread(""O_Player_Thread_10_2"", function(){
bp.sync({request:[O(input[6].x, input[6].y)]},2);
});

bp.registerBThread(""O_Player_Thread_10_3"", function(){
bp.sync({waitFor:[X(input[7].x, input[7].y), O(input[3].x, input[3].y), O(input[6].x, input[6].y), O(input[5].x, input[5].y)]});
bp.sync({waitFor:[O(input[7].x, input[7].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[4].x, input[4].y), O(input[3].x, input[3].y), O(input[6].x, input[6].y), O(input[4].x, input[4].y)]},5);
});

bp.registerBThread(""O_Player_Thread_10_4"", function(){
bp.sync({waitFor:[X(input[4].x, input[4].y)]});
bp.sync({waitFor:[X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[4].x, input[4].y), O(input[7].x, input[7].y), O(input[3].x, input[3].y), O(input[2].x, input[2].y)]},9);
});

bp.registerBThread(""O_Player_Thread_10_5"", function(){
bp.sync({waitFor:[X(input[5].x, input[5].y), O(input[2].x, input[2].y), O(input[6].x, input[6].y)]});
bp.sync({request:[O(input[5].x, input[5].y), O(input[0].x, input[0].y), O(input[7].x, input[7].y)]},1);
});

}
var inputs_10 = [[{x: 1, y: 1}, {x: 0, y: 2}, {x: 1, y: 2}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 2}, {x: 0, y: 1}],
[{x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 1}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 0, y: 1}, {x: 2, y: 2}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 1}],
[{x: 1, y: 0}, {x: 1, y: 0}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}],
[{x: 0, y: 0}, {x: 1, y: 0}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 2, y: 2}, {x: 0, y: 0}],
[{x: 2, y: 1}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 1, y: 2}, {x: 2, y: 1}, {x: 0, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 2, y: 2}, {x: 2, y: 2}],
[{x: 0, y: 1}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 2, y: 0}, {x: 2, y: 2}]]
inputs_10.forEach(function (input) {
behaviorSet10(input);
});

"
56,8.0,6.0,45.05636070853462,14.0,7.0,29.0,71.0,13.0,44.0,0.0,14.0,"function behaviorSet1(input) {
bp.registerBThread(""O_Player_Thread_1_1"", function(){
bp.sync({waitFor:[O(input[5].x, input[5].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[5].x, input[5].y)]},2);
});

}
var inputs_1 = [[{x: 0, y: 1}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 0, y: 2}, {x: 1, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 0}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 1, y: 0}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 2, y: 1}],
[{x: 0, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 1}],
[{x: 1, y: 1}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 1}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 1, y: 0}, {x: 0, y: 2}]]
inputs_1.forEach(function (input) {
behaviorSet1(input);
});

function behaviorSet2(input) {
bp.registerBThread(""O_Player_Thread_2_1"", function(){
bp.sync({request:[O(input[6].x, input[6].y), O(input[3].x, input[3].y), O(input[2].x, input[2].y), O(input[2].x, input[2].y)]},4);
});

bp.registerBThread(""O_Player_Thread_2_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[5].x, input[5].y), X(input[7].x, input[7].y)]});
bp.sync({request:[O(input[7].x, input[7].y)]},2);
});

bp.registerBThread(""O_Player_Thread_2_3"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[0].x, input[0].y)]},8);
});

}
var inputs_2 = [[{x: 1, y: 0}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 2, y: 2}, {x: 1, y: 2}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 2, y: 2}, {x: 1, y: 1}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 1, y: 0}],
[{x: 2, y: 2}, {x: 1, y: 2}, {x: 0, y: 2}, {x: 1, y: 2}, {x: 1, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 0, y: 2}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 0, y: 2}],
[{x: 1, y: 0}, {x: 0, y: 0}, {x: 0, y: 1}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 0, y: 2}]]
inputs_2.forEach(function (input) {
behaviorSet2(input);
});

function behaviorSet3(input) {
bp.registerBThread(""O_Player_Thread_3_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y)]},9);
});

bp.registerBThread(""O_Player_Thread_3_2"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), O(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y)]},4);
});

bp.registerBThread(""O_Player_Thread_3_3"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y), X(input[2].x, input[2].y), O(input[1].x, input[1].y), X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y)]},10);
});

bp.registerBThread(""O_Player_Thread_3_4"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[1].x, input[1].y)]});
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},11);
});

bp.registerBThread(""O_Player_Thread_3_5"", function(){
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},10);
});

}
var inputs_3 = [[{x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}],
[{x: 1, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}],
[{x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 0}]]
inputs_3.forEach(function (input) {
behaviorSet3(input);
});

function behaviorSet4(input) {
bp.registerBThread(""O_Player_Thread_4_1"", function(){
bp.sync({waitFor:[O(input[4].x, input[4].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_4_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[3].x, input[3].y)]},8);
});

}
var inputs_4 = [[{x: 2, y: 0}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 2, y: 1}, {x: 1, y: 0}],
[{x: 2, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 0, y: 0}],
[{x: 0, y: 2}, {x: 1, y: 2}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 0, y: 0}],
[{x: 1, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 2, y: 0}, {x: 0, y: 0}],
[{x: 2, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 2, y: 2}]]
inputs_4.forEach(function (input) {
behaviorSet4(input);
});

function behaviorSet5(input) {
bp.registerBThread(""O_Player_Thread_5_1"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[1].x, input[1].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},3);
});

bp.registerBThread(""O_Player_Thread_5_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},9);
});

bp.registerBThread(""O_Player_Thread_5_3"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({waitFor:[X(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y), O(input[1].x, input[1].y)]},11);
});

}
var inputs_5 = [[{x: 1, y: 0}, {x: 1, y: 1}, {x: 1, y: 2}],
[{x: 2, y: 2}, {x: 0, y: 2}, {x: 2, y: 1}]]
inputs_5.forEach(function (input) {
behaviorSet5(input);
});

function behaviorSet6(input) {
bp.registerBThread(""O_Player_Thread_6_1"", function(){
bp.sync({waitFor:[O(input[1].x, input[1].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_6_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[1].x, input[1].y), O(input[1].x, input[1].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},10);
});

bp.registerBThread(""O_Player_Thread_6_3"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_6_4"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[1].x, input[1].y)]},3);
});

}
var inputs_6 = [[{x: 0, y: 2}, {x: 1, y: 0}],
[{x: 0, y: 0}, {x: 1, y: 2}]]
inputs_6.forEach(function (input) {
behaviorSet6(input);
});

function behaviorSet7(input) {
bp.registerBThread(""O_Player_Thread_7_1"", function(){
bp.sync({request:[O(input[4].x, input[4].y), O(input[3].x, input[3].y), O(input[1].x, input[1].y), O(input[4].x, input[4].y)]},2);
});

}
var inputs_7 = [[{x: 0, y: 1}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 1, y: 2}, {x: 1, y: 2}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 1, y: 2}],
[{x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 0, y: 2}],
[{x: 0, y: 1}, {x: 0, y: 2}, {x: 1, y: 1}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 2, y: 0}],
[{x: 1, y: 2}, {x: 0, y: 2}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 0, y: 0}, {x: 1, y: 2}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 2}, {x: 2, y: 1}]]
inputs_7.forEach(function (input) {
behaviorSet7(input);
});

function behaviorSet8(input) {
bp.registerBThread(""O_Player_Thread_8_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[0].x, input[0].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_8_2"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[1].x, input[1].y)]},4);
});

bp.registerBThread(""O_Player_Thread_8_3"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[1].x, input[1].y), O(input[0].x, input[0].y), X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[1].x, input[1].y)]},3);
});

}
var inputs_8 = [[{x: 1, y: 2}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 2, y: 2}],
[{x: 2, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}],
[{x: 0, y: 0}, {x: 2, y: 2}]]
inputs_8.forEach(function (input) {
behaviorSet8(input);
});

function behaviorSet9(input) {
bp.registerBThread(""O_Player_Thread_9_1"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y)]});
bp.sync({waitFor:[X(input[3].x, input[3].y), X(input[2].x, input[2].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},2);
});

bp.registerBThread(""O_Player_Thread_9_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y), O(input[2].x, input[2].y)]},8);
});

}
var inputs_9 = [[{x: 2, y: 0}, {x: 1, y: 2}, {x: 1, y: 2}, {x: 0, y: 1}],
[{x: 2, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}],
[{x: 0, y: 0}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 2, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}, {x: 1, y: 2}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}],
[{x: 1, y: 2}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 1, y: 0}]]
inputs_9.forEach(function (input) {
behaviorSet9(input);
});

function behaviorSet10(input) {
bp.registerBThread(""O_Player_Thread_10_1"", function(){
bp.sync({waitFor:[X(input[5].x, input[5].y)]});
bp.sync({waitFor:[O(input[3].x, input[3].y), O(input[6].x, input[6].y), X(input[2].x, input[2].y), X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[5].x, input[5].y), O(input[7].x, input[7].y)]},6);
});

bp.registerBThread(""O_Player_Thread_10_2"", function(){
bp.sync({request:[O(input[6].x, input[6].y)]},2);
});

bp.registerBThread(""O_Player_Thread_10_3"", function(){
bp.sync({waitFor:[X(input[7].x, input[7].y), O(input[3].x, input[3].y), O(input[6].x, input[6].y), O(input[5].x, input[5].y)]});
bp.sync({waitFor:[O(input[7].x, input[7].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[4].x, input[4].y), O(input[3].x, input[3].y), O(input[6].x, input[6].y), O(input[4].x, input[4].y)]},5);
});

bp.registerBThread(""O_Player_Thread_10_4"", function(){
bp.sync({waitFor:[X(input[4].x, input[4].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[4].x, input[4].y), O(input[7].x, input[7].y), O(input[3].x, input[3].y), O(input[2].x, input[2].y)]},9);
});

bp.registerBThread(""O_Player_Thread_10_5"", function(){
bp.sync({waitFor:[X(input[5].x, input[5].y), O(input[2].x, input[2].y), O(input[6].x, input[6].y)]});
bp.sync({request:[O(input[5].x, input[5].y), O(input[0].x, input[0].y), O(input[7].x, input[7].y)]},1);
});

}
var inputs_10 = [[{x: 1, y: 1}, {x: 0, y: 2}, {x: 1, y: 2}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 2}, {x: 0, y: 1}],
[{x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 1}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 0, y: 1}, {x: 2, y: 2}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 1}],
[{x: 1, y: 0}, {x: 1, y: 0}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}],
[{x: 0, y: 0}, {x: 1, y: 0}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 2, y: 2}, {x: 0, y: 0}],
[{x: 2, y: 1}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 1, y: 2}, {x: 2, y: 1}, {x: 0, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 2, y: 2}, {x: 2, y: 2}],
[{x: 0, y: 1}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 2, y: 0}, {x: 2, y: 2}]]
inputs_10.forEach(function (input) {
behaviorSet10(input);
});

"
57,8.0,10.0,43.89483065953654,17.0,4.0,29.0,65.0,16.0,37.0,0.0,12.0,"function behaviorSet1(input) {
bp.registerBThread(""O_Player_Thread_1_1"", function(){
bp.sync({waitFor:[O(input[5].x, input[5].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[5].x, input[5].y)]},2);
});

}
var inputs_1 = [[{x: 0, y: 1}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 0, y: 2}, {x: 1, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 0}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 1, y: 0}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 2, y: 1}],
[{x: 0, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 1}],
[{x: 1, y: 1}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 1}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 1, y: 0}, {x: 0, y: 2}]]
inputs_1.forEach(function (input) {
behaviorSet1(input);
});

function behaviorSet2(input) {
bp.registerBThread(""O_Player_Thread_2_1"", function(){
bp.sync({request:[O(input[6].x, input[6].y), O(input[3].x, input[3].y), O(input[2].x, input[2].y), O(input[2].x, input[2].y)]},4);
});

bp.registerBThread(""O_Player_Thread_2_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[5].x, input[5].y), X(input[7].x, input[7].y)]});
bp.sync({request:[O(input[7].x, input[7].y)]},2);
});

bp.registerBThread(""O_Player_Thread_2_3"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[0].x, input[0].y)]},8);
});

}
var inputs_2 = [[{x: 1, y: 0}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 2, y: 2}, {x: 1, y: 2}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 2, y: 2}, {x: 1, y: 1}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 1, y: 0}],
[{x: 2, y: 2}, {x: 1, y: 2}, {x: 0, y: 2}, {x: 1, y: 2}, {x: 1, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 0, y: 2}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 0, y: 2}],
[{x: 1, y: 0}, {x: 0, y: 0}, {x: 0, y: 1}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 0, y: 2}]]
inputs_2.forEach(function (input) {
behaviorSet2(input);
});

function behaviorSet3(input) {
bp.registerBThread(""O_Player_Thread_3_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y)]},9);
});

bp.registerBThread(""O_Player_Thread_3_2"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), O(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y)]},4);
});

bp.registerBThread(""O_Player_Thread_3_3"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y), X(input[2].x, input[2].y), O(input[1].x, input[1].y), X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y)]},10);
});

bp.registerBThread(""O_Player_Thread_3_4"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[1].x, input[1].y)]});
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},11);
});

bp.registerBThread(""O_Player_Thread_3_5"", function(){
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},10);
});

}
var inputs_3 = [[{x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}],
[{x: 1, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}],
[{x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 0}]]
inputs_3.forEach(function (input) {
behaviorSet3(input);
});

function behaviorSet4(input) {
bp.registerBThread(""O_Player_Thread_4_1"", function(){
bp.sync({waitFor:[O(input[4].x, input[4].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[3].x, input[3].y)]},7);
});

bp.registerBThread(""O_Player_Thread_4_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[3].x, input[3].y)]},8);
});

}
var inputs_4 = [[{x: 2, y: 0}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 2, y: 1}, {x: 1, y: 0}],
[{x: 0, y: 1}, {x: 2, y: 0}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}],
[{x: 0, y: 2}, {x: 1, y: 2}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 0, y: 0}],
[{x: 1, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 2, y: 0}, {x: 0, y: 0}],
[{x: 2, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 2, y: 2}]]
inputs_4.forEach(function (input) {
behaviorSet4(input);
});

function behaviorSet5(input) {
bp.registerBThread(""O_Player_Thread_5_1"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[1].x, input[1].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},3);
});

bp.registerBThread(""O_Player_Thread_5_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},9);
});

bp.registerBThread(""O_Player_Thread_5_3"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({waitFor:[X(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y), O(input[1].x, input[1].y)]},11);
});

}
var inputs_5 = [[{x: 1, y: 0}, {x: 1, y: 1}, {x: 1, y: 2}],
[{x: 2, y: 2}, {x: 0, y: 2}, {x: 2, y: 1}]]
inputs_5.forEach(function (input) {
behaviorSet5(input);
});

function behaviorSet6(input) {
bp.registerBThread(""O_Player_Thread_6_1"", function(){
bp.sync({waitFor:[O(input[1].x, input[1].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_6_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[1].x, input[1].y), O(input[1].x, input[1].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},10);
});

bp.registerBThread(""O_Player_Thread_6_3"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_6_4"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[1].x, input[1].y)]},3);
});

}
var inputs_6 = [[{x: 0, y: 2}, {x: 1, y: 0}],
[{x: 0, y: 0}, {x: 1, y: 2}]]
inputs_6.forEach(function (input) {
behaviorSet6(input);
});

function behaviorSet7(input) {
bp.registerBThread(""O_Player_Thread_7_1"", function(){
bp.sync({request:[O(input[4].x, input[4].y), O(input[3].x, input[3].y), O(input[1].x, input[1].y), O(input[4].x, input[4].y)]},2);
});

}
var inputs_7 = [[{x: 0, y: 1}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 1, y: 2}, {x: 1, y: 2}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 1, y: 2}],
[{x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 0, y: 2}],
[{x: 0, y: 1}, {x: 0, y: 2}, {x: 1, y: 1}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 2, y: 0}],
[{x: 1, y: 2}, {x: 0, y: 2}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 0, y: 0}, {x: 1, y: 2}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 2}, {x: 2, y: 1}]]
inputs_7.forEach(function (input) {
behaviorSet7(input);
});

function behaviorSet8(input) {
bp.registerBThread(""O_Player_Thread_8_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[0].x, input[0].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_8_2"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[1].x, input[1].y)]},4);
});

bp.registerBThread(""O_Player_Thread_8_3"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[1].x, input[1].y), O(input[0].x, input[0].y), X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[1].x, input[1].y)]},3);
});

}
var inputs_8 = [[{x: 1, y: 2}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 2, y: 2}],
[{x: 2, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}],
[{x: 0, y: 0}, {x: 2, y: 2}]]
inputs_8.forEach(function (input) {
behaviorSet8(input);
});

function behaviorSet9(input) {
bp.registerBThread(""O_Player_Thread_9_1"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y)]});
bp.sync({waitFor:[X(input[3].x, input[3].y), X(input[2].x, input[2].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},2);
});

bp.registerBThread(""O_Player_Thread_9_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y), O(input[2].x, input[2].y)]},8);
});

}
var inputs_9 = [[{x: 2, y: 0}, {x: 1, y: 2}, {x: 1, y: 2}, {x: 0, y: 1}],
[{x: 2, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}],
[{x: 0, y: 0}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 2, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}, {x: 1, y: 2}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}],
[{x: 1, y: 2}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 1, y: 0}]]
inputs_9.forEach(function (input) {
behaviorSet9(input);
});

function behaviorSet10(input) {
bp.registerBThread(""O_Player_Thread_10_1"", function(){
bp.sync({waitFor:[X(input[5].x, input[5].y)]});
bp.sync({waitFor:[O(input[3].x, input[3].y), O(input[6].x, input[6].y), X(input[2].x, input[2].y), X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[5].x, input[5].y), O(input[7].x, input[7].y)]},6);
});

bp.registerBThread(""O_Player_Thread_10_2"", function(){
bp.sync({request:[O(input[6].x, input[6].y)]},2);
});

bp.registerBThread(""O_Player_Thread_10_3"", function(){
bp.sync({waitFor:[X(input[7].x, input[7].y), O(input[3].x, input[3].y), O(input[6].x, input[6].y), O(input[5].x, input[5].y)]});
bp.sync({waitFor:[O(input[7].x, input[7].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[4].x, input[4].y), O(input[3].x, input[3].y), O(input[6].x, input[6].y), O(input[4].x, input[4].y)]},5);
});

bp.registerBThread(""O_Player_Thread_10_4"", function(){
bp.sync({waitFor:[X(input[4].x, input[4].y)]});
bp.sync({waitFor:[X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[4].x, input[4].y), O(input[7].x, input[7].y), O(input[3].x, input[3].y), O(input[2].x, input[2].y)]},9);
});

bp.registerBThread(""O_Player_Thread_10_5"", function(){
bp.sync({waitFor:[X(input[5].x, input[5].y), O(input[2].x, input[2].y), O(input[6].x, input[6].y)]});
bp.sync({request:[O(input[5].x, input[5].y), O(input[0].x, input[0].y), O(input[7].x, input[7].y)]},1);
});

}
var inputs_10 = [[{x: 1, y: 1}, {x: 0, y: 2}, {x: 1, y: 2}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 2}, {x: 0, y: 1}],
[{x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 1}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 0, y: 1}, {x: 2, y: 2}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 1}],
[{x: 1, y: 0}, {x: 1, y: 0}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}],
[{x: 0, y: 0}, {x: 1, y: 0}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 2, y: 2}, {x: 0, y: 0}],
[{x: 2, y: 1}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 1, y: 2}, {x: 2, y: 1}, {x: 0, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 2, y: 2}, {x: 2, y: 2}],
[{x: 0, y: 1}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 2, y: 0}, {x: 2, y: 2}]]
inputs_10.forEach(function (input) {
behaviorSet10(input);
});

"
58,9.0,1.0,43.68815592203898,15.0,3.0,32.0,74.0,14.0,41.0,0.0,13.0,"function behaviorSet1(input) {
bp.registerBThread(""O_Player_Thread_1_1"", function(){
bp.sync({waitFor:[O(input[5].x, input[5].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[5].x, input[5].y)]},2);
});

}
var inputs_1 = [[{x: 0, y: 1}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 0, y: 2}, {x: 1, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 0}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 1, y: 0}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 2, y: 1}],
[{x: 0, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 1}],
[{x: 1, y: 1}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 1}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 1, y: 0}, {x: 0, y: 2}]]
inputs_1.forEach(function (input) {
behaviorSet1(input);
});

function behaviorSet2(input) {
bp.registerBThread(""O_Player_Thread_2_1"", function(){
bp.sync({request:[O(input[6].x, input[6].y), O(input[3].x, input[3].y), O(input[2].x, input[2].y), O(input[2].x, input[2].y)]},4);
});

bp.registerBThread(""O_Player_Thread_2_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[5].x, input[5].y), X(input[7].x, input[7].y)]});
bp.sync({request:[O(input[7].x, input[7].y)]},2);
});

bp.registerBThread(""O_Player_Thread_2_3"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[0].x, input[0].y)]},8);
});

}
var inputs_2 = [[{x: 1, y: 0}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 2, y: 2}, {x: 1, y: 2}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 2, y: 2}, {x: 1, y: 1}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 1, y: 0}],
[{x: 2, y: 2}, {x: 1, y: 2}, {x: 0, y: 2}, {x: 1, y: 2}, {x: 1, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 0, y: 2}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 0, y: 2}],
[{x: 1, y: 0}, {x: 0, y: 0}, {x: 0, y: 1}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 0, y: 2}]]
inputs_2.forEach(function (input) {
behaviorSet2(input);
});

function behaviorSet3(input) {
bp.registerBThread(""O_Player_Thread_3_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y)]},9);
});

bp.registerBThread(""O_Player_Thread_3_2"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), O(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y)]},4);
});

bp.registerBThread(""O_Player_Thread_3_3"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y), X(input[2].x, input[2].y), O(input[1].x, input[1].y), X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y)]},10);
});

bp.registerBThread(""O_Player_Thread_3_4"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[1].x, input[1].y)]});
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},11);
});

bp.registerBThread(""O_Player_Thread_3_5"", function(){
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},10);
});

}
var inputs_3 = [[{x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}],
[{x: 1, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}],
[{x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 0}]]
inputs_3.forEach(function (input) {
behaviorSet3(input);
});

function behaviorSet4(input) {
bp.registerBThread(""O_Player_Thread_4_1"", function(){
bp.sync({waitFor:[O(input[4].x, input[4].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_4_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[3].x, input[3].y)]},8);
});

}
var inputs_4 = [[{x: 2, y: 0}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 2, y: 1}, {x: 1, y: 0}],
[{x: 2, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 0, y: 0}],
[{x: 0, y: 2}, {x: 1, y: 2}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 0, y: 0}],
[{x: 1, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 2, y: 0}, {x: 0, y: 0}],
[{x: 2, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 2, y: 2}]]
inputs_4.forEach(function (input) {
behaviorSet4(input);
});

function behaviorSet5(input) {
bp.registerBThread(""O_Player_Thread_5_1"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[1].x, input[1].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},3);
});

bp.registerBThread(""O_Player_Thread_5_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},9);
});

bp.registerBThread(""O_Player_Thread_5_3"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({waitFor:[X(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y), O(input[1].x, input[1].y)]},11);
});

}
var inputs_5 = [[{x: 1, y: 0}, {x: 1, y: 1}, {x: 1, y: 2}],
[{x: 2, y: 2}, {x: 0, y: 2}, {x: 2, y: 1}]]
inputs_5.forEach(function (input) {
behaviorSet5(input);
});

function behaviorSet6(input) {
bp.registerBThread(""O_Player_Thread_6_1"", function(){
bp.sync({waitFor:[O(input[1].x, input[1].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_6_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[1].x, input[1].y), O(input[1].x, input[1].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},10);
});

bp.registerBThread(""O_Player_Thread_6_3"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_6_4"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[1].x, input[1].y)]},3);
});

}
var inputs_6 = [[{x: 0, y: 2}, {x: 1, y: 0}],
[{x: 0, y: 0}, {x: 1, y: 2}]]
inputs_6.forEach(function (input) {
behaviorSet6(input);
});

function behaviorSet7(input) {
bp.registerBThread(""O_Player_Thread_7_1"", function(){
bp.sync({request:[O(input[4].x, input[4].y), O(input[3].x, input[3].y), O(input[1].x, input[1].y), O(input[4].x, input[4].y)]},2);
});

}
var inputs_7 = [[{x: 0, y: 1}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 1, y: 2}, {x: 1, y: 2}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 1, y: 2}],
[{x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 0, y: 2}],
[{x: 0, y: 1}, {x: 0, y: 2}, {x: 1, y: 1}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 2, y: 0}],
[{x: 1, y: 2}, {x: 0, y: 2}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 0, y: 0}, {x: 1, y: 2}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 2}, {x: 2, y: 1}]]
inputs_7.forEach(function (input) {
behaviorSet7(input);
});

function behaviorSet8(input) {
bp.registerBThread(""O_Player_Thread_8_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[0].x, input[0].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_8_2"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[1].x, input[1].y)]},4);
});

bp.registerBThread(""O_Player_Thread_8_3"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[1].x, input[1].y), O(input[0].x, input[0].y), X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[1].x, input[1].y)]},3);
});

}
var inputs_8 = [[{x: 1, y: 2}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 2, y: 2}],
[{x: 2, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}],
[{x: 0, y: 0}, {x: 2, y: 2}]]
inputs_8.forEach(function (input) {
behaviorSet8(input);
});

function behaviorSet9(input) {
bp.registerBThread(""O_Player_Thread_9_1"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y)]});
bp.sync({waitFor:[X(input[3].x, input[3].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[0].x, input[0].y)]},2);
});

bp.registerBThread(""O_Player_Thread_9_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y), O(input[2].x, input[2].y)]},8);
});

}
var inputs_9 = [[{x: 2, y: 0}, {x: 1, y: 2}, {x: 1, y: 2}, {x: 0, y: 1}],
[{x: 2, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}],
[{x: 0, y: 0}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 2, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}, {x: 1, y: 2}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}],
[{x: 1, y: 2}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 1, y: 0}]]
inputs_9.forEach(function (input) {
behaviorSet9(input);
});

function behaviorSet10(input) {
bp.registerBThread(""O_Player_Thread_10_1"", function(){
bp.sync({waitFor:[X(input[5].x, input[5].y)]});
bp.sync({waitFor:[O(input[3].x, input[3].y), O(input[6].x, input[6].y), X(input[2].x, input[2].y), X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[5].x, input[5].y), O(input[7].x, input[7].y)]},6);
});

bp.registerBThread(""O_Player_Thread_10_2"", function(){
bp.sync({request:[O(input[6].x, input[6].y)]},2);
});

bp.registerBThread(""O_Player_Thread_10_3"", function(){
bp.sync({waitFor:[X(input[7].x, input[7].y), O(input[3].x, input[3].y), O(input[6].x, input[6].y), O(input[5].x, input[5].y)]});
bp.sync({waitFor:[O(input[7].x, input[7].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[4].x, input[4].y), O(input[3].x, input[3].y), O(input[6].x, input[6].y), O(input[4].x, input[4].y)]},5);
});

bp.registerBThread(""O_Player_Thread_10_4"", function(){
bp.sync({waitFor:[X(input[4].x, input[4].y)]});
bp.sync({waitFor:[X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[4].x, input[4].y), O(input[7].x, input[7].y), O(input[3].x, input[3].y), O(input[2].x, input[2].y)]},9);
});

bp.registerBThread(""O_Player_Thread_10_5"", function(){
bp.sync({waitFor:[X(input[5].x, input[5].y), O(input[2].x, input[2].y), O(input[6].x, input[6].y)]});
bp.sync({request:[O(input[5].x, input[5].y), O(input[0].x, input[0].y), O(input[7].x, input[7].y)]},1);
});

}
var inputs_10 = [[{x: 1, y: 1}, {x: 0, y: 2}, {x: 1, y: 2}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 2}, {x: 0, y: 1}],
[{x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 1}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 0, y: 1}, {x: 2, y: 2}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 1}],
[{x: 1, y: 0}, {x: 1, y: 0}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}],
[{x: 0, y: 0}, {x: 1, y: 0}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 2, y: 2}, {x: 0, y: 0}],
[{x: 2, y: 1}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 1, y: 2}, {x: 2, y: 1}, {x: 0, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 2, y: 2}, {x: 2, y: 2}],
[{x: 0, y: 1}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 2, y: 0}, {x: 2, y: 2}]]
inputs_10.forEach(function (input) {
behaviorSet10(input);
});

"
59,9.0,2.0,41.78612385321101,15.0,5.0,30.0,69.0,17.0,40.0,0.0,11.0,"function behaviorSet1(input) {
bp.registerBThread(""O_Player_Thread_1_1"", function(){
bp.sync({waitFor:[O(input[5].x, input[5].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[5].x, input[5].y)]},2);
});

}
var inputs_1 = [[{x: 0, y: 1}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 0, y: 2}, {x: 1, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 0}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 1, y: 0}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 2, y: 1}],
[{x: 0, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 1}],
[{x: 1, y: 1}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 1}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 1, y: 0}, {x: 0, y: 2}]]
inputs_1.forEach(function (input) {
behaviorSet1(input);
});

function behaviorSet2(input) {
bp.registerBThread(""O_Player_Thread_2_1"", function(){
bp.sync({request:[O(input[6].x, input[6].y), O(input[3].x, input[3].y), O(input[2].x, input[2].y), O(input[2].x, input[2].y)]},4);
});

bp.registerBThread(""O_Player_Thread_2_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[5].x, input[5].y), X(input[7].x, input[7].y)]});
bp.sync({request:[O(input[7].x, input[7].y)]},2);
});

bp.registerBThread(""O_Player_Thread_2_3"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[0].x, input[0].y)]},8);
});

}
var inputs_2 = [[{x: 1, y: 0}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 2, y: 2}, {x: 1, y: 2}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 2, y: 2}, {x: 1, y: 1}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 1, y: 0}],
[{x: 2, y: 2}, {x: 1, y: 2}, {x: 0, y: 2}, {x: 1, y: 2}, {x: 1, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 0, y: 2}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 0, y: 2}],
[{x: 1, y: 0}, {x: 0, y: 0}, {x: 0, y: 1}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 0, y: 2}]]
inputs_2.forEach(function (input) {
behaviorSet2(input);
});

function behaviorSet3(input) {
bp.registerBThread(""O_Player_Thread_3_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y)]},9);
});

bp.registerBThread(""O_Player_Thread_3_2"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), O(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y)]},4);
});

bp.registerBThread(""O_Player_Thread_3_3"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y), X(input[2].x, input[2].y), O(input[1].x, input[1].y), X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y)]},10);
});

bp.registerBThread(""O_Player_Thread_3_4"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[1].x, input[1].y)]});
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},11);
});

bp.registerBThread(""O_Player_Thread_3_5"", function(){
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},10);
});

}
var inputs_3 = [[{x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}],
[{x: 1, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}],
[{x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 0}]]
inputs_3.forEach(function (input) {
behaviorSet3(input);
});

function behaviorSet4(input) {
bp.registerBThread(""O_Player_Thread_4_1"", function(){
bp.sync({waitFor:[O(input[4].x, input[4].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_4_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y)]},8);
});

}
var inputs_4 = [[{x: 2, y: 0}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 2, y: 1}, {x: 1, y: 0}],
[{x: 2, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 0, y: 0}],
[{x: 0, y: 2}, {x: 1, y: 2}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 0, y: 0}],
[{x: 1, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 2, y: 0}, {x: 0, y: 0}],
[{x: 2, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 2, y: 2}]]
inputs_4.forEach(function (input) {
behaviorSet4(input);
});

function behaviorSet5(input) {
bp.registerBThread(""O_Player_Thread_5_1"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[1].x, input[1].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},3);
});

bp.registerBThread(""O_Player_Thread_5_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},9);
});

bp.registerBThread(""O_Player_Thread_5_3"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({waitFor:[X(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y), O(input[1].x, input[1].y)]},11);
});

}
var inputs_5 = [[{x: 1, y: 0}, {x: 1, y: 1}, {x: 1, y: 2}],
[{x: 2, y: 2}, {x: 0, y: 2}, {x: 2, y: 1}]]
inputs_5.forEach(function (input) {
behaviorSet5(input);
});

function behaviorSet6(input) {
bp.registerBThread(""O_Player_Thread_6_1"", function(){
bp.sync({waitFor:[O(input[1].x, input[1].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_6_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[1].x, input[1].y), O(input[1].x, input[1].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},10);
});

bp.registerBThread(""O_Player_Thread_6_3"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_6_4"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[1].x, input[1].y)]},3);
});

}
var inputs_6 = [[{x: 0, y: 2}, {x: 1, y: 0}],
[{x: 0, y: 0}, {x: 1, y: 2}]]
inputs_6.forEach(function (input) {
behaviorSet6(input);
});

function behaviorSet7(input) {
bp.registerBThread(""O_Player_Thread_7_1"", function(){
bp.sync({request:[O(input[4].x, input[4].y), O(input[3].x, input[3].y), O(input[1].x, input[1].y), O(input[4].x, input[4].y)]},2);
});

}
var inputs_7 = [[{x: 0, y: 1}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 1, y: 2}, {x: 1, y: 2}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 1, y: 2}],
[{x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 0, y: 2}],
[{x: 0, y: 1}, {x: 0, y: 2}, {x: 1, y: 1}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 2, y: 0}],
[{x: 1, y: 2}, {x: 0, y: 2}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 0, y: 0}, {x: 1, y: 2}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 2}, {x: 2, y: 1}]]
inputs_7.forEach(function (input) {
behaviorSet7(input);
});

function behaviorSet8(input) {
bp.registerBThread(""O_Player_Thread_8_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[0].x, input[0].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_8_2"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[1].x, input[1].y)]},4);
});

bp.registerBThread(""O_Player_Thread_8_3"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[1].x, input[1].y), O(input[0].x, input[0].y), X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[1].x, input[1].y)]},3);
});

}
var inputs_8 = [[{x: 1, y: 2}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 2, y: 2}],
[{x: 2, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}],
[{x: 0, y: 0}, {x: 2, y: 2}]]
inputs_8.forEach(function (input) {
behaviorSet8(input);
});

function behaviorSet9(input) {
bp.registerBThread(""O_Player_Thread_9_1"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y)]});
bp.sync({waitFor:[X(input[3].x, input[3].y), X(input[2].x, input[2].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},2);
});

bp.registerBThread(""O_Player_Thread_9_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y), O(input[2].x, input[2].y)]},8);
});

}
var inputs_9 = [[{x: 2, y: 0}, {x: 1, y: 2}, {x: 1, y: 2}, {x: 0, y: 1}],
[{x: 2, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}],
[{x: 0, y: 0}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 2, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}, {x: 1, y: 2}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}],
[{x: 1, y: 2}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 1, y: 0}]]
inputs_9.forEach(function (input) {
behaviorSet9(input);
});

function behaviorSet10(input) {
bp.registerBThread(""O_Player_Thread_10_1"", function(){
bp.sync({waitFor:[X(input[5].x, input[5].y)]});
bp.sync({waitFor:[O(input[3].x, input[3].y), O(input[6].x, input[6].y), X(input[2].x, input[2].y), X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[5].x, input[5].y), O(input[7].x, input[7].y)]},6);
});

bp.registerBThread(""O_Player_Thread_10_2"", function(){
bp.sync({request:[O(input[6].x, input[6].y)]},2);
});

bp.registerBThread(""O_Player_Thread_10_3"", function(){
bp.sync({waitFor:[X(input[7].x, input[7].y), O(input[3].x, input[3].y), O(input[6].x, input[6].y), O(input[5].x, input[5].y)]});
bp.sync({waitFor:[O(input[7].x, input[7].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[4].x, input[4].y), O(input[3].x, input[3].y), O(input[6].x, input[6].y), O(input[4].x, input[4].y)]},5);
});

bp.registerBThread(""O_Player_Thread_10_4"", function(){
bp.sync({waitFor:[X(input[4].x, input[4].y)]});
bp.sync({waitFor:[X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[4].x, input[4].y), O(input[7].x, input[7].y), O(input[3].x, input[3].y), O(input[2].x, input[2].y)]},9);
});

bp.registerBThread(""O_Player_Thread_10_5"", function(){
bp.sync({waitFor:[X(input[5].x, input[5].y), O(input[2].x, input[2].y), O(input[6].x, input[6].y)]});
bp.sync({request:[O(input[5].x, input[5].y), O(input[0].x, input[0].y), O(input[7].x, input[7].y)]},1);
});

}
var inputs_10 = [[{x: 1, y: 1}, {x: 0, y: 2}, {x: 1, y: 2}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 2}, {x: 0, y: 1}],
[{x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 1}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 0, y: 1}, {x: 2, y: 2}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 1}],
[{x: 1, y: 0}, {x: 1, y: 0}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}],
[{x: 0, y: 0}, {x: 1, y: 0}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 2, y: 2}, {x: 0, y: 0}],
[{x: 2, y: 1}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 1, y: 2}, {x: 2, y: 1}, {x: 0, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 2, y: 2}, {x: 2, y: 2}],
[{x: 0, y: 1}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 2, y: 0}, {x: 2, y: 2}]]
inputs_10.forEach(function (input) {
behaviorSet10(input);
});

"
60,9.0,4.0,47.66666666666667,24.0,8.0,18.0,58.0,21.0,42.0,0.0,23.0,"function behaviorSet1(input) {
bp.registerBThread(""O_Player_Thread_1_1"", function(){
bp.sync({waitFor:[O(input[5].x, input[5].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[5].x, input[5].y)]},2);
});

}
var inputs_1 = [[{x: 0, y: 1}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 0, y: 2}, {x: 1, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 0}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 1, y: 0}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 2, y: 1}],
[{x: 0, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 1}],
[{x: 1, y: 1}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 1}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 1, y: 0}, {x: 0, y: 2}]]
inputs_1.forEach(function (input) {
behaviorSet1(input);
});

function behaviorSet2(input) {
bp.registerBThread(""O_Player_Thread_2_1"", function(){
bp.sync({request:[O(input[6].x, input[6].y), O(input[3].x, input[3].y), O(input[2].x, input[2].y), O(input[2].x, input[2].y)]},4);
});

bp.registerBThread(""O_Player_Thread_2_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[5].x, input[5].y), X(input[7].x, input[7].y)]});
bp.sync({request:[O(input[7].x, input[7].y)]},2);
});

bp.registerBThread(""O_Player_Thread_2_3"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[0].x, input[0].y)]},8);
});

}
var inputs_2 = [[{x: 1, y: 0}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 2, y: 2}, {x: 1, y: 2}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 2, y: 2}, {x: 1, y: 1}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 1, y: 0}],
[{x: 2, y: 2}, {x: 1, y: 2}, {x: 0, y: 2}, {x: 1, y: 2}, {x: 1, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 0, y: 2}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 0, y: 2}],
[{x: 1, y: 0}, {x: 0, y: 0}, {x: 0, y: 1}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 0, y: 2}]]
inputs_2.forEach(function (input) {
behaviorSet2(input);
});

function behaviorSet3(input) {
bp.registerBThread(""O_Player_Thread_3_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y)]},9);
});

bp.registerBThread(""O_Player_Thread_3_2"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), O(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y)]},4);
});

bp.registerBThread(""O_Player_Thread_3_3"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y), X(input[2].x, input[2].y), O(input[1].x, input[1].y), X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y)]},10);
});

bp.registerBThread(""O_Player_Thread_3_4"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[1].x, input[1].y)]});
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},11);
});

bp.registerBThread(""O_Player_Thread_3_5"", function(){
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},10);
});

}
var inputs_3 = [[{x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}],
[{x: 1, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}],
[{x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 0}]]
inputs_3.forEach(function (input) {
behaviorSet3(input);
});

function behaviorSet4(input) {
bp.registerBThread(""O_Player_Thread_4_1"", function(){
bp.sync({waitFor:[O(input[4].x, input[4].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_4_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y)]},8);
});

}
var inputs_4 = [[{x: 2, y: 0}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 2, y: 1}, {x: 1, y: 0}],
[{x: 2, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 0, y: 0}],
[{x: 0, y: 2}, {x: 1, y: 2}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 0, y: 0}],
[{x: 1, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 2, y: 0}, {x: 0, y: 0}],
[{x: 2, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 2, y: 2}]]
inputs_4.forEach(function (input) {
behaviorSet4(input);
});

function behaviorSet5(input) {
bp.registerBThread(""O_Player_Thread_5_1"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[1].x, input[1].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},3);
});

bp.registerBThread(""O_Player_Thread_5_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},9);
});

bp.registerBThread(""O_Player_Thread_5_3"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({waitFor:[X(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y), O(input[1].x, input[1].y)]},11);
});

}
var inputs_5 = [[{x: 1, y: 0}, {x: 1, y: 1}, {x: 1, y: 2}],
[{x: 2, y: 2}, {x: 0, y: 2}, {x: 2, y: 1}]]
inputs_5.forEach(function (input) {
behaviorSet5(input);
});

function behaviorSet6(input) {
bp.registerBThread(""O_Player_Thread_6_1"", function(){
bp.sync({waitFor:[O(input[1].x, input[1].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_6_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[1].x, input[1].y), O(input[1].x, input[1].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},10);
});

bp.registerBThread(""O_Player_Thread_6_3"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_6_4"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[1].x, input[1].y)]},3);
});

}
var inputs_6 = [[{x: 0, y: 2}, {x: 1, y: 0}],
[{x: 0, y: 0}, {x: 1, y: 2}]]
inputs_6.forEach(function (input) {
behaviorSet6(input);
});

function behaviorSet7(input) {
bp.registerBThread(""O_Player_Thread_7_1"", function(){
bp.sync({request:[O(input[4].x, input[4].y), O(input[3].x, input[3].y), O(input[1].x, input[1].y), O(input[4].x, input[4].y)]},2);
});

}
var inputs_7 = [[{x: 0, y: 1}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 1, y: 2}, {x: 1, y: 2}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 1, y: 2}],
[{x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 0, y: 2}],
[{x: 0, y: 1}, {x: 0, y: 2}, {x: 1, y: 1}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 2, y: 0}],
[{x: 1, y: 2}, {x: 0, y: 2}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 0, y: 0}, {x: 1, y: 2}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 2}, {x: 2, y: 1}]]
inputs_7.forEach(function (input) {
behaviorSet7(input);
});

function behaviorSet8(input) {
bp.registerBThread(""O_Player_Thread_8_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[0].x, input[0].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_8_2"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[1].x, input[1].y)]},4);
});

bp.registerBThread(""O_Player_Thread_8_3"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[1].x, input[1].y), O(input[0].x, input[0].y), X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[1].x, input[1].y)]},3);
});

}
var inputs_8 = [[{x: 1, y: 2}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 2, y: 2}],
[{x: 2, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}],
[{x: 0, y: 0}, {x: 2, y: 2}]]
inputs_8.forEach(function (input) {
behaviorSet8(input);
});

function behaviorSet9(input) {
bp.registerBThread(""O_Player_Thread_9_1"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y)]});
bp.sync({waitFor:[X(input[3].x, input[3].y), X(input[2].x, input[2].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},2);
});

bp.registerBThread(""O_Player_Thread_9_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y), O(input[2].x, input[2].y)]},8);
});

}
var inputs_9 = [[{x: 2, y: 0}, {x: 1, y: 2}, {x: 1, y: 2}, {x: 0, y: 1}],
[{x: 2, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}],
[{x: 0, y: 0}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 2, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}, {x: 1, y: 2}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}],
[{x: 1, y: 2}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 1, y: 0}]]
inputs_9.forEach(function (input) {
behaviorSet9(input);
});

function behaviorSet10(input) {
bp.registerBThread(""O_Player_Thread_10_1"", function(){
bp.sync({waitFor:[X(input[5].x, input[5].y)]});
bp.sync({waitFor:[O(input[3].x, input[3].y), O(input[6].x, input[6].y), X(input[2].x, input[2].y), X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[5].x, input[5].y), O(input[7].x, input[7].y)]},6);
});

bp.registerBThread(""O_Player_Thread_10_2"", function(){
bp.sync({request:[O(input[6].x, input[6].y)]},2);
});

bp.registerBThread(""O_Player_Thread_10_3"", function(){
bp.sync({waitFor:[X(input[7].x, input[7].y), O(input[3].x, input[3].y), O(input[6].x, input[6].y), O(input[5].x, input[5].y)]});
bp.sync({waitFor:[O(input[7].x, input[7].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[4].x, input[4].y), O(input[3].x, input[3].y), O(input[6].x, input[6].y), O(input[4].x, input[4].y)]},5);
});

bp.registerBThread(""O_Player_Thread_10_4"", function(){
bp.sync({waitFor:[X(input[4].x, input[4].y)]});
bp.sync({waitFor:[X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[4].x, input[4].y), O(input[7].x, input[7].y), O(input[3].x, input[3].y), O(input[2].x, input[2].y)]},9);
});

bp.registerBThread(""O_Player_Thread_10_5"", function(){
bp.sync({waitFor:[X(input[5].x, input[5].y), O(input[2].x, input[2].y), O(input[6].x, input[6].y)]});
bp.sync({request:[O(input[5].x, input[5].y), O(input[0].x, input[0].y), O(input[7].x, input[7].y)]},1);
});

}
var inputs_10 = [[{x: 1, y: 1}, {x: 0, y: 2}, {x: 1, y: 2}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 2}, {x: 0, y: 1}],
[{x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 1}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 0, y: 1}, {x: 2, y: 2}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 1}],
[{x: 1, y: 0}, {x: 1, y: 0}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}],
[{x: 0, y: 0}, {x: 1, y: 0}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 2, y: 2}, {x: 0, y: 0}],
[{x: 2, y: 1}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 1, y: 2}, {x: 2, y: 1}, {x: 0, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 2, y: 2}, {x: 2, y: 2}],
[{x: 0, y: 1}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 2, y: 0}, {x: 2, y: 2}]]
inputs_10.forEach(function (input) {
behaviorSet10(input);
});

"
61,9.0,5.0,45.157967032967036,18.0,2.0,30.0,60.0,14.0,31.0,0.0,20.0,"function behaviorSet1(input) {
bp.registerBThread(""O_Player_Thread_1_1"", function(){
bp.sync({waitFor:[O(input[5].x, input[5].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[5].x, input[5].y)]},2);
});

}
var inputs_1 = [[{x: 0, y: 1}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 0, y: 2}, {x: 1, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 0}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 1, y: 0}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 2, y: 1}],
[{x: 0, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 1}],
[{x: 1, y: 1}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 1}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 1, y: 0}, {x: 0, y: 2}]]
inputs_1.forEach(function (input) {
behaviorSet1(input);
});

function behaviorSet2(input) {
bp.registerBThread(""O_Player_Thread_2_1"", function(){
bp.sync({request:[O(input[6].x, input[6].y), O(input[3].x, input[3].y), O(input[2].x, input[2].y), O(input[2].x, input[2].y)]},4);
});

bp.registerBThread(""O_Player_Thread_2_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[5].x, input[5].y), X(input[7].x, input[7].y)]});
bp.sync({request:[O(input[7].x, input[7].y)]},2);
});

bp.registerBThread(""O_Player_Thread_2_3"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[2].x, input[2].y)]},8);
});

}
var inputs_2 = [[{x: 1, y: 0}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 2, y: 2}, {x: 1, y: 2}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 2, y: 2}, {x: 1, y: 1}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 1, y: 0}],
[{x: 2, y: 2}, {x: 1, y: 2}, {x: 0, y: 2}, {x: 1, y: 2}, {x: 1, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 0, y: 2}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 0, y: 2}],
[{x: 1, y: 0}, {x: 0, y: 0}, {x: 0, y: 1}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 0, y: 2}]]
inputs_2.forEach(function (input) {
behaviorSet2(input);
});

function behaviorSet3(input) {
bp.registerBThread(""O_Player_Thread_3_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y)]},9);
});

bp.registerBThread(""O_Player_Thread_3_2"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), O(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y)]},4);
});

bp.registerBThread(""O_Player_Thread_3_3"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y), X(input[2].x, input[2].y), O(input[1].x, input[1].y), X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y)]},10);
});

bp.registerBThread(""O_Player_Thread_3_4"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[1].x, input[1].y)]});
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},11);
});

bp.registerBThread(""O_Player_Thread_3_5"", function(){
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},10);
});

}
var inputs_3 = [[{x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}],
[{x: 1, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}],
[{x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 0}]]
inputs_3.forEach(function (input) {
behaviorSet3(input);
});

function behaviorSet4(input) {
bp.registerBThread(""O_Player_Thread_4_1"", function(){
bp.sync({waitFor:[O(input[4].x, input[4].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_4_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[3].x, input[3].y)]},8);
});

}
var inputs_4 = [[{x: 2, y: 0}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 2, y: 1}, {x: 1, y: 0}],
[{x: 2, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 0, y: 0}],
[{x: 0, y: 2}, {x: 1, y: 2}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 0, y: 0}],
[{x: 1, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 2, y: 0}, {x: 0, y: 0}],
[{x: 2, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 2, y: 2}]]
inputs_4.forEach(function (input) {
behaviorSet4(input);
});

function behaviorSet5(input) {
bp.registerBThread(""O_Player_Thread_5_1"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[1].x, input[1].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},3);
});

bp.registerBThread(""O_Player_Thread_5_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},9);
});

bp.registerBThread(""O_Player_Thread_5_3"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({waitFor:[X(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y), O(input[1].x, input[1].y)]},11);
});

}
var inputs_5 = [[{x: 1, y: 0}, {x: 1, y: 1}, {x: 1, y: 2}],
[{x: 2, y: 2}, {x: 0, y: 2}, {x: 2, y: 1}]]
inputs_5.forEach(function (input) {
behaviorSet5(input);
});

function behaviorSet6(input) {
bp.registerBThread(""O_Player_Thread_6_1"", function(){
bp.sync({waitFor:[O(input[1].x, input[1].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_6_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[1].x, input[1].y), O(input[1].x, input[1].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},10);
});

bp.registerBThread(""O_Player_Thread_6_3"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_6_4"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[1].x, input[1].y)]},3);
});

}
var inputs_6 = [[{x: 0, y: 2}, {x: 1, y: 0}],
[{x: 0, y: 0}, {x: 1, y: 2}]]
inputs_6.forEach(function (input) {
behaviorSet6(input);
});

function behaviorSet7(input) {
bp.registerBThread(""O_Player_Thread_7_1"", function(){
bp.sync({request:[O(input[4].x, input[4].y), O(input[3].x, input[3].y), O(input[1].x, input[1].y), O(input[4].x, input[4].y)]},2);
});

}
var inputs_7 = [[{x: 0, y: 1}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 1, y: 2}, {x: 1, y: 2}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 1, y: 2}],
[{x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 0, y: 2}],
[{x: 0, y: 1}, {x: 0, y: 2}, {x: 1, y: 1}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 2, y: 0}],
[{x: 1, y: 2}, {x: 0, y: 2}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 0, y: 0}, {x: 1, y: 2}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 2}, {x: 2, y: 1}]]
inputs_7.forEach(function (input) {
behaviorSet7(input);
});

function behaviorSet8(input) {
bp.registerBThread(""O_Player_Thread_8_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[0].x, input[0].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_8_2"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[1].x, input[1].y)]},4);
});

bp.registerBThread(""O_Player_Thread_8_3"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[1].x, input[1].y), O(input[0].x, input[0].y), X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[1].x, input[1].y)]},3);
});

}
var inputs_8 = [[{x: 1, y: 2}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 2, y: 2}],
[{x: 2, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}],
[{x: 0, y: 0}, {x: 2, y: 2}]]
inputs_8.forEach(function (input) {
behaviorSet8(input);
});

function behaviorSet9(input) {
bp.registerBThread(""O_Player_Thread_9_1"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y)]});
bp.sync({waitFor:[X(input[3].x, input[3].y), X(input[2].x, input[2].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[0].x, input[0].y)]},2);
});

bp.registerBThread(""O_Player_Thread_9_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y), O(input[2].x, input[2].y)]},8);
});

}
var inputs_9 = [[{x: 2, y: 0}, {x: 1, y: 2}, {x: 1, y: 2}, {x: 0, y: 1}],
[{x: 2, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}],
[{x: 0, y: 0}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 2, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}, {x: 1, y: 2}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}],
[{x: 1, y: 2}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 1, y: 0}]]
inputs_9.forEach(function (input) {
behaviorSet9(input);
});

function behaviorSet10(input) {
bp.registerBThread(""O_Player_Thread_10_1"", function(){
bp.sync({waitFor:[X(input[5].x, input[5].y)]});
bp.sync({waitFor:[O(input[3].x, input[3].y), O(input[6].x, input[6].y), X(input[2].x, input[2].y), X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[5].x, input[5].y), O(input[7].x, input[7].y)]},6);
});

bp.registerBThread(""O_Player_Thread_10_2"", function(){
bp.sync({request:[O(input[6].x, input[6].y)]},2);
});

bp.registerBThread(""O_Player_Thread_10_3"", function(){
bp.sync({waitFor:[X(input[7].x, input[7].y), O(input[3].x, input[3].y), O(input[6].x, input[6].y), O(input[5].x, input[5].y)]});
bp.sync({waitFor:[O(input[7].x, input[7].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[4].x, input[4].y), O(input[3].x, input[3].y), O(input[6].x, input[6].y), O(input[4].x, input[4].y)]},5);
});

bp.registerBThread(""O_Player_Thread_10_4"", function(){
bp.sync({waitFor:[X(input[4].x, input[4].y)]});
bp.sync({waitFor:[X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[4].x, input[4].y), O(input[7].x, input[7].y), O(input[3].x, input[3].y), O(input[2].x, input[2].y)]},9);
});

bp.registerBThread(""O_Player_Thread_10_5"", function(){
bp.sync({waitFor:[X(input[5].x, input[5].y), O(input[2].x, input[2].y), O(input[6].x, input[6].y)]});
bp.sync({request:[O(input[5].x, input[5].y), O(input[0].x, input[0].y), O(input[7].x, input[7].y)]},1);
});

}
var inputs_10 = [[{x: 1, y: 1}, {x: 0, y: 2}, {x: 1, y: 2}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 2}, {x: 0, y: 1}],
[{x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 1}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 0, y: 1}, {x: 2, y: 2}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 1}],
[{x: 1, y: 0}, {x: 1, y: 0}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}],
[{x: 0, y: 0}, {x: 1, y: 0}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 2, y: 2}, {x: 0, y: 0}],
[{x: 2, y: 1}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 1, y: 2}, {x: 2, y: 1}, {x: 0, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 2, y: 2}, {x: 2, y: 2}],
[{x: 0, y: 1}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 2, y: 0}, {x: 2, y: 2}]]
inputs_10.forEach(function (input) {
behaviorSet10(input);
});

"
62,9.0,6.0,44.89583333333333,16.0,7.0,27.0,61.0,14.0,35.0,0.0,10.0,"function behaviorSet1(input) {
bp.registerBThread(""O_Player_Thread_1_1"", function(){
bp.sync({waitFor:[O(input[5].x, input[5].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[5].x, input[5].y)]},2);
});

}
var inputs_1 = [[{x: 0, y: 1}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 0, y: 2}, {x: 1, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 0}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 1, y: 0}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 2, y: 1}],
[{x: 0, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 1}],
[{x: 1, y: 1}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 1}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 1, y: 0}, {x: 0, y: 2}]]
inputs_1.forEach(function (input) {
behaviorSet1(input);
});

function behaviorSet2(input) {
bp.registerBThread(""O_Player_Thread_2_1"", function(){
bp.sync({request:[O(input[6].x, input[6].y), O(input[3].x, input[3].y), O(input[2].x, input[2].y), O(input[2].x, input[2].y)]},4);
});

bp.registerBThread(""O_Player_Thread_2_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[5].x, input[5].y), X(input[7].x, input[7].y)]});
bp.sync({request:[O(input[7].x, input[7].y)]},2);
});

bp.registerBThread(""O_Player_Thread_2_3"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[0].x, input[0].y)]},8);
});

}
var inputs_2 = [[{x: 1, y: 0}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 2, y: 2}, {x: 1, y: 2}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 2, y: 2}, {x: 1, y: 1}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 1, y: 0}],
[{x: 2, y: 2}, {x: 1, y: 2}, {x: 0, y: 2}, {x: 1, y: 2}, {x: 1, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 0, y: 2}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 0, y: 2}],
[{x: 1, y: 0}, {x: 0, y: 0}, {x: 0, y: 1}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 0, y: 2}]]
inputs_2.forEach(function (input) {
behaviorSet2(input);
});

function behaviorSet3(input) {
bp.registerBThread(""O_Player_Thread_3_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y)]},9);
});

bp.registerBThread(""O_Player_Thread_3_2"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), O(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y)]},4);
});

bp.registerBThread(""O_Player_Thread_3_3"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y), X(input[2].x, input[2].y), O(input[1].x, input[1].y), X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y)]},10);
});

bp.registerBThread(""O_Player_Thread_3_4"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[1].x, input[1].y)]});
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},11);
});

bp.registerBThread(""O_Player_Thread_3_5"", function(){
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},10);
});

}
var inputs_3 = [[{x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}],
[{x: 1, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}],
[{x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 0}]]
inputs_3.forEach(function (input) {
behaviorSet3(input);
});

function behaviorSet4(input) {
bp.registerBThread(""O_Player_Thread_4_1"", function(){
bp.sync({waitFor:[O(input[4].x, input[4].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[3].x, input[3].y)]},7);
});

bp.registerBThread(""O_Player_Thread_4_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[3].x, input[3].y)]},8);
});

}
var inputs_4 = [[{x: 2, y: 0}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 2, y: 1}, {x: 1, y: 0}],
[{x: 0, y: 1}, {x: 2, y: 0}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}],
[{x: 0, y: 2}, {x: 1, y: 2}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 0, y: 0}],
[{x: 1, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 2, y: 0}, {x: 0, y: 0}],
[{x: 2, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 2, y: 2}]]
inputs_4.forEach(function (input) {
behaviorSet4(input);
});

function behaviorSet5(input) {
bp.registerBThread(""O_Player_Thread_5_1"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[1].x, input[1].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},3);
});

bp.registerBThread(""O_Player_Thread_5_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},9);
});

bp.registerBThread(""O_Player_Thread_5_3"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({waitFor:[X(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y), O(input[1].x, input[1].y)]},11);
});

}
var inputs_5 = [[{x: 1, y: 0}, {x: 1, y: 1}, {x: 1, y: 2}],
[{x: 2, y: 2}, {x: 0, y: 2}, {x: 2, y: 1}]]
inputs_5.forEach(function (input) {
behaviorSet5(input);
});

function behaviorSet6(input) {
bp.registerBThread(""O_Player_Thread_6_1"", function(){
bp.sync({waitFor:[O(input[1].x, input[1].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_6_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[1].x, input[1].y), O(input[1].x, input[1].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},10);
});

bp.registerBThread(""O_Player_Thread_6_3"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_6_4"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[1].x, input[1].y)]},3);
});

}
var inputs_6 = [[{x: 0, y: 2}, {x: 1, y: 0}],
[{x: 0, y: 0}, {x: 1, y: 2}]]
inputs_6.forEach(function (input) {
behaviorSet6(input);
});

function behaviorSet7(input) {
bp.registerBThread(""O_Player_Thread_7_1"", function(){
bp.sync({request:[O(input[4].x, input[4].y), O(input[3].x, input[3].y), O(input[1].x, input[1].y), O(input[4].x, input[4].y)]},2);
});

}
var inputs_7 = [[{x: 0, y: 1}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 1, y: 2}, {x: 1, y: 2}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 1, y: 2}],
[{x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 0, y: 2}],
[{x: 0, y: 1}, {x: 0, y: 2}, {x: 1, y: 1}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 2, y: 0}],
[{x: 1, y: 2}, {x: 0, y: 2}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 0, y: 0}, {x: 1, y: 2}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 2}, {x: 2, y: 1}]]
inputs_7.forEach(function (input) {
behaviorSet7(input);
});

function behaviorSet8(input) {
bp.registerBThread(""O_Player_Thread_8_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[0].x, input[0].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_8_2"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[1].x, input[1].y)]},4);
});

bp.registerBThread(""O_Player_Thread_8_3"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[1].x, input[1].y), O(input[0].x, input[0].y), X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[1].x, input[1].y)]},3);
});

}
var inputs_8 = [[{x: 1, y: 2}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 2, y: 2}],
[{x: 2, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}],
[{x: 0, y: 0}, {x: 2, y: 2}]]
inputs_8.forEach(function (input) {
behaviorSet8(input);
});

function behaviorSet9(input) {
bp.registerBThread(""O_Player_Thread_9_1"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y)]});
bp.sync({waitFor:[X(input[3].x, input[3].y), X(input[2].x, input[2].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},2);
});

bp.registerBThread(""O_Player_Thread_9_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y), O(input[2].x, input[2].y)]},8);
});

}
var inputs_9 = [[{x: 2, y: 0}, {x: 1, y: 2}, {x: 1, y: 2}, {x: 0, y: 1}],
[{x: 2, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}],
[{x: 0, y: 0}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 2, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}, {x: 1, y: 2}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}],
[{x: 1, y: 2}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 1, y: 0}]]
inputs_9.forEach(function (input) {
behaviorSet9(input);
});

function behaviorSet10(input) {
bp.registerBThread(""O_Player_Thread_10_1"", function(){
bp.sync({waitFor:[X(input[5].x, input[5].y)]});
bp.sync({waitFor:[O(input[3].x, input[3].y), O(input[6].x, input[6].y), X(input[2].x, input[2].y), X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[5].x, input[5].y), O(input[7].x, input[7].y)]},6);
});

bp.registerBThread(""O_Player_Thread_10_2"", function(){
bp.sync({request:[O(input[6].x, input[6].y)]},2);
});

bp.registerBThread(""O_Player_Thread_10_3"", function(){
bp.sync({waitFor:[X(input[7].x, input[7].y), O(input[3].x, input[3].y), O(input[6].x, input[6].y), O(input[5].x, input[5].y)]});
bp.sync({waitFor:[O(input[7].x, input[7].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[4].x, input[4].y), O(input[3].x, input[3].y), O(input[6].x, input[6].y), O(input[4].x, input[4].y)]},5);
});

bp.registerBThread(""O_Player_Thread_10_4"", function(){
bp.sync({waitFor:[X(input[4].x, input[4].y)]});
bp.sync({waitFor:[X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[4].x, input[4].y), O(input[7].x, input[7].y), O(input[3].x, input[3].y), O(input[2].x, input[2].y)]},9);
});

bp.registerBThread(""O_Player_Thread_10_5"", function(){
bp.sync({waitFor:[X(input[5].x, input[5].y), O(input[2].x, input[2].y), O(input[6].x, input[6].y)]});
bp.sync({request:[O(input[5].x, input[5].y), O(input[0].x, input[0].y), O(input[7].x, input[7].y)]},1);
});

}
var inputs_10 = [[{x: 1, y: 1}, {x: 0, y: 2}, {x: 1, y: 2}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 2}, {x: 0, y: 1}],
[{x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 1}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 0, y: 1}, {x: 2, y: 2}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 1}],
[{x: 1, y: 0}, {x: 1, y: 0}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}],
[{x: 0, y: 0}, {x: 1, y: 0}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 2, y: 2}, {x: 0, y: 0}],
[{x: 2, y: 1}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 1, y: 2}, {x: 2, y: 1}, {x: 0, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 2, y: 2}, {x: 2, y: 2}],
[{x: 0, y: 1}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 2, y: 0}, {x: 2, y: 2}]]
inputs_10.forEach(function (input) {
behaviorSet10(input);
});

"
63,9.0,3.0,45.220588235294116,18.0,5.0,27.0,65.0,16.0,39.0,0.0,15.0,"function behaviorSet1(input) {
bp.registerBThread(""O_Player_Thread_1_1"", function(){
bp.sync({waitFor:[O(input[5].x, input[5].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[5].x, input[5].y)]},2);
});

}
var inputs_1 = [[{x: 0, y: 1}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 0, y: 2}, {x: 1, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 0}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 1, y: 0}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 2, y: 1}],
[{x: 0, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 1}],
[{x: 1, y: 1}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 1}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 1, y: 0}, {x: 0, y: 2}]]
inputs_1.forEach(function (input) {
behaviorSet1(input);
});

function behaviorSet2(input) {
bp.registerBThread(""O_Player_Thread_2_1"", function(){
bp.sync({request:[O(input[6].x, input[6].y), O(input[3].x, input[3].y), O(input[2].x, input[2].y), O(input[2].x, input[2].y)]},4);
});

bp.registerBThread(""O_Player_Thread_2_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[5].x, input[5].y), X(input[7].x, input[7].y)]});
bp.sync({request:[O(input[7].x, input[7].y)]},2);
});

bp.registerBThread(""O_Player_Thread_2_3"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[0].x, input[0].y)]},8);
});

}
var inputs_2 = [[{x: 1, y: 0}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 2, y: 2}, {x: 1, y: 2}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 2, y: 2}, {x: 1, y: 1}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 1, y: 0}],
[{x: 2, y: 2}, {x: 1, y: 2}, {x: 0, y: 2}, {x: 1, y: 2}, {x: 1, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 0, y: 2}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 0, y: 2}],
[{x: 1, y: 0}, {x: 0, y: 0}, {x: 0, y: 1}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 0, y: 2}]]
inputs_2.forEach(function (input) {
behaviorSet2(input);
});

function behaviorSet3(input) {
bp.registerBThread(""O_Player_Thread_3_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y)]},9);
});

bp.registerBThread(""O_Player_Thread_3_2"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), O(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y)]},4);
});

bp.registerBThread(""O_Player_Thread_3_3"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y), X(input[2].x, input[2].y), O(input[1].x, input[1].y), X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y)]},10);
});

bp.registerBThread(""O_Player_Thread_3_4"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[1].x, input[1].y)]});
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},11);
});

bp.registerBThread(""O_Player_Thread_3_5"", function(){
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},10);
});

}
var inputs_3 = [[{x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}],
[{x: 1, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}],
[{x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 0}]]
inputs_3.forEach(function (input) {
behaviorSet3(input);
});

function behaviorSet4(input) {
bp.registerBThread(""O_Player_Thread_4_1"", function(){
bp.sync({waitFor:[O(input[4].x, input[4].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_4_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[3].x, input[3].y)]},8);
});

}
var inputs_4 = [[{x: 2, y: 0}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 2, y: 1}, {x: 1, y: 0}],
[{x: 2, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 0, y: 0}],
[{x: 0, y: 2}, {x: 1, y: 2}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 0, y: 0}],
[{x: 1, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 2, y: 0}, {x: 0, y: 0}],
[{x: 2, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 2, y: 2}]]
inputs_4.forEach(function (input) {
behaviorSet4(input);
});

function behaviorSet5(input) {
bp.registerBThread(""O_Player_Thread_5_1"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[1].x, input[1].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},3);
});

bp.registerBThread(""O_Player_Thread_5_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},9);
});

bp.registerBThread(""O_Player_Thread_5_3"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({waitFor:[X(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y), O(input[1].x, input[1].y)]},11);
});

}
var inputs_5 = [[{x: 1, y: 0}, {x: 1, y: 1}, {x: 1, y: 2}],
[{x: 2, y: 2}, {x: 0, y: 2}, {x: 2, y: 1}]]
inputs_5.forEach(function (input) {
behaviorSet5(input);
});

function behaviorSet6(input) {
bp.registerBThread(""O_Player_Thread_6_1"", function(){
bp.sync({waitFor:[O(input[1].x, input[1].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_6_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[1].x, input[1].y), O(input[1].x, input[1].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},10);
});

bp.registerBThread(""O_Player_Thread_6_3"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_6_4"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[1].x, input[1].y)]},3);
});

}
var inputs_6 = [[{x: 0, y: 2}, {x: 1, y: 0}],
[{x: 0, y: 0}, {x: 1, y: 2}]]
inputs_6.forEach(function (input) {
behaviorSet6(input);
});

function behaviorSet7(input) {
bp.registerBThread(""O_Player_Thread_7_1"", function(){
bp.sync({request:[O(input[4].x, input[4].y), O(input[3].x, input[3].y), O(input[1].x, input[1].y), O(input[4].x, input[4].y)]},2);
});

}
var inputs_7 = [[{x: 0, y: 1}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 1, y: 2}, {x: 1, y: 2}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 1, y: 2}],
[{x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 0, y: 2}],
[{x: 0, y: 1}, {x: 0, y: 2}, {x: 1, y: 1}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 2, y: 0}],
[{x: 1, y: 2}, {x: 0, y: 2}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 0, y: 0}, {x: 1, y: 2}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 2}, {x: 2, y: 1}]]
inputs_7.forEach(function (input) {
behaviorSet7(input);
});

function behaviorSet8(input) {
bp.registerBThread(""O_Player_Thread_8_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[0].x, input[0].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_8_2"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[1].x, input[1].y)]},4);
});

bp.registerBThread(""O_Player_Thread_8_3"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[1].x, input[1].y), O(input[0].x, input[0].y), X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[1].x, input[1].y)]},3);
});

}
var inputs_8 = [[{x: 1, y: 2}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 2, y: 2}],
[{x: 2, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}],
[{x: 0, y: 0}, {x: 2, y: 2}]]
inputs_8.forEach(function (input) {
behaviorSet8(input);
});

function behaviorSet9(input) {
bp.registerBThread(""O_Player_Thread_9_1"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y)]});
bp.sync({waitFor:[X(input[3].x, input[3].y), X(input[2].x, input[2].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},2);
});

bp.registerBThread(""O_Player_Thread_9_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y), O(input[2].x, input[2].y)]},8);
});

}
var inputs_9 = [[{x: 2, y: 0}, {x: 1, y: 2}, {x: 1, y: 2}, {x: 0, y: 1}],
[{x: 2, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}],
[{x: 0, y: 0}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 2, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}, {x: 1, y: 2}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}],
[{x: 1, y: 2}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 1, y: 0}]]
inputs_9.forEach(function (input) {
behaviorSet9(input);
});

function behaviorSet10(input) {
bp.registerBThread(""O_Player_Thread_10_1"", function(){
bp.sync({waitFor:[X(input[5].x, input[5].y)]});
bp.sync({waitFor:[O(input[3].x, input[3].y), O(input[6].x, input[6].y), X(input[2].x, input[2].y), X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[5].x, input[5].y), O(input[7].x, input[7].y)]},6);
});

bp.registerBThread(""O_Player_Thread_10_2"", function(){
bp.sync({request:[O(input[6].x, input[6].y)]},2);
});

bp.registerBThread(""O_Player_Thread_10_3"", function(){
bp.sync({waitFor:[X(input[7].x, input[7].y), O(input[3].x, input[3].y), O(input[6].x, input[6].y), O(input[5].x, input[5].y)]});
bp.sync({waitFor:[O(input[7].x, input[7].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[4].x, input[4].y), O(input[3].x, input[3].y), O(input[6].x, input[6].y), O(input[4].x, input[4].y)]},5);
});

bp.registerBThread(""O_Player_Thread_10_4"", function(){
bp.sync({waitFor:[X(input[4].x, input[4].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[4].x, input[4].y), O(input[7].x, input[7].y), O(input[3].x, input[3].y), O(input[2].x, input[2].y)]},9);
});

bp.registerBThread(""O_Player_Thread_10_5"", function(){
bp.sync({waitFor:[X(input[5].x, input[5].y), O(input[2].x, input[2].y), O(input[6].x, input[6].y)]});
bp.sync({request:[O(input[5].x, input[5].y), O(input[0].x, input[0].y), O(input[7].x, input[7].y)]},1);
});

}
var inputs_10 = [[{x: 1, y: 1}, {x: 0, y: 2}, {x: 1, y: 2}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 2}, {x: 0, y: 1}],
[{x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 1}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 0, y: 1}, {x: 2, y: 2}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 1}],
[{x: 1, y: 0}, {x: 1, y: 0}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}],
[{x: 0, y: 0}, {x: 1, y: 0}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 2, y: 2}, {x: 0, y: 0}],
[{x: 2, y: 1}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 1, y: 2}, {x: 2, y: 1}, {x: 0, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 2, y: 2}, {x: 2, y: 2}],
[{x: 0, y: 1}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 2, y: 0}, {x: 2, y: 2}]]
inputs_10.forEach(function (input) {
behaviorSet10(input);
});

"
64,10.0,2.0,40.70175438596491,17.0,3.0,30.0,57.0,21.0,33.0,0.0,15.0,"function behaviorSet1(input) {
bp.registerBThread(""O_Player_Thread_1_1"", function(){
bp.sync({waitFor:[O(input[5].x, input[5].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[5].x, input[5].y)]},2);
});

}
var inputs_1 = [[{x: 0, y: 1}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 0, y: 2}, {x: 1, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 0}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 1, y: 0}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 2, y: 1}],
[{x: 0, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 1}],
[{x: 1, y: 1}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 1}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 1, y: 0}, {x: 0, y: 2}]]
inputs_1.forEach(function (input) {
behaviorSet1(input);
});

function behaviorSet2(input) {
bp.registerBThread(""O_Player_Thread_2_1"", function(){
bp.sync({request:[O(input[6].x, input[6].y), O(input[3].x, input[3].y), O(input[2].x, input[2].y), O(input[2].x, input[2].y)]},4);
});

bp.registerBThread(""O_Player_Thread_2_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[5].x, input[5].y), X(input[7].x, input[7].y)]});
bp.sync({request:[O(input[7].x, input[7].y)]},2);
});

bp.registerBThread(""O_Player_Thread_2_3"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[0].x, input[0].y)]},8);
});

}
var inputs_2 = [[{x: 1, y: 0}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 2, y: 2}, {x: 1, y: 2}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 2, y: 2}, {x: 1, y: 1}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 1, y: 0}],
[{x: 2, y: 2}, {x: 1, y: 2}, {x: 0, y: 2}, {x: 1, y: 2}, {x: 1, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 0, y: 2}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 0, y: 2}],
[{x: 1, y: 0}, {x: 0, y: 0}, {x: 0, y: 1}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 0, y: 2}]]
inputs_2.forEach(function (input) {
behaviorSet2(input);
});

function behaviorSet3(input) {
bp.registerBThread(""O_Player_Thread_3_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y)]},9);
});

bp.registerBThread(""O_Player_Thread_3_2"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), O(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y)]},4);
});

bp.registerBThread(""O_Player_Thread_3_3"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y), X(input[2].x, input[2].y), O(input[1].x, input[1].y), X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y)]},10);
});

bp.registerBThread(""O_Player_Thread_3_4"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[1].x, input[1].y)]});
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},11);
});

bp.registerBThread(""O_Player_Thread_3_5"", function(){
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},10);
});

}
var inputs_3 = [[{x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}],
[{x: 1, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}],
[{x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 0}]]
inputs_3.forEach(function (input) {
behaviorSet3(input);
});

function behaviorSet4(input) {
bp.registerBThread(""O_Player_Thread_4_1"", function(){
bp.sync({waitFor:[O(input[4].x, input[4].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_4_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[3].x, input[3].y)]},8);
});

}
var inputs_4 = [[{x: 2, y: 0}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 2, y: 1}, {x: 1, y: 0}],
[{x: 0, y: 1}, {x: 2, y: 0}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}],
[{x: 0, y: 2}, {x: 1, y: 2}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 0, y: 0}],
[{x: 1, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 2, y: 0}, {x: 0, y: 0}],
[{x: 2, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 2, y: 2}]]
inputs_4.forEach(function (input) {
behaviorSet4(input);
});

function behaviorSet5(input) {
bp.registerBThread(""O_Player_Thread_5_1"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[1].x, input[1].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},3);
});

bp.registerBThread(""O_Player_Thread_5_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},9);
});

bp.registerBThread(""O_Player_Thread_5_3"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({waitFor:[X(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y), O(input[1].x, input[1].y)]},11);
});

}
var inputs_5 = [[{x: 1, y: 0}, {x: 1, y: 1}, {x: 1, y: 2}],
[{x: 2, y: 2}, {x: 0, y: 2}, {x: 2, y: 1}]]
inputs_5.forEach(function (input) {
behaviorSet5(input);
});

function behaviorSet6(input) {
bp.registerBThread(""O_Player_Thread_6_1"", function(){
bp.sync({waitFor:[O(input[1].x, input[1].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},10);
});

bp.registerBThread(""O_Player_Thread_6_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[1].x, input[1].y), O(input[1].x, input[1].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},10);
});

bp.registerBThread(""O_Player_Thread_6_3"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_6_4"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[1].x, input[1].y)]},3);
});

}
var inputs_6 = [[{x: 0, y: 2}, {x: 1, y: 0}],
[{x: 0, y: 0}, {x: 1, y: 2}]]
inputs_6.forEach(function (input) {
behaviorSet6(input);
});

function behaviorSet7(input) {
bp.registerBThread(""O_Player_Thread_7_1"", function(){
bp.sync({request:[O(input[4].x, input[4].y), O(input[3].x, input[3].y), O(input[1].x, input[1].y), O(input[4].x, input[4].y)]},2);
});

}
var inputs_7 = [[{x: 0, y: 1}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 1, y: 2}, {x: 1, y: 2}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 1, y: 2}],
[{x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 0, y: 2}],
[{x: 0, y: 1}, {x: 0, y: 2}, {x: 1, y: 1}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 2, y: 0}],
[{x: 1, y: 2}, {x: 0, y: 2}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 0, y: 0}, {x: 1, y: 2}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 2}, {x: 2, y: 1}]]
inputs_7.forEach(function (input) {
behaviorSet7(input);
});

function behaviorSet8(input) {
bp.registerBThread(""O_Player_Thread_8_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[0].x, input[0].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_8_2"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[1].x, input[1].y)]},4);
});

bp.registerBThread(""O_Player_Thread_8_3"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[1].x, input[1].y), O(input[0].x, input[0].y), X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[1].x, input[1].y)]},3);
});

}
var inputs_8 = [[{x: 1, y: 2}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 2, y: 2}],
[{x: 2, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}],
[{x: 0, y: 0}, {x: 2, y: 2}]]
inputs_8.forEach(function (input) {
behaviorSet8(input);
});

function behaviorSet9(input) {
bp.registerBThread(""O_Player_Thread_9_1"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y)]});
bp.sync({waitFor:[X(input[3].x, input[3].y), X(input[2].x, input[2].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},2);
});

bp.registerBThread(""O_Player_Thread_9_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y)]},8);
});

}
var inputs_9 = [[{x: 2, y: 0}, {x: 1, y: 2}, {x: 1, y: 2}, {x: 0, y: 1}],
[{x: 2, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}],
[{x: 0, y: 0}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 2, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}, {x: 1, y: 2}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}],
[{x: 1, y: 2}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 1, y: 0}]]
inputs_9.forEach(function (input) {
behaviorSet9(input);
});

function behaviorSet10(input) {
bp.registerBThread(""O_Player_Thread_10_1"", function(){
bp.sync({waitFor:[X(input[5].x, input[5].y)]});
bp.sync({waitFor:[O(input[3].x, input[3].y), O(input[6].x, input[6].y), X(input[2].x, input[2].y), X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[5].x, input[5].y), O(input[7].x, input[7].y)]},6);
});

bp.registerBThread(""O_Player_Thread_10_2"", function(){
bp.sync({request:[O(input[6].x, input[6].y)]},2);
});

bp.registerBThread(""O_Player_Thread_10_3"", function(){
bp.sync({waitFor:[X(input[7].x, input[7].y), O(input[3].x, input[3].y), O(input[6].x, input[6].y), O(input[5].x, input[5].y)]});
bp.sync({waitFor:[O(input[7].x, input[7].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[4].x, input[4].y), O(input[3].x, input[3].y), O(input[6].x, input[6].y), O(input[4].x, input[4].y)]},5);
});

bp.registerBThread(""O_Player_Thread_10_4"", function(){
bp.sync({waitFor:[X(input[4].x, input[4].y)]});
bp.sync({waitFor:[X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[4].x, input[4].y), O(input[7].x, input[7].y), O(input[3].x, input[3].y), O(input[2].x, input[2].y)]},9);
});

bp.registerBThread(""O_Player_Thread_10_5"", function(){
bp.sync({waitFor:[X(input[5].x, input[5].y), O(input[2].x, input[2].y), O(input[6].x, input[6].y)]});
bp.sync({request:[O(input[5].x, input[5].y), O(input[0].x, input[0].y), O(input[7].x, input[7].y)]},1);
});

}
var inputs_10 = [[{x: 1, y: 1}, {x: 0, y: 2}, {x: 1, y: 2}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 2}, {x: 0, y: 1}],
[{x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 1}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 0, y: 1}, {x: 2, y: 2}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 1}],
[{x: 1, y: 0}, {x: 1, y: 0}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}],
[{x: 0, y: 0}, {x: 1, y: 0}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 2, y: 2}, {x: 0, y: 0}],
[{x: 2, y: 1}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 1, y: 2}, {x: 2, y: 1}, {x: 0, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 2, y: 2}, {x: 2, y: 2}],
[{x: 0, y: 1}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 2, y: 0}, {x: 2, y: 2}]]
inputs_10.forEach(function (input) {
behaviorSet10(input);
});

"
65,10.0,1.0,45.6989247311828,17.0,6.0,27.0,59.0,14.0,34.0,0.0,12.0,"function behaviorSet1(input) {
bp.registerBThread(""O_Player_Thread_1_1"", function(){
bp.sync({waitFor:[O(input[5].x, input[5].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[5].x, input[5].y)]},2);
});

}
var inputs_1 = [[{x: 0, y: 1}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 0, y: 2}, {x: 1, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 0}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 1, y: 0}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 2, y: 1}],
[{x: 0, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 1}],
[{x: 1, y: 1}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 1}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 1, y: 0}, {x: 0, y: 2}]]
inputs_1.forEach(function (input) {
behaviorSet1(input);
});

function behaviorSet2(input) {
bp.registerBThread(""O_Player_Thread_2_1"", function(){
bp.sync({request:[O(input[6].x, input[6].y), O(input[3].x, input[3].y), O(input[2].x, input[2].y), O(input[2].x, input[2].y)]},4);
});

bp.registerBThread(""O_Player_Thread_2_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[5].x, input[5].y), X(input[7].x, input[7].y)]});
bp.sync({request:[O(input[7].x, input[7].y)]},2);
});

bp.registerBThread(""O_Player_Thread_2_3"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[0].x, input[0].y)]},8);
});

}
var inputs_2 = [[{x: 1, y: 0}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 2, y: 2}, {x: 1, y: 2}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 2, y: 2}, {x: 1, y: 1}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 1, y: 0}],
[{x: 2, y: 2}, {x: 1, y: 2}, {x: 0, y: 2}, {x: 1, y: 2}, {x: 1, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 0, y: 2}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 0, y: 2}],
[{x: 1, y: 0}, {x: 0, y: 0}, {x: 0, y: 1}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 0, y: 2}]]
inputs_2.forEach(function (input) {
behaviorSet2(input);
});

function behaviorSet3(input) {
bp.registerBThread(""O_Player_Thread_3_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y)]},9);
});

bp.registerBThread(""O_Player_Thread_3_2"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), O(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y)]},4);
});

bp.registerBThread(""O_Player_Thread_3_3"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y), X(input[2].x, input[2].y), O(input[1].x, input[1].y), X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y)]},10);
});

bp.registerBThread(""O_Player_Thread_3_4"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[1].x, input[1].y)]});
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},11);
});

bp.registerBThread(""O_Player_Thread_3_5"", function(){
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},10);
});

}
var inputs_3 = [[{x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}],
[{x: 1, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}],
[{x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 0}]]
inputs_3.forEach(function (input) {
behaviorSet3(input);
});

function behaviorSet4(input) {
bp.registerBThread(""O_Player_Thread_4_1"", function(){
bp.sync({waitFor:[O(input[4].x, input[4].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_4_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[3].x, input[3].y)]},8);
});

}
var inputs_4 = [[{x: 2, y: 0}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 2, y: 1}, {x: 1, y: 0}],
[{x: 2, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 0, y: 0}],
[{x: 0, y: 2}, {x: 1, y: 2}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 0, y: 0}],
[{x: 1, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 2, y: 0}, {x: 0, y: 0}],
[{x: 2, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 2, y: 2}]]
inputs_4.forEach(function (input) {
behaviorSet4(input);
});

function behaviorSet5(input) {
bp.registerBThread(""O_Player_Thread_5_1"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[1].x, input[1].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},3);
});

bp.registerBThread(""O_Player_Thread_5_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},9);
});

bp.registerBThread(""O_Player_Thread_5_3"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({waitFor:[X(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y), O(input[1].x, input[1].y)]},11);
});

}
var inputs_5 = [[{x: 1, y: 0}, {x: 1, y: 1}, {x: 1, y: 2}],
[{x: 2, y: 2}, {x: 0, y: 2}, {x: 2, y: 1}]]
inputs_5.forEach(function (input) {
behaviorSet5(input);
});

function behaviorSet6(input) {
bp.registerBThread(""O_Player_Thread_6_1"", function(){
bp.sync({waitFor:[O(input[1].x, input[1].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_6_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[1].x, input[1].y), O(input[1].x, input[1].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_6_3"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_6_4"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[1].x, input[1].y)]},3);
});

}
var inputs_6 = [[{x: 0, y: 2}, {x: 1, y: 0}],
[{x: 0, y: 0}, {x: 1, y: 2}]]
inputs_6.forEach(function (input) {
behaviorSet6(input);
});

function behaviorSet7(input) {
bp.registerBThread(""O_Player_Thread_7_1"", function(){
bp.sync({request:[O(input[4].x, input[4].y), O(input[3].x, input[3].y), O(input[1].x, input[1].y), O(input[4].x, input[4].y)]},2);
});

}
var inputs_7 = [[{x: 0, y: 1}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 1, y: 2}, {x: 1, y: 2}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 1, y: 2}],
[{x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 0, y: 2}],
[{x: 0, y: 1}, {x: 0, y: 2}, {x: 1, y: 1}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 2, y: 0}],
[{x: 1, y: 2}, {x: 0, y: 2}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 0, y: 0}, {x: 1, y: 2}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 2}, {x: 2, y: 1}]]
inputs_7.forEach(function (input) {
behaviorSet7(input);
});

function behaviorSet8(input) {
bp.registerBThread(""O_Player_Thread_8_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[0].x, input[0].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_8_2"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[1].x, input[1].y)]},4);
});

bp.registerBThread(""O_Player_Thread_8_3"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[1].x, input[1].y), O(input[0].x, input[0].y), X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[1].x, input[1].y)]},3);
});

}
var inputs_8 = [[{x: 1, y: 2}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 2, y: 2}],
[{x: 2, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}],
[{x: 0, y: 0}, {x: 2, y: 2}]]
inputs_8.forEach(function (input) {
behaviorSet8(input);
});

function behaviorSet9(input) {
bp.registerBThread(""O_Player_Thread_9_1"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y)]});
bp.sync({waitFor:[X(input[3].x, input[3].y), X(input[2].x, input[2].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},2);
});

bp.registerBThread(""O_Player_Thread_9_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y), O(input[2].x, input[2].y)]},8);
});

}
var inputs_9 = [[{x: 2, y: 0}, {x: 1, y: 2}, {x: 1, y: 2}, {x: 0, y: 1}],
[{x: 2, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}],
[{x: 0, y: 0}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 2, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}, {x: 1, y: 2}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}],
[{x: 1, y: 2}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 1, y: 0}]]
inputs_9.forEach(function (input) {
behaviorSet9(input);
});

function behaviorSet10(input) {
bp.registerBThread(""O_Player_Thread_10_1"", function(){
bp.sync({waitFor:[X(input[5].x, input[5].y)]});
bp.sync({waitFor:[O(input[3].x, input[3].y), O(input[6].x, input[6].y), X(input[2].x, input[2].y), X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[5].x, input[5].y), O(input[7].x, input[7].y)]},6);
});

bp.registerBThread(""O_Player_Thread_10_2"", function(){
bp.sync({request:[O(input[6].x, input[6].y)]},2);
});

bp.registerBThread(""O_Player_Thread_10_3"", function(){
bp.sync({waitFor:[X(input[7].x, input[7].y), O(input[3].x, input[3].y), O(input[6].x, input[6].y), O(input[5].x, input[5].y)]});
bp.sync({waitFor:[O(input[7].x, input[7].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[4].x, input[4].y), O(input[3].x, input[3].y), O(input[6].x, input[6].y), O(input[4].x, input[4].y)]},5);
});

bp.registerBThread(""O_Player_Thread_10_4"", function(){
bp.sync({waitFor:[X(input[4].x, input[4].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[4].x, input[4].y), O(input[7].x, input[7].y), O(input[3].x, input[3].y), O(input[2].x, input[2].y)]},9);
});

bp.registerBThread(""O_Player_Thread_10_5"", function(){
bp.sync({waitFor:[X(input[5].x, input[5].y), O(input[2].x, input[2].y), O(input[6].x, input[6].y)]});
bp.sync({request:[O(input[5].x, input[5].y), O(input[0].x, input[0].y), O(input[7].x, input[7].y)]},1);
});

}
var inputs_10 = [[{x: 1, y: 1}, {x: 0, y: 2}, {x: 1, y: 2}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 2}, {x: 0, y: 1}],
[{x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 1}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 0, y: 1}, {x: 2, y: 2}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 1}],
[{x: 1, y: 0}, {x: 1, y: 0}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}],
[{x: 0, y: 0}, {x: 1, y: 0}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 2, y: 2}, {x: 0, y: 0}],
[{x: 2, y: 1}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 1, y: 2}, {x: 2, y: 1}, {x: 0, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 2, y: 2}, {x: 2, y: 2}],
[{x: 0, y: 1}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 2, y: 0}, {x: 2, y: 2}]]
inputs_10.forEach(function (input) {
behaviorSet10(input);
});

"
66,10.0,4.0,38.19444444444444,14.0,5.0,31.0,65.0,22.0,39.0,0.0,6.0,"function behaviorSet1(input) {
bp.registerBThread(""O_Player_Thread_1_1"", function(){
bp.sync({waitFor:[O(input[5].x, input[5].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[5].x, input[5].y)]},2);
});

}
var inputs_1 = [[{x: 0, y: 1}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 0, y: 2}, {x: 1, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 0}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 1, y: 0}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 2, y: 1}],
[{x: 0, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 1}],
[{x: 1, y: 1}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 1}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 1, y: 0}, {x: 0, y: 2}]]
inputs_1.forEach(function (input) {
behaviorSet1(input);
});

function behaviorSet2(input) {
bp.registerBThread(""O_Player_Thread_2_1"", function(){
bp.sync({request:[O(input[6].x, input[6].y), O(input[3].x, input[3].y), O(input[2].x, input[2].y), O(input[2].x, input[2].y)]},4);
});

bp.registerBThread(""O_Player_Thread_2_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[5].x, input[5].y), X(input[7].x, input[7].y)]});
bp.sync({request:[O(input[7].x, input[7].y)]},2);
});

bp.registerBThread(""O_Player_Thread_2_3"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[0].x, input[0].y)]},8);
});

}
var inputs_2 = [[{x: 1, y: 0}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 2, y: 2}, {x: 1, y: 2}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 2, y: 2}, {x: 1, y: 1}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 1, y: 0}],
[{x: 2, y: 2}, {x: 1, y: 2}, {x: 0, y: 2}, {x: 1, y: 2}, {x: 1, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 0, y: 2}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 0, y: 2}],
[{x: 1, y: 0}, {x: 0, y: 0}, {x: 0, y: 1}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 0, y: 2}]]
inputs_2.forEach(function (input) {
behaviorSet2(input);
});

function behaviorSet3(input) {
bp.registerBThread(""O_Player_Thread_3_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y)]},9);
});

bp.registerBThread(""O_Player_Thread_3_2"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), O(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y)]},4);
});

bp.registerBThread(""O_Player_Thread_3_3"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y), X(input[2].x, input[2].y), O(input[1].x, input[1].y), X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y)]},10);
});

bp.registerBThread(""O_Player_Thread_3_4"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[1].x, input[1].y)]});
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},11);
});

bp.registerBThread(""O_Player_Thread_3_5"", function(){
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},10);
});

}
var inputs_3 = [[{x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}],
[{x: 1, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}],
[{x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 0}]]
inputs_3.forEach(function (input) {
behaviorSet3(input);
});

function behaviorSet4(input) {
bp.registerBThread(""O_Player_Thread_4_1"", function(){
bp.sync({waitFor:[O(input[4].x, input[4].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_4_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y)]},8);
});

}
var inputs_4 = [[{x: 2, y: 0}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 2, y: 1}, {x: 1, y: 0}],
[{x: 2, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 0, y: 0}],
[{x: 0, y: 2}, {x: 1, y: 2}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 0, y: 0}],
[{x: 1, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 2, y: 0}, {x: 0, y: 0}],
[{x: 2, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 2, y: 2}]]
inputs_4.forEach(function (input) {
behaviorSet4(input);
});

function behaviorSet5(input) {
bp.registerBThread(""O_Player_Thread_5_1"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[1].x, input[1].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},3);
});

bp.registerBThread(""O_Player_Thread_5_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},9);
});

bp.registerBThread(""O_Player_Thread_5_3"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({waitFor:[X(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y), O(input[1].x, input[1].y)]},11);
});

}
var inputs_5 = [[{x: 1, y: 0}, {x: 1, y: 1}, {x: 1, y: 2}],
[{x: 2, y: 2}, {x: 0, y: 2}, {x: 2, y: 1}]]
inputs_5.forEach(function (input) {
behaviorSet5(input);
});

function behaviorSet6(input) {
bp.registerBThread(""O_Player_Thread_6_1"", function(){
bp.sync({waitFor:[O(input[1].x, input[1].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_6_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[1].x, input[1].y), O(input[1].x, input[1].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},10);
});

bp.registerBThread(""O_Player_Thread_6_3"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_6_4"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[1].x, input[1].y)]},3);
});

}
var inputs_6 = [[{x: 0, y: 2}, {x: 1, y: 0}],
[{x: 0, y: 0}, {x: 1, y: 2}]]
inputs_6.forEach(function (input) {
behaviorSet6(input);
});

function behaviorSet7(input) {
bp.registerBThread(""O_Player_Thread_7_1"", function(){
bp.sync({waitFor:[O(input[5].x, input[5].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[5].x, input[5].y)]},2);
});

}
var inputs_7 = [[{x: 0, y: 1}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 1, y: 2}, {x: 1, y: 2}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 1, y: 2}],
[{x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 0, y: 2}],
[{x: 0, y: 1}, {x: 0, y: 2}, {x: 1, y: 1}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 2, y: 0}],
[{x: 1, y: 2}, {x: 0, y: 2}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 0, y: 0}, {x: 1, y: 2}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 2}, {x: 2, y: 1}]]
inputs_7.forEach(function (input) {
behaviorSet7(input);
});

function behaviorSet8(input) {
bp.registerBThread(""O_Player_Thread_8_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[0].x, input[0].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_8_2"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[1].x, input[1].y)]},4);
});

bp.registerBThread(""O_Player_Thread_8_3"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[1].x, input[1].y), O(input[0].x, input[0].y), X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[1].x, input[1].y)]},3);
});

}
var inputs_8 = [[{x: 1, y: 2}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 2, y: 2}],
[{x: 2, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}],
[{x: 0, y: 0}, {x: 2, y: 2}]]
inputs_8.forEach(function (input) {
behaviorSet8(input);
});

function behaviorSet9(input) {
bp.registerBThread(""O_Player_Thread_9_1"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y)]});
bp.sync({waitFor:[X(input[3].x, input[3].y), X(input[2].x, input[2].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},2);
});

bp.registerBThread(""O_Player_Thread_9_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y), O(input[2].x, input[2].y)]},8);
});

}
var inputs_9 = [[{x: 2, y: 0}, {x: 1, y: 2}, {x: 1, y: 2}, {x: 0, y: 1}],
[{x: 2, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}],
[{x: 0, y: 0}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 2, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}, {x: 1, y: 2}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}],
[{x: 1, y: 2}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 1, y: 0}]]
inputs_9.forEach(function (input) {
behaviorSet9(input);
});

function behaviorSet10(input) {
bp.registerBThread(""O_Player_Thread_10_1"", function(){
bp.sync({waitFor:[X(input[5].x, input[5].y)]});
bp.sync({waitFor:[O(input[3].x, input[3].y), O(input[6].x, input[6].y), X(input[2].x, input[2].y), X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[5].x, input[5].y), O(input[7].x, input[7].y)]},6);
});

bp.registerBThread(""O_Player_Thread_10_2"", function(){
bp.sync({request:[O(input[6].x, input[6].y)]},2);
});

bp.registerBThread(""O_Player_Thread_10_3"", function(){
bp.sync({waitFor:[X(input[7].x, input[7].y), O(input[3].x, input[3].y), O(input[6].x, input[6].y), O(input[5].x, input[5].y)]});
bp.sync({waitFor:[O(input[7].x, input[7].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[4].x, input[4].y), O(input[3].x, input[3].y), O(input[6].x, input[6].y), O(input[4].x, input[4].y)]},5);
});

bp.registerBThread(""O_Player_Thread_10_4"", function(){
bp.sync({waitFor:[X(input[4].x, input[4].y)]});
bp.sync({waitFor:[X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[4].x, input[4].y), O(input[7].x, input[7].y), O(input[3].x, input[3].y), O(input[2].x, input[2].y)]},9);
});

bp.registerBThread(""O_Player_Thread_10_5"", function(){
bp.sync({waitFor:[X(input[5].x, input[5].y), O(input[2].x, input[2].y), O(input[6].x, input[6].y)]});
bp.sync({request:[O(input[5].x, input[5].y), O(input[0].x, input[0].y), O(input[7].x, input[7].y)]},1);
});

}
var inputs_10 = [[{x: 1, y: 1}, {x: 0, y: 2}, {x: 1, y: 2}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 2}, {x: 0, y: 1}],
[{x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 1}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 0, y: 1}, {x: 2, y: 2}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 1}],
[{x: 1, y: 0}, {x: 1, y: 0}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}],
[{x: 0, y: 0}, {x: 1, y: 0}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 2, y: 2}, {x: 0, y: 0}],
[{x: 2, y: 1}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 1, y: 2}, {x: 2, y: 1}, {x: 0, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 2, y: 2}, {x: 2, y: 2}],
[{x: 0, y: 1}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 2, y: 0}, {x: 2, y: 2}]]
inputs_10.forEach(function (input) {
behaviorSet10(input);
});

"
67,10.0,5.0,47.29797979797979,19.0,2.0,29.0,64.0,17.0,46.0,0.0,20.0,"function behaviorSet1(input) {
bp.registerBThread(""O_Player_Thread_1_1"", function(){
bp.sync({waitFor:[O(input[5].x, input[5].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[5].x, input[5].y)]},2);
});

}
var inputs_1 = [[{x: 0, y: 1}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 0, y: 2}, {x: 1, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 0}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 1, y: 0}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 2, y: 1}],
[{x: 0, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 1}],
[{x: 1, y: 1}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 1}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 1, y: 0}, {x: 0, y: 2}]]
inputs_1.forEach(function (input) {
behaviorSet1(input);
});

function behaviorSet2(input) {
bp.registerBThread(""O_Player_Thread_2_1"", function(){
bp.sync({request:[O(input[6].x, input[6].y), O(input[3].x, input[3].y), O(input[2].x, input[2].y), O(input[2].x, input[2].y)]},4);
});

bp.registerBThread(""O_Player_Thread_2_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[5].x, input[5].y), X(input[7].x, input[7].y)]});
bp.sync({request:[O(input[7].x, input[7].y)]},2);
});

bp.registerBThread(""O_Player_Thread_2_3"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[0].x, input[0].y)]},8);
});

}
var inputs_2 = [[{x: 1, y: 0}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 2, y: 2}, {x: 1, y: 2}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 2, y: 2}, {x: 1, y: 1}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 1, y: 0}],
[{x: 2, y: 2}, {x: 1, y: 2}, {x: 0, y: 2}, {x: 1, y: 2}, {x: 1, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 0, y: 2}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 0, y: 2}],
[{x: 1, y: 0}, {x: 0, y: 0}, {x: 0, y: 1}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 0, y: 2}]]
inputs_2.forEach(function (input) {
behaviorSet2(input);
});

function behaviorSet3(input) {
bp.registerBThread(""O_Player_Thread_3_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y)]},9);
});

bp.registerBThread(""O_Player_Thread_3_2"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), O(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y)]},4);
});

bp.registerBThread(""O_Player_Thread_3_3"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y), X(input[2].x, input[2].y), O(input[1].x, input[1].y), X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y)]},10);
});

bp.registerBThread(""O_Player_Thread_3_4"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[1].x, input[1].y)]});
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},11);
});

bp.registerBThread(""O_Player_Thread_3_5"", function(){
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},10);
});

}
var inputs_3 = [[{x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}],
[{x: 1, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}],
[{x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 0}]]
inputs_3.forEach(function (input) {
behaviorSet3(input);
});

function behaviorSet4(input) {
bp.registerBThread(""O_Player_Thread_4_1"", function(){
bp.sync({waitFor:[O(input[4].x, input[4].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_4_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[3].x, input[3].y)]},8);
});

}
var inputs_4 = [[{x: 2, y: 0}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 2, y: 1}, {x: 1, y: 0}],
[{x: 2, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 0, y: 0}],
[{x: 0, y: 2}, {x: 1, y: 2}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 0, y: 0}],
[{x: 1, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 2, y: 0}, {x: 0, y: 0}],
[{x: 2, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 2, y: 2}]]
inputs_4.forEach(function (input) {
behaviorSet4(input);
});

function behaviorSet5(input) {
bp.registerBThread(""O_Player_Thread_5_1"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[1].x, input[1].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},3);
});

bp.registerBThread(""O_Player_Thread_5_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},9);
});

bp.registerBThread(""O_Player_Thread_5_3"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({waitFor:[X(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y), O(input[1].x, input[1].y)]},11);
});

}
var inputs_5 = [[{x: 1, y: 0}, {x: 1, y: 1}, {x: 1, y: 2}],
[{x: 2, y: 2}, {x: 0, y: 2}, {x: 2, y: 1}]]
inputs_5.forEach(function (input) {
behaviorSet5(input);
});

function behaviorSet6(input) {
bp.registerBThread(""O_Player_Thread_6_1"", function(){
bp.sync({waitFor:[O(input[1].x, input[1].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_6_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[1].x, input[1].y), O(input[1].x, input[1].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},10);
});

bp.registerBThread(""O_Player_Thread_6_3"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_6_4"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[1].x, input[1].y)]},3);
});

}
var inputs_6 = [[{x: 0, y: 2}, {x: 1, y: 0}],
[{x: 0, y: 0}, {x: 1, y: 2}]]
inputs_6.forEach(function (input) {
behaviorSet6(input);
});

function behaviorSet7(input) {
bp.registerBThread(""O_Player_Thread_7_1"", function(){
bp.sync({request:[O(input[4].x, input[4].y), O(input[3].x, input[3].y), O(input[1].x, input[1].y), O(input[4].x, input[4].y)]},2);
});

}
var inputs_7 = [[{x: 0, y: 1}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 1, y: 2}, {x: 1, y: 2}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 1, y: 2}],
[{x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 0, y: 2}],
[{x: 0, y: 1}, {x: 0, y: 2}, {x: 1, y: 1}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 2, y: 0}],
[{x: 1, y: 2}, {x: 0, y: 2}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 0, y: 0}, {x: 1, y: 2}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 2}, {x: 2, y: 1}]]
inputs_7.forEach(function (input) {
behaviorSet7(input);
});

function behaviorSet8(input) {
bp.registerBThread(""O_Player_Thread_8_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[0].x, input[0].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_8_2"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[1].x, input[1].y)]},4);
});

bp.registerBThread(""O_Player_Thread_8_3"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[1].x, input[1].y), O(input[0].x, input[0].y), X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[1].x, input[1].y)]},3);
});

}
var inputs_8 = [[{x: 1, y: 2}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 2, y: 2}],
[{x: 2, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}],
[{x: 0, y: 0}, {x: 2, y: 2}]]
inputs_8.forEach(function (input) {
behaviorSet8(input);
});

function behaviorSet9(input) {
bp.registerBThread(""O_Player_Thread_9_1"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y)]});
bp.sync({waitFor:[X(input[3].x, input[3].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[0].x, input[0].y)]},2);
});

bp.registerBThread(""O_Player_Thread_9_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y), O(input[2].x, input[2].y)]},8);
});

}
var inputs_9 = [[{x: 2, y: 0}, {x: 1, y: 2}, {x: 1, y: 2}, {x: 0, y: 1}],
[{x: 2, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}],
[{x: 0, y: 0}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 2, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}, {x: 1, y: 2}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}],
[{x: 1, y: 2}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 1, y: 0}]]
inputs_9.forEach(function (input) {
behaviorSet9(input);
});

function behaviorSet10(input) {
bp.registerBThread(""O_Player_Thread_10_1"", function(){
bp.sync({waitFor:[X(input[5].x, input[5].y)]});
bp.sync({waitFor:[O(input[3].x, input[3].y), O(input[6].x, input[6].y), X(input[2].x, input[2].y), X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[5].x, input[5].y), O(input[7].x, input[7].y)]},6);
});

bp.registerBThread(""O_Player_Thread_10_2"", function(){
bp.sync({request:[O(input[6].x, input[6].y)]},2);
});

bp.registerBThread(""O_Player_Thread_10_3"", function(){
bp.sync({waitFor:[X(input[7].x, input[7].y), O(input[3].x, input[3].y), O(input[6].x, input[6].y), O(input[5].x, input[5].y)]});
bp.sync({waitFor:[O(input[7].x, input[7].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[4].x, input[4].y), O(input[3].x, input[3].y), O(input[6].x, input[6].y), O(input[4].x, input[4].y)]},5);
});

bp.registerBThread(""O_Player_Thread_10_4"", function(){
bp.sync({waitFor:[X(input[4].x, input[4].y)]});
bp.sync({waitFor:[X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[4].x, input[4].y), O(input[7].x, input[7].y), O(input[3].x, input[3].y), O(input[2].x, input[2].y)]},9);
});

bp.registerBThread(""O_Player_Thread_10_5"", function(){
bp.sync({waitFor:[X(input[5].x, input[5].y), O(input[2].x, input[2].y), O(input[6].x, input[6].y)]});
bp.sync({request:[O(input[5].x, input[5].y), O(input[0].x, input[0].y), O(input[7].x, input[7].y)]},1);
});

}
var inputs_10 = [[{x: 1, y: 1}, {x: 0, y: 2}, {x: 1, y: 2}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 2}, {x: 0, y: 1}],
[{x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 1}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 0, y: 1}, {x: 2, y: 2}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 1}],
[{x: 1, y: 0}, {x: 1, y: 0}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}],
[{x: 0, y: 0}, {x: 1, y: 0}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 2, y: 2}, {x: 0, y: 0}],
[{x: 2, y: 1}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 1, y: 2}, {x: 2, y: 1}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 1, y: 0}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}],
[{x: 0, y: 1}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 2, y: 0}, {x: 2, y: 2}]]
inputs_10.forEach(function (input) {
behaviorSet10(input);
});

"
68,10.0,7.0,45.641620937104264,21.0,9.0,20.0,56.0,25.0,47.0,0.0,17.0,"function behaviorSet1(input) {
bp.registerBThread(""O_Player_Thread_1_1"", function(){
bp.sync({waitFor:[O(input[5].x, input[5].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[5].x, input[5].y)]},2);
});

}
var inputs_1 = [[{x: 0, y: 1}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 0, y: 2}, {x: 1, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 0}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 1, y: 0}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 2, y: 1}],
[{x: 0, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 1}],
[{x: 1, y: 1}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 1}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 1, y: 0}, {x: 0, y: 2}]]
inputs_1.forEach(function (input) {
behaviorSet1(input);
});

function behaviorSet2(input) {
bp.registerBThread(""O_Player_Thread_2_1"", function(){
bp.sync({request:[O(input[6].x, input[6].y), O(input[3].x, input[3].y), O(input[2].x, input[2].y), O(input[2].x, input[2].y)]},4);
});

bp.registerBThread(""O_Player_Thread_2_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[5].x, input[5].y), X(input[7].x, input[7].y)]});
bp.sync({request:[O(input[7].x, input[7].y)]},2);
});

bp.registerBThread(""O_Player_Thread_2_3"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[0].x, input[0].y)]},8);
});

}
var inputs_2 = [[{x: 1, y: 0}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 2, y: 2}, {x: 1, y: 2}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 2, y: 2}, {x: 1, y: 1}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 1, y: 0}],
[{x: 2, y: 2}, {x: 1, y: 2}, {x: 0, y: 2}, {x: 1, y: 2}, {x: 1, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 0, y: 2}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 0, y: 2}],
[{x: 1, y: 0}, {x: 0, y: 0}, {x: 0, y: 1}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 0, y: 2}]]
inputs_2.forEach(function (input) {
behaviorSet2(input);
});

function behaviorSet3(input) {
bp.registerBThread(""O_Player_Thread_3_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y)]},9);
});

bp.registerBThread(""O_Player_Thread_3_2"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), O(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y)]},4);
});

bp.registerBThread(""O_Player_Thread_3_3"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y), X(input[2].x, input[2].y), O(input[1].x, input[1].y), X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y)]},10);
});

bp.registerBThread(""O_Player_Thread_3_4"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[1].x, input[1].y)]});
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},11);
});

bp.registerBThread(""O_Player_Thread_3_5"", function(){
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},10);
});

}
var inputs_3 = [[{x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}],
[{x: 1, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}],
[{x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 0}]]
inputs_3.forEach(function (input) {
behaviorSet3(input);
});

function behaviorSet4(input) {
bp.registerBThread(""O_Player_Thread_4_1"", function(){
bp.sync({waitFor:[O(input[4].x, input[4].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_4_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[3].x, input[3].y)]},8);
});

}
var inputs_4 = [[{x: 2, y: 0}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 2, y: 1}, {x: 1, y: 0}],
[{x: 0, y: 1}, {x: 2, y: 0}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}],
[{x: 0, y: 2}, {x: 1, y: 2}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 0, y: 0}],
[{x: 1, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 2, y: 0}, {x: 0, y: 0}],
[{x: 2, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 2, y: 2}]]
inputs_4.forEach(function (input) {
behaviorSet4(input);
});

function behaviorSet5(input) {
bp.registerBThread(""O_Player_Thread_5_1"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[1].x, input[1].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},3);
});

bp.registerBThread(""O_Player_Thread_5_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},9);
});

bp.registerBThread(""O_Player_Thread_5_3"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({waitFor:[X(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y), O(input[1].x, input[1].y)]},11);
});

}
var inputs_5 = [[{x: 1, y: 0}, {x: 1, y: 1}, {x: 1, y: 2}],
[{x: 2, y: 2}, {x: 0, y: 2}, {x: 2, y: 1}]]
inputs_5.forEach(function (input) {
behaviorSet5(input);
});

function behaviorSet6(input) {
bp.registerBThread(""O_Player_Thread_6_1"", function(){
bp.sync({waitFor:[O(input[1].x, input[1].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_6_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[1].x, input[1].y), O(input[1].x, input[1].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},10);
});

bp.registerBThread(""O_Player_Thread_6_3"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_6_4"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[1].x, input[1].y)]},3);
});

}
var inputs_6 = [[{x: 0, y: 2}, {x: 1, y: 0}],
[{x: 0, y: 0}, {x: 1, y: 2}]]
inputs_6.forEach(function (input) {
behaviorSet6(input);
});

function behaviorSet7(input) {
bp.registerBThread(""O_Player_Thread_7_1"", function(){
bp.sync({request:[O(input[4].x, input[4].y), O(input[3].x, input[3].y), O(input[1].x, input[1].y), O(input[4].x, input[4].y)]},2);
});

}
var inputs_7 = [[{x: 0, y: 1}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 1, y: 2}, {x: 1, y: 2}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 1, y: 2}],
[{x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 0, y: 2}],
[{x: 0, y: 1}, {x: 0, y: 2}, {x: 1, y: 1}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 2, y: 0}],
[{x: 1, y: 2}, {x: 0, y: 2}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 0, y: 0}, {x: 1, y: 2}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 2}, {x: 2, y: 1}]]
inputs_7.forEach(function (input) {
behaviorSet7(input);
});

function behaviorSet8(input) {
bp.registerBThread(""O_Player_Thread_8_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[0].x, input[0].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_8_2"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[1].x, input[1].y)]},4);
});

bp.registerBThread(""O_Player_Thread_8_3"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[1].x, input[1].y), O(input[0].x, input[0].y), X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[1].x, input[1].y)]},3);
});

}
var inputs_8 = [[{x: 1, y: 2}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 2, y: 2}],
[{x: 2, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}],
[{x: 0, y: 0}, {x: 2, y: 2}]]
inputs_8.forEach(function (input) {
behaviorSet8(input);
});

function behaviorSet9(input) {
bp.registerBThread(""O_Player_Thread_9_1"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y)]});
bp.sync({waitFor:[X(input[3].x, input[3].y), X(input[2].x, input[2].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},2);
});

bp.registerBThread(""O_Player_Thread_9_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y)]},8);
});

}
var inputs_9 = [[{x: 2, y: 0}, {x: 1, y: 2}, {x: 1, y: 2}, {x: 0, y: 1}],
[{x: 2, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}],
[{x: 0, y: 0}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 2, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}, {x: 1, y: 2}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}],
[{x: 1, y: 2}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 1, y: 0}]]
inputs_9.forEach(function (input) {
behaviorSet9(input);
});

function behaviorSet10(input) {
bp.registerBThread(""O_Player_Thread_10_1"", function(){
bp.sync({waitFor:[X(input[5].x, input[5].y)]});
bp.sync({waitFor:[O(input[3].x, input[3].y), O(input[6].x, input[6].y), X(input[2].x, input[2].y), X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[5].x, input[5].y), O(input[7].x, input[7].y)]},6);
});

bp.registerBThread(""O_Player_Thread_10_2"", function(){
bp.sync({request:[O(input[6].x, input[6].y)]},2);
});

bp.registerBThread(""O_Player_Thread_10_3"", function(){
bp.sync({waitFor:[X(input[7].x, input[7].y), O(input[3].x, input[3].y), O(input[6].x, input[6].y), O(input[5].x, input[5].y)]});
bp.sync({waitFor:[O(input[7].x, input[7].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[4].x, input[4].y), O(input[3].x, input[3].y), O(input[6].x, input[6].y), O(input[4].x, input[4].y)]},5);
});

bp.registerBThread(""O_Player_Thread_10_4"", function(){
bp.sync({waitFor:[X(input[4].x, input[4].y)]});
bp.sync({waitFor:[X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[4].x, input[4].y), O(input[7].x, input[7].y), O(input[3].x, input[3].y), O(input[2].x, input[2].y)]},9);
});

bp.registerBThread(""O_Player_Thread_10_5"", function(){
bp.sync({waitFor:[X(input[5].x, input[5].y), O(input[2].x, input[2].y), O(input[6].x, input[6].y)]});
bp.sync({request:[O(input[5].x, input[5].y), O(input[0].x, input[0].y), O(input[7].x, input[7].y)]},1);
});

}
var inputs_10 = [[{x: 1, y: 1}, {x: 0, y: 2}, {x: 1, y: 2}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 2}, {x: 0, y: 1}],
[{x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 1}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 0, y: 1}, {x: 2, y: 2}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 1}],
[{x: 1, y: 0}, {x: 1, y: 0}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}],
[{x: 0, y: 0}, {x: 1, y: 0}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 2, y: 2}, {x: 0, y: 0}],
[{x: 2, y: 1}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 1, y: 2}, {x: 2, y: 1}, {x: 0, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 2, y: 2}, {x: 2, y: 2}],
[{x: 0, y: 1}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 2, y: 0}, {x: 2, y: 2}]]
inputs_10.forEach(function (input) {
behaviorSet10(input);
});

"
69,10.0,8.0,36.84210526315789,12.0,6.0,32.0,63.0,18.0,32.0,0.0,14.0,"function behaviorSet1(input) {
bp.registerBThread(""O_Player_Thread_1_1"", function(){
bp.sync({waitFor:[O(input[5].x, input[5].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[5].x, input[5].y)]},2);
});

}
var inputs_1 = [[{x: 0, y: 1}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 0, y: 2}, {x: 1, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 0}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 1, y: 0}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 2, y: 1}],
[{x: 0, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 1}],
[{x: 1, y: 1}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 1}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 1, y: 0}, {x: 0, y: 2}]]
inputs_1.forEach(function (input) {
behaviorSet1(input);
});

function behaviorSet2(input) {
bp.registerBThread(""O_Player_Thread_2_1"", function(){
bp.sync({request:[O(input[6].x, input[6].y), O(input[3].x, input[3].y), O(input[2].x, input[2].y), O(input[2].x, input[2].y)]},4);
});

bp.registerBThread(""O_Player_Thread_2_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[5].x, input[5].y), X(input[7].x, input[7].y)]});
bp.sync({request:[O(input[7].x, input[7].y)]},2);
});

bp.registerBThread(""O_Player_Thread_2_3"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[2].x, input[2].y)]},8);
});

}
var inputs_2 = [[{x: 1, y: 0}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 2, y: 2}, {x: 1, y: 2}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 2, y: 2}, {x: 1, y: 1}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 1, y: 0}],
[{x: 2, y: 2}, {x: 1, y: 2}, {x: 0, y: 2}, {x: 1, y: 2}, {x: 1, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 0, y: 2}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 0, y: 2}],
[{x: 1, y: 0}, {x: 0, y: 0}, {x: 0, y: 1}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 0, y: 2}]]
inputs_2.forEach(function (input) {
behaviorSet2(input);
});

function behaviorSet3(input) {
bp.registerBThread(""O_Player_Thread_3_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y)]},9);
});

bp.registerBThread(""O_Player_Thread_3_2"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), O(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y)]},4);
});

bp.registerBThread(""O_Player_Thread_3_3"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y), X(input[2].x, input[2].y), O(input[1].x, input[1].y), X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y)]},10);
});

bp.registerBThread(""O_Player_Thread_3_4"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[1].x, input[1].y)]});
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},11);
});

bp.registerBThread(""O_Player_Thread_3_5"", function(){
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},10);
});

}
var inputs_3 = [[{x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}],
[{x: 1, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}],
[{x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 0}]]
inputs_3.forEach(function (input) {
behaviorSet3(input);
});

function behaviorSet4(input) {
bp.registerBThread(""O_Player_Thread_4_1"", function(){
bp.sync({waitFor:[O(input[4].x, input[4].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_4_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[3].x, input[3].y)]},8);
});

}
var inputs_4 = [[{x: 2, y: 0}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 2, y: 1}, {x: 1, y: 0}],
[{x: 2, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 0, y: 0}],
[{x: 0, y: 2}, {x: 1, y: 2}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 0, y: 0}],
[{x: 1, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 2, y: 0}, {x: 0, y: 0}],
[{x: 2, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 2, y: 2}]]
inputs_4.forEach(function (input) {
behaviorSet4(input);
});

function behaviorSet5(input) {
bp.registerBThread(""O_Player_Thread_5_1"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[1].x, input[1].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},3);
});

bp.registerBThread(""O_Player_Thread_5_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},9);
});

bp.registerBThread(""O_Player_Thread_5_3"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({waitFor:[X(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y), O(input[1].x, input[1].y)]},11);
});

}
var inputs_5 = [[{x: 1, y: 0}, {x: 1, y: 1}, {x: 1, y: 2}],
[{x: 2, y: 2}, {x: 0, y: 2}, {x: 2, y: 1}]]
inputs_5.forEach(function (input) {
behaviorSet5(input);
});

function behaviorSet6(input) {
bp.registerBThread(""O_Player_Thread_6_1"", function(){
bp.sync({waitFor:[O(input[1].x, input[1].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_6_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[1].x, input[1].y), O(input[1].x, input[1].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},10);
});

bp.registerBThread(""O_Player_Thread_6_3"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_6_4"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[1].x, input[1].y)]},3);
});

}
var inputs_6 = [[{x: 0, y: 2}, {x: 1, y: 0}],
[{x: 0, y: 0}, {x: 1, y: 2}]]
inputs_6.forEach(function (input) {
behaviorSet6(input);
});

function behaviorSet7(input) {
bp.registerBThread(""O_Player_Thread_7_1"", function(){
bp.sync({request:[O(input[4].x, input[4].y), O(input[3].x, input[3].y), O(input[1].x, input[1].y), O(input[4].x, input[4].y)]},2);
});

}
var inputs_7 = [[{x: 0, y: 1}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 1, y: 2}, {x: 1, y: 2}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 1, y: 2}],
[{x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 0, y: 2}],
[{x: 0, y: 1}, {x: 0, y: 2}, {x: 1, y: 1}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 2, y: 0}],
[{x: 1, y: 2}, {x: 0, y: 2}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 0, y: 0}, {x: 1, y: 2}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 2}, {x: 2, y: 1}]]
inputs_7.forEach(function (input) {
behaviorSet7(input);
});

function behaviorSet8(input) {
bp.registerBThread(""O_Player_Thread_8_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[0].x, input[0].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_8_2"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[1].x, input[1].y)]},4);
});

bp.registerBThread(""O_Player_Thread_8_3"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[1].x, input[1].y), O(input[0].x, input[0].y), X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[1].x, input[1].y)]},3);
});

}
var inputs_8 = [[{x: 1, y: 2}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 2, y: 2}],
[{x: 2, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}],
[{x: 0, y: 0}, {x: 2, y: 2}]]
inputs_8.forEach(function (input) {
behaviorSet8(input);
});

function behaviorSet9(input) {
bp.registerBThread(""O_Player_Thread_9_1"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y)]});
bp.sync({waitFor:[X(input[3].x, input[3].y), X(input[2].x, input[2].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[0].x, input[0].y)]},2);
});

bp.registerBThread(""O_Player_Thread_9_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y), O(input[2].x, input[2].y)]},8);
});

}
var inputs_9 = [[{x: 2, y: 0}, {x: 1, y: 2}, {x: 1, y: 2}, {x: 0, y: 1}],
[{x: 2, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}],
[{x: 0, y: 0}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 2, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}, {x: 1, y: 2}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}],
[{x: 1, y: 2}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 1, y: 0}]]
inputs_9.forEach(function (input) {
behaviorSet9(input);
});

function behaviorSet10(input) {
bp.registerBThread(""O_Player_Thread_10_1"", function(){
bp.sync({waitFor:[X(input[5].x, input[5].y)]});
bp.sync({waitFor:[O(input[3].x, input[3].y), O(input[6].x, input[6].y), X(input[2].x, input[2].y), X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[5].x, input[5].y), O(input[7].x, input[7].y)]},6);
});

bp.registerBThread(""O_Player_Thread_10_2"", function(){
bp.sync({request:[O(input[6].x, input[6].y)]},2);
});

bp.registerBThread(""O_Player_Thread_10_3"", function(){
bp.sync({waitFor:[X(input[7].x, input[7].y), O(input[3].x, input[3].y), O(input[6].x, input[6].y), O(input[5].x, input[5].y)]});
bp.sync({waitFor:[O(input[7].x, input[7].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[4].x, input[4].y), O(input[3].x, input[3].y), O(input[6].x, input[6].y), O(input[4].x, input[4].y)]},5);
});

bp.registerBThread(""O_Player_Thread_10_4"", function(){
bp.sync({waitFor:[X(input[4].x, input[4].y)]});
bp.sync({waitFor:[X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[4].x, input[4].y), O(input[7].x, input[7].y), O(input[3].x, input[3].y), O(input[2].x, input[2].y)]},9);
});

bp.registerBThread(""O_Player_Thread_10_5"", function(){
bp.sync({waitFor:[X(input[5].x, input[5].y), O(input[2].x, input[2].y), O(input[6].x, input[6].y)]});
bp.sync({request:[O(input[5].x, input[5].y), O(input[0].x, input[0].y), O(input[7].x, input[7].y)]},1);
});

}
var inputs_10 = [[{x: 1, y: 1}, {x: 0, y: 2}, {x: 1, y: 2}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 2}, {x: 0, y: 1}],
[{x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 1}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 0, y: 1}, {x: 2, y: 2}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 1}],
[{x: 1, y: 0}, {x: 1, y: 0}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}],
[{x: 0, y: 0}, {x: 1, y: 0}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 2, y: 2}, {x: 0, y: 0}],
[{x: 2, y: 1}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 1, y: 2}, {x: 2, y: 1}, {x: 0, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 2, y: 2}, {x: 2, y: 2}],
[{x: 0, y: 1}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 2, y: 0}, {x: 2, y: 2}]]
inputs_10.forEach(function (input) {
behaviorSet10(input);
});

"
70,10.0,6.0,44.37110377704437,13.0,8.0,29.0,60.0,14.0,41.0,0.0,19.0,"function behaviorSet1(input) {
bp.registerBThread(""O_Player_Thread_1_1"", function(){
bp.sync({waitFor:[O(input[5].x, input[5].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[5].x, input[5].y)]},2);
});

}
var inputs_1 = [[{x: 0, y: 1}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 0, y: 2}, {x: 1, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 0}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 1, y: 0}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 2, y: 1}],
[{x: 0, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 1}],
[{x: 1, y: 1}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 1}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 1, y: 0}, {x: 0, y: 2}]]
inputs_1.forEach(function (input) {
behaviorSet1(input);
});

function behaviorSet2(input) {
bp.registerBThread(""O_Player_Thread_2_1"", function(){
bp.sync({request:[O(input[6].x, input[6].y), O(input[3].x, input[3].y), O(input[2].x, input[2].y), O(input[2].x, input[2].y)]},4);
});

bp.registerBThread(""O_Player_Thread_2_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[5].x, input[5].y), X(input[7].x, input[7].y)]});
bp.sync({request:[O(input[7].x, input[7].y)]},2);
});

bp.registerBThread(""O_Player_Thread_2_3"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[0].x, input[0].y)]},8);
});

}
var inputs_2 = [[{x: 1, y: 0}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 2, y: 2}, {x: 1, y: 2}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 2, y: 2}, {x: 1, y: 1}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 1, y: 0}],
[{x: 2, y: 2}, {x: 1, y: 2}, {x: 0, y: 2}, {x: 1, y: 2}, {x: 1, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 0, y: 2}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 0, y: 2}],
[{x: 1, y: 0}, {x: 0, y: 0}, {x: 0, y: 1}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 0, y: 2}]]
inputs_2.forEach(function (input) {
behaviorSet2(input);
});

function behaviorSet3(input) {
bp.registerBThread(""O_Player_Thread_3_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y)]},9);
});

bp.registerBThread(""O_Player_Thread_3_2"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), O(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y)]},4);
});

bp.registerBThread(""O_Player_Thread_3_3"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y), X(input[2].x, input[2].y), O(input[1].x, input[1].y), X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y)]},10);
});

bp.registerBThread(""O_Player_Thread_3_4"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[1].x, input[1].y)]});
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},11);
});

bp.registerBThread(""O_Player_Thread_3_5"", function(){
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},10);
});

}
var inputs_3 = [[{x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}],
[{x: 1, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}],
[{x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 0}]]
inputs_3.forEach(function (input) {
behaviorSet3(input);
});

function behaviorSet4(input) {
bp.registerBThread(""O_Player_Thread_4_1"", function(){
bp.sync({waitFor:[O(input[4].x, input[4].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_4_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[3].x, input[3].y)]},8);
});

}
var inputs_4 = [[{x: 2, y: 0}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 2, y: 1}, {x: 1, y: 0}],
[{x: 2, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 0, y: 0}],
[{x: 0, y: 2}, {x: 1, y: 2}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 0, y: 0}],
[{x: 1, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 2, y: 0}, {x: 0, y: 0}],
[{x: 2, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 2, y: 2}]]
inputs_4.forEach(function (input) {
behaviorSet4(input);
});

function behaviorSet5(input) {
bp.registerBThread(""O_Player_Thread_5_1"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[1].x, input[1].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},3);
});

bp.registerBThread(""O_Player_Thread_5_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},9);
});

bp.registerBThread(""O_Player_Thread_5_3"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({waitFor:[X(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y), O(input[1].x, input[1].y)]},11);
});

}
var inputs_5 = [[{x: 1, y: 0}, {x: 1, y: 1}, {x: 1, y: 2}],
[{x: 2, y: 2}, {x: 0, y: 2}, {x: 2, y: 1}]]
inputs_5.forEach(function (input) {
behaviorSet5(input);
});

function behaviorSet6(input) {
bp.registerBThread(""O_Player_Thread_6_1"", function(){
bp.sync({waitFor:[O(input[1].x, input[1].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_6_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[1].x, input[1].y), O(input[1].x, input[1].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},10);
});

bp.registerBThread(""O_Player_Thread_6_3"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_6_4"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[1].x, input[1].y)]},3);
});

}
var inputs_6 = [[{x: 0, y: 2}, {x: 1, y: 0}],
[{x: 0, y: 0}, {x: 1, y: 2}]]
inputs_6.forEach(function (input) {
behaviorSet6(input);
});

function behaviorSet7(input) {
bp.registerBThread(""O_Player_Thread_7_1"", function(){
bp.sync({request:[O(input[4].x, input[4].y), O(input[3].x, input[3].y), O(input[1].x, input[1].y), O(input[4].x, input[4].y)]},2);
});

}
var inputs_7 = [[{x: 0, y: 1}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 1, y: 2}, {x: 1, y: 2}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 1, y: 2}],
[{x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 0, y: 2}],
[{x: 0, y: 1}, {x: 0, y: 2}, {x: 1, y: 1}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 2, y: 0}],
[{x: 1, y: 2}, {x: 0, y: 2}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 0, y: 0}, {x: 1, y: 2}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 2}, {x: 2, y: 1}]]
inputs_7.forEach(function (input) {
behaviorSet7(input);
});

function behaviorSet8(input) {
bp.registerBThread(""O_Player_Thread_8_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[0].x, input[0].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_8_2"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[1].x, input[1].y)]},4);
});

bp.registerBThread(""O_Player_Thread_8_3"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[1].x, input[1].y), O(input[0].x, input[0].y), X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[1].x, input[1].y)]},3);
});

}
var inputs_8 = [[{x: 1, y: 2}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 2, y: 2}],
[{x: 2, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}],
[{x: 0, y: 0}, {x: 2, y: 2}]]
inputs_8.forEach(function (input) {
behaviorSet8(input);
});

function behaviorSet9(input) {
bp.registerBThread(""O_Player_Thread_9_1"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y)]});
bp.sync({waitFor:[X(input[3].x, input[3].y), X(input[2].x, input[2].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},2);
});

bp.registerBThread(""O_Player_Thread_9_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y), O(input[2].x, input[2].y)]},8);
});

}
var inputs_9 = [[{x: 2, y: 0}, {x: 1, y: 2}, {x: 1, y: 2}, {x: 0, y: 1}],
[{x: 2, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}],
[{x: 0, y: 0}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 2, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}, {x: 1, y: 2}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}],
[{x: 1, y: 2}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 1, y: 0}]]
inputs_9.forEach(function (input) {
behaviorSet9(input);
});

function behaviorSet10(input) {
bp.registerBThread(""O_Player_Thread_10_1"", function(){
bp.sync({waitFor:[X(input[5].x, input[5].y)]});
bp.sync({waitFor:[O(input[3].x, input[3].y), O(input[6].x, input[6].y), X(input[2].x, input[2].y), X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[5].x, input[5].y), O(input[7].x, input[7].y)]},6);
});

bp.registerBThread(""O_Player_Thread_10_2"", function(){
bp.sync({request:[O(input[6].x, input[6].y)]},2);
});

bp.registerBThread(""O_Player_Thread_10_3"", function(){
bp.sync({waitFor:[X(input[7].x, input[7].y), O(input[3].x, input[3].y), O(input[6].x, input[6].y), O(input[5].x, input[5].y)]});
bp.sync({waitFor:[O(input[7].x, input[7].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[4].x, input[4].y), O(input[3].x, input[3].y), O(input[6].x, input[6].y), O(input[4].x, input[4].y)]},5);
});

bp.registerBThread(""O_Player_Thread_10_4"", function(){
bp.sync({waitFor:[X(input[4].x, input[4].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[4].x, input[4].y), O(input[7].x, input[7].y), O(input[3].x, input[3].y), O(input[2].x, input[2].y)]},9);
});

bp.registerBThread(""O_Player_Thread_10_5"", function(){
bp.sync({waitFor:[X(input[5].x, input[5].y), O(input[2].x, input[2].y), O(input[6].x, input[6].y)]});
bp.sync({request:[O(input[5].x, input[5].y), O(input[0].x, input[0].y), O(input[7].x, input[7].y)]},1);
});

}
var inputs_10 = [[{x: 1, y: 1}, {x: 0, y: 2}, {x: 1, y: 2}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 2}, {x: 0, y: 1}],
[{x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 1}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 0, y: 1}, {x: 2, y: 2}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 2, y: 2}, {x: 2, y: 2}],
[{x: 0, y: 0}, {x: 1, y: 0}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 2, y: 2}, {x: 0, y: 0}],
[{x: 2, y: 1}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 1, y: 2}, {x: 2, y: 1}, {x: 0, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 2, y: 2}, {x: 2, y: 2}],
[{x: 0, y: 1}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 2, y: 0}, {x: 2, y: 2}]]
inputs_10.forEach(function (input) {
behaviorSet10(input);
});

"
71,10.0,3.0,51.38984214138641,19.0,7.0,24.0,55.0,12.0,39.0,0.0,16.0,"function behaviorSet1(input) {
bp.registerBThread(""O_Player_Thread_1_1"", function(){
bp.sync({request:[O(input[4].x, input[4].y), O(input[3].x, input[3].y), O(input[1].x, input[1].y), O(input[4].x, input[4].y)]},2);
});

}
var inputs_1 = [[{x: 0, y: 1}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 0, y: 2}, {x: 1, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 0}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 1, y: 0}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 2, y: 1}],
[{x: 0, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 1}],
[{x: 1, y: 1}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 1}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 1, y: 0}, {x: 0, y: 2}]]
inputs_1.forEach(function (input) {
behaviorSet1(input);
});

function behaviorSet2(input) {
bp.registerBThread(""O_Player_Thread_2_1"", function(){
bp.sync({request:[O(input[6].x, input[6].y), O(input[3].x, input[3].y), O(input[2].x, input[2].y), O(input[2].x, input[2].y)]},4);
});

bp.registerBThread(""O_Player_Thread_2_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[5].x, input[5].y), X(input[7].x, input[7].y)]});
bp.sync({request:[O(input[7].x, input[7].y)]},2);
});

bp.registerBThread(""O_Player_Thread_2_3"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[2].x, input[2].y)]},8);
});

}
var inputs_2 = [[{x: 1, y: 0}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 2, y: 2}, {x: 1, y: 2}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 2, y: 2}, {x: 1, y: 1}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 1, y: 0}],
[{x: 2, y: 2}, {x: 1, y: 2}, {x: 0, y: 2}, {x: 1, y: 2}, {x: 1, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 0, y: 2}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 0, y: 2}],
[{x: 1, y: 0}, {x: 0, y: 0}, {x: 0, y: 1}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 0, y: 2}]]
inputs_2.forEach(function (input) {
behaviorSet2(input);
});

function behaviorSet3(input) {
bp.registerBThread(""O_Player_Thread_3_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y)]},9);
});

bp.registerBThread(""O_Player_Thread_3_2"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), O(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y)]},4);
});

bp.registerBThread(""O_Player_Thread_3_3"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y), X(input[2].x, input[2].y), O(input[1].x, input[1].y), X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y)]},10);
});

bp.registerBThread(""O_Player_Thread_3_4"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[1].x, input[1].y)]});
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},11);
});

bp.registerBThread(""O_Player_Thread_3_5"", function(){
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},10);
});

}
var inputs_3 = [[{x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}],
[{x: 1, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}],
[{x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 0}]]
inputs_3.forEach(function (input) {
behaviorSet3(input);
});

function behaviorSet4(input) {
bp.registerBThread(""O_Player_Thread_4_1"", function(){
bp.sync({waitFor:[O(input[4].x, input[4].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_4_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[3].x, input[3].y)]},8);
});

}
var inputs_4 = [[{x: 2, y: 0}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 2, y: 1}, {x: 1, y: 0}],
[{x: 2, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 0, y: 0}],
[{x: 0, y: 2}, {x: 1, y: 2}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 0, y: 0}],
[{x: 1, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 2, y: 0}, {x: 0, y: 0}],
[{x: 2, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 2, y: 2}]]
inputs_4.forEach(function (input) {
behaviorSet4(input);
});

function behaviorSet5(input) {
bp.registerBThread(""O_Player_Thread_5_1"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[1].x, input[1].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},3);
});

bp.registerBThread(""O_Player_Thread_5_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},9);
});

bp.registerBThread(""O_Player_Thread_5_3"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({waitFor:[X(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y), O(input[1].x, input[1].y)]},11);
});

}
var inputs_5 = [[{x: 1, y: 0}, {x: 1, y: 1}, {x: 1, y: 2}],
[{x: 2, y: 2}, {x: 0, y: 2}, {x: 2, y: 1}]]
inputs_5.forEach(function (input) {
behaviorSet5(input);
});

function behaviorSet6(input) {
bp.registerBThread(""O_Player_Thread_6_1"", function(){
bp.sync({waitFor:[O(input[1].x, input[1].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_6_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[1].x, input[1].y), O(input[1].x, input[1].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},10);
});

bp.registerBThread(""O_Player_Thread_6_3"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_6_4"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[1].x, input[1].y)]},3);
});

}
var inputs_6 = [[{x: 0, y: 2}, {x: 1, y: 0}],
[{x: 0, y: 0}, {x: 1, y: 2}]]
inputs_6.forEach(function (input) {
behaviorSet6(input);
});

function behaviorSet7(input) {
bp.registerBThread(""O_Player_Thread_7_1"", function(){
bp.sync({request:[O(input[4].x, input[4].y), O(input[3].x, input[3].y), O(input[1].x, input[1].y), O(input[4].x, input[4].y)]},2);
});

}
var inputs_7 = [[{x: 0, y: 1}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 1, y: 2}, {x: 1, y: 2}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 1, y: 2}],
[{x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 0, y: 2}],
[{x: 0, y: 1}, {x: 0, y: 2}, {x: 1, y: 1}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 2, y: 0}],
[{x: 1, y: 2}, {x: 0, y: 2}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 0, y: 0}, {x: 1, y: 2}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 2}, {x: 2, y: 1}]]
inputs_7.forEach(function (input) {
behaviorSet7(input);
});

function behaviorSet8(input) {
bp.registerBThread(""O_Player_Thread_8_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[0].x, input[0].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_8_2"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[1].x, input[1].y)]},4);
});

bp.registerBThread(""O_Player_Thread_8_3"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[1].x, input[1].y), O(input[0].x, input[0].y), X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[1].x, input[1].y)]},3);
});

}
var inputs_8 = [[{x: 1, y: 2}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 2, y: 2}],
[{x: 2, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}],
[{x: 0, y: 0}, {x: 2, y: 2}]]
inputs_8.forEach(function (input) {
behaviorSet8(input);
});

function behaviorSet9(input) {
bp.registerBThread(""O_Player_Thread_9_1"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y)]});
bp.sync({waitFor:[X(input[3].x, input[3].y), X(input[2].x, input[2].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[0].x, input[0].y)]},2);
});

bp.registerBThread(""O_Player_Thread_9_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y), O(input[2].x, input[2].y)]},8);
});

}
var inputs_9 = [[{x: 2, y: 0}, {x: 1, y: 2}, {x: 1, y: 2}, {x: 0, y: 1}],
[{x: 2, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}],
[{x: 0, y: 0}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 2, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}, {x: 1, y: 2}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}],
[{x: 1, y: 2}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 1, y: 0}]]
inputs_9.forEach(function (input) {
behaviorSet9(input);
});

function behaviorSet10(input) {
bp.registerBThread(""O_Player_Thread_10_1"", function(){
bp.sync({waitFor:[X(input[5].x, input[5].y)]});
bp.sync({waitFor:[O(input[3].x, input[3].y), O(input[6].x, input[6].y), X(input[2].x, input[2].y), X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[5].x, input[5].y), O(input[7].x, input[7].y)]},6);
});

bp.registerBThread(""O_Player_Thread_10_2"", function(){
bp.sync({request:[O(input[6].x, input[6].y)]},2);
});

bp.registerBThread(""O_Player_Thread_10_3"", function(){
bp.sync({waitFor:[X(input[7].x, input[7].y), O(input[3].x, input[3].y), O(input[6].x, input[6].y), O(input[5].x, input[5].y)]});
bp.sync({waitFor:[O(input[7].x, input[7].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[4].x, input[4].y), O(input[3].x, input[3].y), O(input[6].x, input[6].y), O(input[4].x, input[4].y)]},5);
});

bp.registerBThread(""O_Player_Thread_10_4"", function(){
bp.sync({waitFor:[X(input[4].x, input[4].y)]});
bp.sync({waitFor:[X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[4].x, input[4].y), O(input[7].x, input[7].y), O(input[3].x, input[3].y), O(input[2].x, input[2].y)]},9);
});

bp.registerBThread(""O_Player_Thread_10_5"", function(){
bp.sync({waitFor:[X(input[5].x, input[5].y), O(input[2].x, input[2].y), O(input[6].x, input[6].y)]});
bp.sync({request:[O(input[5].x, input[5].y), O(input[0].x, input[0].y), O(input[7].x, input[7].y)]},1);
});

}
var inputs_10 = [[{x: 1, y: 1}, {x: 0, y: 2}, {x: 1, y: 2}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 2}, {x: 0, y: 1}],
[{x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 1}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 0, y: 1}, {x: 2, y: 2}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 1}],
[{x: 1, y: 0}, {x: 1, y: 0}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}],
[{x: 0, y: 0}, {x: 1, y: 0}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 2, y: 2}, {x: 0, y: 0}],
[{x: 2, y: 1}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 1, y: 2}, {x: 2, y: 1}, {x: 0, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 2, y: 2}, {x: 2, y: 2}],
[{x: 0, y: 1}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 2, y: 0}, {x: 2, y: 2}]]
inputs_10.forEach(function (input) {
behaviorSet10(input);
});

"
72,10.0,10.0,43.372751909337275,19.0,5.0,26.0,59.0,22.0,40.0,0.0,20.0,"function behaviorSet1(input) {
bp.registerBThread(""O_Player_Thread_1_1"", function(){
bp.sync({waitFor:[O(input[5].x, input[5].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[5].x, input[5].y)]},2);
});

}
var inputs_1 = [[{x: 0, y: 1}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 0, y: 2}, {x: 1, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 0}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 1, y: 0}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 2, y: 1}],
[{x: 0, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 1}],
[{x: 1, y: 1}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 1}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 1, y: 0}, {x: 0, y: 2}]]
inputs_1.forEach(function (input) {
behaviorSet1(input);
});

function behaviorSet2(input) {
bp.registerBThread(""O_Player_Thread_2_1"", function(){
bp.sync({request:[O(input[6].x, input[6].y), O(input[3].x, input[3].y), O(input[2].x, input[2].y), O(input[2].x, input[2].y)]},4);
});

bp.registerBThread(""O_Player_Thread_2_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[5].x, input[5].y), X(input[7].x, input[7].y)]});
bp.sync({request:[O(input[7].x, input[7].y)]},2);
});

bp.registerBThread(""O_Player_Thread_2_3"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[0].x, input[0].y)]},8);
});

}
var inputs_2 = [[{x: 1, y: 0}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 2, y: 2}, {x: 1, y: 2}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 2, y: 2}, {x: 1, y: 1}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 1, y: 0}],
[{x: 2, y: 2}, {x: 1, y: 2}, {x: 0, y: 2}, {x: 1, y: 2}, {x: 1, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 0, y: 2}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 0, y: 2}],
[{x: 1, y: 0}, {x: 0, y: 0}, {x: 0, y: 1}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 0, y: 2}]]
inputs_2.forEach(function (input) {
behaviorSet2(input);
});

function behaviorSet3(input) {
bp.registerBThread(""O_Player_Thread_3_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y)]},9);
});

bp.registerBThread(""O_Player_Thread_3_2"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), O(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y)]},4);
});

bp.registerBThread(""O_Player_Thread_3_3"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y), X(input[2].x, input[2].y), O(input[1].x, input[1].y), X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y)]},10);
});

bp.registerBThread(""O_Player_Thread_3_4"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[1].x, input[1].y)]});
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},11);
});

bp.registerBThread(""O_Player_Thread_3_5"", function(){
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},10);
});

}
var inputs_3 = [[{x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}],
[{x: 1, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}],
[{x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 0}]]
inputs_3.forEach(function (input) {
behaviorSet3(input);
});

function behaviorSet4(input) {
bp.registerBThread(""O_Player_Thread_4_1"", function(){
bp.sync({waitFor:[O(input[4].x, input[4].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_4_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[3].x, input[3].y)]},8);
});

}
var inputs_4 = [[{x: 2, y: 0}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 2, y: 1}, {x: 1, y: 0}],
[{x: 0, y: 1}, {x: 2, y: 0}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}],
[{x: 0, y: 2}, {x: 1, y: 2}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 0, y: 0}],
[{x: 1, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 2, y: 0}, {x: 0, y: 0}],
[{x: 2, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 2, y: 2}]]
inputs_4.forEach(function (input) {
behaviorSet4(input);
});

function behaviorSet5(input) {
bp.registerBThread(""O_Player_Thread_5_1"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[1].x, input[1].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},3);
});

bp.registerBThread(""O_Player_Thread_5_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},9);
});

bp.registerBThread(""O_Player_Thread_5_3"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({waitFor:[X(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y), O(input[1].x, input[1].y)]},11);
});

}
var inputs_5 = [[{x: 1, y: 0}, {x: 1, y: 1}, {x: 1, y: 2}],
[{x: 2, y: 2}, {x: 0, y: 2}, {x: 2, y: 1}]]
inputs_5.forEach(function (input) {
behaviorSet5(input);
});

function behaviorSet6(input) {
bp.registerBThread(""O_Player_Thread_6_1"", function(){
bp.sync({waitFor:[O(input[1].x, input[1].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_6_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[1].x, input[1].y), O(input[1].x, input[1].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},10);
});

bp.registerBThread(""O_Player_Thread_6_3"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_6_4"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[1].x, input[1].y)]},3);
});

}
var inputs_6 = [[{x: 0, y: 2}, {x: 1, y: 0}],
[{x: 0, y: 0}, {x: 1, y: 2}]]
inputs_6.forEach(function (input) {
behaviorSet6(input);
});

function behaviorSet7(input) {
bp.registerBThread(""O_Player_Thread_7_1"", function(){
bp.sync({request:[O(input[4].x, input[4].y), O(input[3].x, input[3].y), O(input[1].x, input[1].y), O(input[4].x, input[4].y)]},2);
});

}
var inputs_7 = [[{x: 0, y: 1}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 1, y: 2}, {x: 1, y: 2}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 1, y: 2}],
[{x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 0, y: 2}],
[{x: 0, y: 1}, {x: 0, y: 2}, {x: 1, y: 1}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 2, y: 0}],
[{x: 1, y: 2}, {x: 0, y: 2}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 0, y: 0}, {x: 1, y: 2}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 2}, {x: 2, y: 1}]]
inputs_7.forEach(function (input) {
behaviorSet7(input);
});

function behaviorSet8(input) {
bp.registerBThread(""O_Player_Thread_8_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[0].x, input[0].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_8_2"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[1].x, input[1].y)]},4);
});

bp.registerBThread(""O_Player_Thread_8_3"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[1].x, input[1].y), O(input[0].x, input[0].y), X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[1].x, input[1].y)]},3);
});

}
var inputs_8 = [[{x: 1, y: 2}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 2, y: 2}],
[{x: 2, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}],
[{x: 0, y: 0}, {x: 2, y: 2}]]
inputs_8.forEach(function (input) {
behaviorSet8(input);
});

function behaviorSet9(input) {
bp.registerBThread(""O_Player_Thread_9_1"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y)]});
bp.sync({waitFor:[X(input[3].x, input[3].y), X(input[2].x, input[2].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},2);
});

bp.registerBThread(""O_Player_Thread_9_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y)]},8);
});

}
var inputs_9 = [[{x: 2, y: 0}, {x: 1, y: 2}, {x: 1, y: 2}, {x: 0, y: 1}],
[{x: 2, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}],
[{x: 0, y: 0}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 2, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}, {x: 1, y: 2}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}],
[{x: 1, y: 2}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 1, y: 0}]]
inputs_9.forEach(function (input) {
behaviorSet9(input);
});

function behaviorSet10(input) {
bp.registerBThread(""O_Player_Thread_10_1"", function(){
bp.sync({waitFor:[X(input[5].x, input[5].y)]});
bp.sync({waitFor:[O(input[3].x, input[3].y), O(input[6].x, input[6].y), X(input[2].x, input[2].y), X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[5].x, input[5].y), O(input[7].x, input[7].y)]},6);
});

bp.registerBThread(""O_Player_Thread_10_2"", function(){
bp.sync({request:[O(input[6].x, input[6].y)]},2);
});

bp.registerBThread(""O_Player_Thread_10_3"", function(){
bp.sync({waitFor:[X(input[7].x, input[7].y), O(input[3].x, input[3].y), O(input[6].x, input[6].y), O(input[5].x, input[5].y)]});
bp.sync({waitFor:[O(input[7].x, input[7].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[4].x, input[4].y), O(input[3].x, input[3].y), O(input[6].x, input[6].y), O(input[4].x, input[4].y)]},5);
});

bp.registerBThread(""O_Player_Thread_10_4"", function(){
bp.sync({waitFor:[X(input[4].x, input[4].y)]});
bp.sync({waitFor:[X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[4].x, input[4].y), O(input[7].x, input[7].y), O(input[3].x, input[3].y), O(input[2].x, input[2].y)]},9);
});

bp.registerBThread(""O_Player_Thread_10_5"", function(){
bp.sync({waitFor:[X(input[5].x, input[5].y), O(input[2].x, input[2].y), O(input[6].x, input[6].y)]});
bp.sync({request:[O(input[5].x, input[5].y), O(input[0].x, input[0].y), O(input[7].x, input[7].y)]},1);
});

}
var inputs_10 = [[{x: 1, y: 1}, {x: 0, y: 2}, {x: 1, y: 2}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 2}, {x: 0, y: 1}],
[{x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 1}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 0, y: 1}, {x: 2, y: 2}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 1}],
[{x: 1, y: 0}, {x: 1, y: 0}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}],
[{x: 0, y: 0}, {x: 1, y: 0}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 2, y: 2}, {x: 0, y: 0}],
[{x: 2, y: 1}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 1, y: 2}, {x: 2, y: 1}, {x: 0, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 2, y: 2}, {x: 2, y: 2}],
[{x: 0, y: 1}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 2, y: 0}, {x: 2, y: 2}]]
inputs_10.forEach(function (input) {
behaviorSet10(input);
});

"
73,10.0,9.0,36.05555555555556,13.0,6.0,31.0,64.0,23.0,36.0,0.0,18.0,"function behaviorSet1(input) {
bp.registerBThread(""O_Player_Thread_1_1"", function(){
bp.sync({waitFor:[O(input[5].x, input[5].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[5].x, input[5].y)]},2);
});

}
var inputs_1 = [[{x: 0, y: 1}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 0, y: 2}, {x: 1, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 0}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 1, y: 0}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 2, y: 1}],
[{x: 0, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 1}],
[{x: 1, y: 1}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 1}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 1, y: 0}, {x: 0, y: 2}]]
inputs_1.forEach(function (input) {
behaviorSet1(input);
});

function behaviorSet2(input) {
bp.registerBThread(""O_Player_Thread_2_1"", function(){
bp.sync({request:[O(input[6].x, input[6].y), O(input[3].x, input[3].y), O(input[2].x, input[2].y), O(input[2].x, input[2].y)]},4);
});

bp.registerBThread(""O_Player_Thread_2_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[5].x, input[5].y), X(input[7].x, input[7].y)]});
bp.sync({request:[O(input[7].x, input[7].y)]},2);
});

bp.registerBThread(""O_Player_Thread_2_3"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[0].x, input[0].y)]},8);
});

}
var inputs_2 = [[{x: 1, y: 0}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 2, y: 2}, {x: 1, y: 2}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 2, y: 2}, {x: 1, y: 1}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 1, y: 0}],
[{x: 2, y: 2}, {x: 1, y: 2}, {x: 0, y: 2}, {x: 1, y: 2}, {x: 1, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 0, y: 2}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 0, y: 2}],
[{x: 1, y: 0}, {x: 0, y: 0}, {x: 0, y: 1}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 0, y: 2}]]
inputs_2.forEach(function (input) {
behaviorSet2(input);
});

function behaviorSet3(input) {
bp.registerBThread(""O_Player_Thread_3_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y)]},9);
});

bp.registerBThread(""O_Player_Thread_3_2"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), O(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y)]},4);
});

bp.registerBThread(""O_Player_Thread_3_3"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y), X(input[2].x, input[2].y), O(input[1].x, input[1].y), X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y)]},10);
});

bp.registerBThread(""O_Player_Thread_3_4"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[1].x, input[1].y)]});
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},11);
});

bp.registerBThread(""O_Player_Thread_3_5"", function(){
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},10);
});

}
var inputs_3 = [[{x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}],
[{x: 1, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}],
[{x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 0}]]
inputs_3.forEach(function (input) {
behaviorSet3(input);
});

function behaviorSet4(input) {
bp.registerBThread(""O_Player_Thread_4_1"", function(){
bp.sync({waitFor:[O(input[4].x, input[4].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[3].x, input[3].y)]},7);
});

bp.registerBThread(""O_Player_Thread_4_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[3].x, input[3].y)]},8);
});

}
var inputs_4 = [[{x: 2, y: 0}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 2, y: 1}, {x: 1, y: 0}],
[{x: 0, y: 1}, {x: 2, y: 0}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}],
[{x: 0, y: 2}, {x: 1, y: 2}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 0, y: 0}],
[{x: 1, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 2, y: 0}, {x: 0, y: 0}],
[{x: 2, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 2, y: 2}]]
inputs_4.forEach(function (input) {
behaviorSet4(input);
});

function behaviorSet5(input) {
bp.registerBThread(""O_Player_Thread_5_1"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[1].x, input[1].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},3);
});

bp.registerBThread(""O_Player_Thread_5_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},9);
});

bp.registerBThread(""O_Player_Thread_5_3"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({waitFor:[X(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y), O(input[1].x, input[1].y)]},11);
});

}
var inputs_5 = [[{x: 1, y: 0}, {x: 1, y: 1}, {x: 1, y: 2}],
[{x: 2, y: 2}, {x: 0, y: 2}, {x: 2, y: 1}]]
inputs_5.forEach(function (input) {
behaviorSet5(input);
});

function behaviorSet6(input) {
bp.registerBThread(""O_Player_Thread_6_1"", function(){
bp.sync({waitFor:[O(input[1].x, input[1].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_6_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[1].x, input[1].y), O(input[1].x, input[1].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},10);
});

bp.registerBThread(""O_Player_Thread_6_3"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_6_4"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[1].x, input[1].y)]},3);
});

}
var inputs_6 = [[{x: 0, y: 2}, {x: 1, y: 0}],
[{x: 0, y: 0}, {x: 1, y: 2}]]
inputs_6.forEach(function (input) {
behaviorSet6(input);
});

function behaviorSet7(input) {
bp.registerBThread(""O_Player_Thread_7_1"", function(){
bp.sync({request:[O(input[4].x, input[4].y), O(input[3].x, input[3].y), O(input[1].x, input[1].y), O(input[4].x, input[4].y)]},2);
});

}
var inputs_7 = [[{x: 0, y: 1}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 1, y: 2}, {x: 1, y: 2}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 1, y: 2}],
[{x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 0, y: 2}],
[{x: 0, y: 1}, {x: 0, y: 2}, {x: 1, y: 1}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 2, y: 0}],
[{x: 1, y: 2}, {x: 0, y: 2}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 0, y: 0}, {x: 1, y: 2}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 2}, {x: 2, y: 1}]]
inputs_7.forEach(function (input) {
behaviorSet7(input);
});

function behaviorSet8(input) {
bp.registerBThread(""O_Player_Thread_8_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[0].x, input[0].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_8_2"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[1].x, input[1].y)]},4);
});

bp.registerBThread(""O_Player_Thread_8_3"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[1].x, input[1].y), O(input[0].x, input[0].y), X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[1].x, input[1].y)]},3);
});

}
var inputs_8 = [[{x: 1, y: 2}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 2, y: 2}],
[{x: 2, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}],
[{x: 0, y: 0}, {x: 2, y: 2}]]
inputs_8.forEach(function (input) {
behaviorSet8(input);
});

function behaviorSet9(input) {
bp.registerBThread(""O_Player_Thread_9_1"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y)]});
bp.sync({waitFor:[X(input[3].x, input[3].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},2);
});

bp.registerBThread(""O_Player_Thread_9_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y), O(input[2].x, input[2].y)]},8);
});

}
var inputs_9 = [[{x: 2, y: 0}, {x: 1, y: 2}, {x: 1, y: 2}, {x: 0, y: 1}],
[{x: 2, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}],
[{x: 0, y: 0}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 2, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}, {x: 1, y: 2}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}],
[{x: 1, y: 2}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 1, y: 0}]]
inputs_9.forEach(function (input) {
behaviorSet9(input);
});

function behaviorSet10(input) {
bp.registerBThread(""O_Player_Thread_10_1"", function(){
bp.sync({waitFor:[X(input[5].x, input[5].y)]});
bp.sync({waitFor:[O(input[3].x, input[3].y), O(input[6].x, input[6].y), X(input[2].x, input[2].y), X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[5].x, input[5].y), O(input[7].x, input[7].y)]},6);
});

bp.registerBThread(""O_Player_Thread_10_2"", function(){
bp.sync({request:[O(input[6].x, input[6].y)]},2);
});

bp.registerBThread(""O_Player_Thread_10_3"", function(){
bp.sync({waitFor:[X(input[7].x, input[7].y), O(input[3].x, input[3].y), O(input[6].x, input[6].y), O(input[5].x, input[5].y)]});
bp.sync({waitFor:[O(input[7].x, input[7].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[4].x, input[4].y), O(input[3].x, input[3].y), O(input[6].x, input[6].y), O(input[4].x, input[4].y)]},5);
});

bp.registerBThread(""O_Player_Thread_10_4"", function(){
bp.sync({waitFor:[X(input[4].x, input[4].y)]});
bp.sync({waitFor:[X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[4].x, input[4].y), O(input[7].x, input[7].y), O(input[3].x, input[3].y), O(input[2].x, input[2].y)]},9);
});

bp.registerBThread(""O_Player_Thread_10_5"", function(){
bp.sync({waitFor:[X(input[5].x, input[5].y), O(input[2].x, input[2].y), O(input[6].x, input[6].y)]});
bp.sync({request:[O(input[5].x, input[5].y), O(input[0].x, input[0].y), O(input[7].x, input[7].y)]},1);
});

}
var inputs_10 = [[{x: 1, y: 1}, {x: 0, y: 2}, {x: 1, y: 2}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 2}, {x: 0, y: 1}],
[{x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 1}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 0, y: 1}, {x: 2, y: 2}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 1}],
[{x: 1, y: 0}, {x: 1, y: 0}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}],
[{x: 0, y: 0}, {x: 1, y: 0}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 2, y: 2}, {x: 0, y: 0}],
[{x: 2, y: 1}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 1, y: 2}, {x: 2, y: 1}, {x: 0, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 2, y: 2}, {x: 2, y: 2}],
[{x: 0, y: 1}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 2, y: 0}, {x: 2, y: 2}]]
inputs_10.forEach(function (input) {
behaviorSet10(input);
});

"
74,11.0,4.0,40.18181818181819,11.0,8.0,31.0,63.0,14.0,36.0,0.0,20.0,"function behaviorSet1(input) {
bp.registerBThread(""O_Player_Thread_1_1"", function(){
bp.sync({waitFor:[O(input[5].x, input[5].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[5].x, input[5].y)]},2);
});

}
var inputs_1 = [[{x: 0, y: 1}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 0, y: 2}, {x: 1, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 0}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 1, y: 0}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 2, y: 1}],
[{x: 0, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 1}],
[{x: 1, y: 1}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 1}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 1, y: 0}, {x: 0, y: 2}]]
inputs_1.forEach(function (input) {
behaviorSet1(input);
});

function behaviorSet2(input) {
bp.registerBThread(""O_Player_Thread_2_1"", function(){
bp.sync({request:[O(input[6].x, input[6].y), O(input[3].x, input[3].y), O(input[2].x, input[2].y), O(input[2].x, input[2].y)]},4);
});

bp.registerBThread(""O_Player_Thread_2_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[5].x, input[5].y), X(input[7].x, input[7].y)]});
bp.sync({request:[O(input[7].x, input[7].y)]},2);
});

bp.registerBThread(""O_Player_Thread_2_3"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[0].x, input[0].y)]},8);
});

}
var inputs_2 = [[{x: 1, y: 0}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 2, y: 2}, {x: 1, y: 2}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 2, y: 2}, {x: 1, y: 1}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 1, y: 0}],
[{x: 2, y: 2}, {x: 1, y: 2}, {x: 0, y: 2}, {x: 1, y: 2}, {x: 1, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 0, y: 2}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 0, y: 2}],
[{x: 1, y: 0}, {x: 0, y: 0}, {x: 0, y: 1}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 0, y: 2}]]
inputs_2.forEach(function (input) {
behaviorSet2(input);
});

function behaviorSet3(input) {
bp.registerBThread(""O_Player_Thread_3_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y)]},9);
});

bp.registerBThread(""O_Player_Thread_3_2"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), O(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y)]},4);
});

bp.registerBThread(""O_Player_Thread_3_3"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y), X(input[2].x, input[2].y), O(input[1].x, input[1].y), X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y)]},10);
});

bp.registerBThread(""O_Player_Thread_3_4"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[1].x, input[1].y)]});
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},11);
});

bp.registerBThread(""O_Player_Thread_3_5"", function(){
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},10);
});

}
var inputs_3 = [[{x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}],
[{x: 1, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}],
[{x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 0}]]
inputs_3.forEach(function (input) {
behaviorSet3(input);
});

function behaviorSet4(input) {
bp.registerBThread(""O_Player_Thread_4_1"", function(){
bp.sync({waitFor:[O(input[4].x, input[4].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_4_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[3].x, input[3].y)]},8);
});

}
var inputs_4 = [[{x: 2, y: 0}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 2, y: 1}, {x: 1, y: 0}],
[{x: 2, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 0, y: 0}],
[{x: 0, y: 2}, {x: 1, y: 2}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 0, y: 0}],
[{x: 1, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 2, y: 0}, {x: 0, y: 0}],
[{x: 2, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 2, y: 2}]]
inputs_4.forEach(function (input) {
behaviorSet4(input);
});

function behaviorSet5(input) {
bp.registerBThread(""O_Player_Thread_5_1"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[1].x, input[1].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},3);
});

bp.registerBThread(""O_Player_Thread_5_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},9);
});

bp.registerBThread(""O_Player_Thread_5_3"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({waitFor:[X(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y), O(input[1].x, input[1].y)]},11);
});

}
var inputs_5 = [[{x: 1, y: 0}, {x: 1, y: 1}, {x: 1, y: 2}],
[{x: 2, y: 2}, {x: 0, y: 2}, {x: 2, y: 1}]]
inputs_5.forEach(function (input) {
behaviorSet5(input);
});

function behaviorSet6(input) {
bp.registerBThread(""O_Player_Thread_6_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[0].x, input[0].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_6_2"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[1].x, input[1].y)]},4);
});

bp.registerBThread(""O_Player_Thread_6_3"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[1].x, input[1].y), O(input[0].x, input[0].y), X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[1].x, input[1].y)]},3);
});

}
var inputs_6 = [[{x: 0, y: 2}, {x: 1, y: 0}],
[{x: 0, y: 0}, {x: 1, y: 2}]]
inputs_6.forEach(function (input) {
behaviorSet6(input);
});

function behaviorSet7(input) {
bp.registerBThread(""O_Player_Thread_7_1"", function(){
bp.sync({request:[O(input[4].x, input[4].y), O(input[3].x, input[3].y), O(input[1].x, input[1].y), O(input[4].x, input[4].y)]},2);
});

}
var inputs_7 = [[{x: 0, y: 1}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 1, y: 2}, {x: 1, y: 2}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 1, y: 2}],
[{x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 0, y: 2}],
[{x: 0, y: 1}, {x: 0, y: 2}, {x: 1, y: 1}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 2, y: 0}],
[{x: 1, y: 2}, {x: 0, y: 2}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 0, y: 0}, {x: 1, y: 2}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 2}, {x: 2, y: 1}]]
inputs_7.forEach(function (input) {
behaviorSet7(input);
});

function behaviorSet8(input) {
bp.registerBThread(""O_Player_Thread_8_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[0].x, input[0].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_8_2"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[1].x, input[1].y)]},4);
});

bp.registerBThread(""O_Player_Thread_8_3"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[1].x, input[1].y), O(input[0].x, input[0].y), X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[1].x, input[1].y)]},3);
});

}
var inputs_8 = [[{x: 1, y: 2}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 2, y: 2}],
[{x: 2, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}],
[{x: 0, y: 0}, {x: 2, y: 2}]]
inputs_8.forEach(function (input) {
behaviorSet8(input);
});

function behaviorSet9(input) {
bp.registerBThread(""O_Player_Thread_9_1"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y)]});
bp.sync({waitFor:[X(input[3].x, input[3].y), X(input[2].x, input[2].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},2);
});

bp.registerBThread(""O_Player_Thread_9_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y), O(input[2].x, input[2].y)]},8);
});

}
var inputs_9 = [[{x: 2, y: 0}, {x: 1, y: 2}, {x: 1, y: 2}, {x: 0, y: 1}],
[{x: 2, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}],
[{x: 0, y: 0}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 2, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}, {x: 1, y: 2}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}],
[{x: 1, y: 2}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 1, y: 0}]]
inputs_9.forEach(function (input) {
behaviorSet9(input);
});

function behaviorSet10(input) {
bp.registerBThread(""O_Player_Thread_10_1"", function(){
bp.sync({waitFor:[X(input[5].x, input[5].y)]});
bp.sync({waitFor:[O(input[3].x, input[3].y), O(input[6].x, input[6].y), X(input[2].x, input[2].y), X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[5].x, input[5].y), O(input[7].x, input[7].y)]},6);
});

bp.registerBThread(""O_Player_Thread_10_2"", function(){
bp.sync({request:[O(input[6].x, input[6].y)]},2);
});

bp.registerBThread(""O_Player_Thread_10_3"", function(){
bp.sync({waitFor:[X(input[7].x, input[7].y), O(input[3].x, input[3].y), O(input[6].x, input[6].y), O(input[5].x, input[5].y)]});
bp.sync({waitFor:[O(input[7].x, input[7].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[4].x, input[4].y), O(input[3].x, input[3].y), O(input[6].x, input[6].y), O(input[4].x, input[4].y)]},5);
});

bp.registerBThread(""O_Player_Thread_10_4"", function(){
bp.sync({waitFor:[X(input[4].x, input[4].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[4].x, input[4].y), O(input[7].x, input[7].y), O(input[3].x, input[3].y), O(input[2].x, input[2].y)]},9);
});

bp.registerBThread(""O_Player_Thread_10_5"", function(){
bp.sync({waitFor:[X(input[5].x, input[5].y), O(input[2].x, input[2].y), O(input[6].x, input[6].y)]});
bp.sync({request:[O(input[5].x, input[5].y), O(input[0].x, input[0].y), O(input[7].x, input[7].y)]},1);
});

}
var inputs_10 = [[{x: 1, y: 1}, {x: 0, y: 2}, {x: 1, y: 2}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 2}, {x: 0, y: 1}],
[{x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 1}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 0, y: 1}, {x: 2, y: 2}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 1}],
[{x: 1, y: 0}, {x: 1, y: 0}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}],
[{x: 0, y: 0}, {x: 1, y: 0}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 2, y: 2}, {x: 0, y: 0}],
[{x: 2, y: 1}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 1, y: 2}, {x: 2, y: 1}, {x: 0, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 2, y: 2}, {x: 2, y: 2}],
[{x: 0, y: 1}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 2, y: 0}, {x: 2, y: 2}]]
inputs_10.forEach(function (input) {
behaviorSet10(input);
});

"
75,11.0,1.0,45.168067226890756,19.0,5.0,26.0,71.0,19.0,48.0,0.0,10.0,"function behaviorSet1(input) {
bp.registerBThread(""O_Player_Thread_1_1"", function(){
bp.sync({waitFor:[O(input[5].x, input[5].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[5].x, input[5].y)]},2);
});

}
var inputs_1 = [[{x: 0, y: 1}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 0, y: 2}, {x: 1, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 0}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 1, y: 0}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 2, y: 1}],
[{x: 0, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 1}],
[{x: 1, y: 1}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 1}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 1, y: 0}, {x: 0, y: 2}]]
inputs_1.forEach(function (input) {
behaviorSet1(input);
});

function behaviorSet2(input) {
bp.registerBThread(""O_Player_Thread_2_1"", function(){
bp.sync({request:[O(input[6].x, input[6].y), O(input[3].x, input[3].y), O(input[2].x, input[2].y), O(input[2].x, input[2].y)]},4);
});

bp.registerBThread(""O_Player_Thread_2_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[5].x, input[5].y), X(input[7].x, input[7].y)]});
bp.sync({request:[O(input[7].x, input[7].y)]},2);
});

bp.registerBThread(""O_Player_Thread_2_3"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[0].x, input[0].y)]},8);
});

}
var inputs_2 = [[{x: 1, y: 0}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 2, y: 2}, {x: 1, y: 2}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 2, y: 2}, {x: 1, y: 1}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 1, y: 0}],
[{x: 2, y: 2}, {x: 1, y: 2}, {x: 0, y: 2}, {x: 1, y: 2}, {x: 1, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 0, y: 2}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 0, y: 2}],
[{x: 1, y: 0}, {x: 0, y: 0}, {x: 0, y: 1}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 0, y: 2}]]
inputs_2.forEach(function (input) {
behaviorSet2(input);
});

function behaviorSet3(input) {
bp.registerBThread(""O_Player_Thread_3_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y)]},9);
});

bp.registerBThread(""O_Player_Thread_3_2"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), O(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y)]},4);
});

bp.registerBThread(""O_Player_Thread_3_3"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y), X(input[2].x, input[2].y), O(input[1].x, input[1].y), X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y)]},10);
});

bp.registerBThread(""O_Player_Thread_3_4"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[1].x, input[1].y)]});
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},11);
});

bp.registerBThread(""O_Player_Thread_3_5"", function(){
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},10);
});

}
var inputs_3 = [[{x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}],
[{x: 1, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}],
[{x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 0}]]
inputs_3.forEach(function (input) {
behaviorSet3(input);
});

function behaviorSet4(input) {
bp.registerBThread(""O_Player_Thread_4_1"", function(){
bp.sync({waitFor:[O(input[4].x, input[4].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_4_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[3].x, input[3].y)]},8);
});

}
var inputs_4 = [[{x: 2, y: 0}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 2, y: 1}, {x: 1, y: 0}],
[{x: 2, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 0, y: 0}],
[{x: 0, y: 2}, {x: 1, y: 2}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 0, y: 0}],
[{x: 1, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 2, y: 0}, {x: 0, y: 0}],
[{x: 2, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 2, y: 2}]]
inputs_4.forEach(function (input) {
behaviorSet4(input);
});

function behaviorSet5(input) {
bp.registerBThread(""O_Player_Thread_5_1"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[1].x, input[1].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},3);
});

bp.registerBThread(""O_Player_Thread_5_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},9);
});

bp.registerBThread(""O_Player_Thread_5_3"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({waitFor:[X(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y), O(input[1].x, input[1].y)]},11);
});

}
var inputs_5 = [[{x: 1, y: 0}, {x: 1, y: 1}, {x: 1, y: 2}],
[{x: 2, y: 2}, {x: 0, y: 2}, {x: 2, y: 1}]]
inputs_5.forEach(function (input) {
behaviorSet5(input);
});

function behaviorSet6(input) {
bp.registerBThread(""O_Player_Thread_6_1"", function(){
bp.sync({waitFor:[O(input[1].x, input[1].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_6_2"", function(){
bp.sync({waitFor:[O(input[1].x, input[1].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_6_3"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_6_4"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[1].x, input[1].y)]},3);
});

}
var inputs_6 = [[{x: 0, y: 2}, {x: 1, y: 0}],
[{x: 0, y: 0}, {x: 1, y: 2}]]
inputs_6.forEach(function (input) {
behaviorSet6(input);
});

function behaviorSet7(input) {
bp.registerBThread(""O_Player_Thread_7_1"", function(){
bp.sync({request:[O(input[4].x, input[4].y), O(input[3].x, input[3].y), O(input[1].x, input[1].y), O(input[4].x, input[4].y)]},2);
});

}
var inputs_7 = [[{x: 0, y: 1}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 1, y: 2}, {x: 1, y: 2}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 1, y: 2}],
[{x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 0, y: 2}],
[{x: 0, y: 1}, {x: 0, y: 2}, {x: 1, y: 1}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 2, y: 0}],
[{x: 1, y: 2}, {x: 0, y: 2}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 0, y: 0}, {x: 1, y: 2}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 2}, {x: 2, y: 1}]]
inputs_7.forEach(function (input) {
behaviorSet7(input);
});

function behaviorSet8(input) {
bp.registerBThread(""O_Player_Thread_8_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[0].x, input[0].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_8_2"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[1].x, input[1].y)]},4);
});

bp.registerBThread(""O_Player_Thread_8_3"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[1].x, input[1].y), O(input[0].x, input[0].y), X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[1].x, input[1].y)]},3);
});

}
var inputs_8 = [[{x: 1, y: 2}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 2, y: 2}],
[{x: 2, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}],
[{x: 0, y: 0}, {x: 2, y: 2}]]
inputs_8.forEach(function (input) {
behaviorSet8(input);
});

function behaviorSet9(input) {
bp.registerBThread(""O_Player_Thread_9_1"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y)]});
bp.sync({waitFor:[X(input[3].x, input[3].y), X(input[2].x, input[2].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},2);
});

bp.registerBThread(""O_Player_Thread_9_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y), O(input[2].x, input[2].y)]},8);
});

}
var inputs_9 = [[{x: 2, y: 0}, {x: 1, y: 2}, {x: 1, y: 2}, {x: 0, y: 1}],
[{x: 2, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}],
[{x: 0, y: 0}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 2, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}, {x: 1, y: 2}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}],
[{x: 1, y: 2}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 1, y: 0}]]
inputs_9.forEach(function (input) {
behaviorSet9(input);
});

function behaviorSet10(input) {
bp.registerBThread(""O_Player_Thread_10_1"", function(){
bp.sync({waitFor:[X(input[5].x, input[5].y)]});
bp.sync({waitFor:[O(input[3].x, input[3].y), O(input[6].x, input[6].y), X(input[2].x, input[2].y), X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[5].x, input[5].y), O(input[7].x, input[7].y)]},6);
});

bp.registerBThread(""O_Player_Thread_10_2"", function(){
bp.sync({request:[O(input[6].x, input[6].y)]},2);
});

bp.registerBThread(""O_Player_Thread_10_3"", function(){
bp.sync({waitFor:[X(input[7].x, input[7].y), O(input[3].x, input[3].y), O(input[6].x, input[6].y), O(input[5].x, input[5].y)]});
bp.sync({waitFor:[O(input[7].x, input[7].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[4].x, input[4].y), O(input[3].x, input[3].y), O(input[6].x, input[6].y), O(input[4].x, input[4].y)]},5);
});

bp.registerBThread(""O_Player_Thread_10_4"", function(){
bp.sync({waitFor:[X(input[4].x, input[4].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[4].x, input[4].y), O(input[7].x, input[7].y), O(input[3].x, input[3].y), O(input[2].x, input[2].y)]},9);
});

bp.registerBThread(""O_Player_Thread_10_5"", function(){
bp.sync({waitFor:[X(input[5].x, input[5].y), O(input[2].x, input[2].y), O(input[6].x, input[6].y)]});
bp.sync({request:[O(input[5].x, input[5].y), O(input[0].x, input[0].y), O(input[7].x, input[7].y)]},1);
});

}
var inputs_10 = [[{x: 1, y: 1}, {x: 0, y: 2}, {x: 1, y: 2}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 2}, {x: 0, y: 1}],
[{x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 1}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 0, y: 1}, {x: 2, y: 2}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 1}],
[{x: 1, y: 0}, {x: 1, y: 0}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}],
[{x: 0, y: 0}, {x: 1, y: 0}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 2, y: 2}, {x: 0, y: 0}],
[{x: 2, y: 1}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 1, y: 2}, {x: 2, y: 1}, {x: 0, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 2, y: 2}, {x: 2, y: 2}],
[{x: 0, y: 1}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 2, y: 0}, {x: 2, y: 2}]]
inputs_10.forEach(function (input) {
behaviorSet10(input);
});

"
76,11.0,2.0,40.323624595469255,14.0,6.0,30.0,68.0,16.0,35.0,0.0,17.0,"function behaviorSet1(input) {
bp.registerBThread(""O_Player_Thread_1_1"", function(){
bp.sync({request:[O(input[4].x, input[4].y), O(input[3].x, input[3].y), O(input[1].x, input[1].y), O(input[4].x, input[4].y)]},2);
});

}
var inputs_1 = [[{x: 0, y: 1}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 0, y: 2}, {x: 1, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 0}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 1, y: 0}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 2, y: 1}],
[{x: 0, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 1}],
[{x: 1, y: 1}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 1}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 1, y: 0}, {x: 0, y: 2}]]
inputs_1.forEach(function (input) {
behaviorSet1(input);
});

function behaviorSet2(input) {
bp.registerBThread(""O_Player_Thread_2_1"", function(){
bp.sync({request:[O(input[6].x, input[6].y), O(input[3].x, input[3].y), O(input[2].x, input[2].y), O(input[2].x, input[2].y)]},4);
});

bp.registerBThread(""O_Player_Thread_2_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[5].x, input[5].y), X(input[7].x, input[7].y)]});
bp.sync({request:[O(input[7].x, input[7].y)]},2);
});

bp.registerBThread(""O_Player_Thread_2_3"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[2].x, input[2].y)]},8);
});

}
var inputs_2 = [[{x: 1, y: 0}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 2, y: 2}, {x: 1, y: 2}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 2, y: 2}, {x: 1, y: 1}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 1, y: 0}],
[{x: 2, y: 2}, {x: 1, y: 2}, {x: 0, y: 2}, {x: 1, y: 2}, {x: 1, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 0, y: 2}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 0, y: 2}],
[{x: 1, y: 0}, {x: 0, y: 0}, {x: 0, y: 1}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 0, y: 2}]]
inputs_2.forEach(function (input) {
behaviorSet2(input);
});

function behaviorSet3(input) {
bp.registerBThread(""O_Player_Thread_3_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y)]},9);
});

bp.registerBThread(""O_Player_Thread_3_2"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), O(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y)]},4);
});

bp.registerBThread(""O_Player_Thread_3_3"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y), X(input[2].x, input[2].y), O(input[1].x, input[1].y), X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y)]},10);
});

bp.registerBThread(""O_Player_Thread_3_4"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[1].x, input[1].y)]});
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},11);
});

bp.registerBThread(""O_Player_Thread_3_5"", function(){
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},10);
});

}
var inputs_3 = [[{x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}],
[{x: 1, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}],
[{x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 0}]]
inputs_3.forEach(function (input) {
behaviorSet3(input);
});

function behaviorSet4(input) {
bp.registerBThread(""O_Player_Thread_4_1"", function(){
bp.sync({waitFor:[O(input[4].x, input[4].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_4_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[3].x, input[3].y)]},8);
});

}
var inputs_4 = [[{x: 2, y: 0}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 2, y: 1}, {x: 1, y: 0}],
[{x: 2, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 0, y: 0}],
[{x: 0, y: 2}, {x: 1, y: 2}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 0, y: 0}],
[{x: 1, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 2, y: 0}, {x: 0, y: 0}],
[{x: 2, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 2, y: 2}]]
inputs_4.forEach(function (input) {
behaviorSet4(input);
});

function behaviorSet5(input) {
bp.registerBThread(""O_Player_Thread_5_1"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[1].x, input[1].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},3);
});

bp.registerBThread(""O_Player_Thread_5_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},9);
});

bp.registerBThread(""O_Player_Thread_5_3"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({waitFor:[X(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y), O(input[1].x, input[1].y)]},11);
});

}
var inputs_5 = [[{x: 1, y: 0}, {x: 1, y: 1}, {x: 1, y: 2}],
[{x: 2, y: 2}, {x: 0, y: 2}, {x: 2, y: 1}]]
inputs_5.forEach(function (input) {
behaviorSet5(input);
});

function behaviorSet6(input) {
bp.registerBThread(""O_Player_Thread_6_1"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[1].x, input[1].y), O(input[1].x, input[1].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_6_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[1].x, input[1].y), O(input[1].x, input[1].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},10);
});

bp.registerBThread(""O_Player_Thread_6_3"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_6_4"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[1].x, input[1].y)]},3);
});

}
var inputs_6 = [[{x: 0, y: 2}, {x: 1, y: 0}],
[{x: 0, y: 0}, {x: 1, y: 2}]]
inputs_6.forEach(function (input) {
behaviorSet6(input);
});

function behaviorSet7(input) {
bp.registerBThread(""O_Player_Thread_7_1"", function(){
bp.sync({request:[O(input[4].x, input[4].y), O(input[3].x, input[3].y), O(input[1].x, input[1].y), O(input[4].x, input[4].y)]},2);
});

}
var inputs_7 = [[{x: 0, y: 1}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 1, y: 2}, {x: 1, y: 2}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 1, y: 2}],
[{x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 0, y: 2}],
[{x: 0, y: 1}, {x: 0, y: 2}, {x: 1, y: 1}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 2, y: 0}],
[{x: 1, y: 2}, {x: 0, y: 2}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 0, y: 0}, {x: 1, y: 2}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 2}, {x: 2, y: 1}]]
inputs_7.forEach(function (input) {
behaviorSet7(input);
});

function behaviorSet8(input) {
bp.registerBThread(""O_Player_Thread_8_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[0].x, input[0].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_8_2"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[1].x, input[1].y)]},4);
});

bp.registerBThread(""O_Player_Thread_8_3"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[1].x, input[1].y), O(input[0].x, input[0].y), X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[1].x, input[1].y)]},3);
});

}
var inputs_8 = [[{x: 1, y: 2}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 2, y: 2}],
[{x: 2, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}],
[{x: 0, y: 0}, {x: 2, y: 2}]]
inputs_8.forEach(function (input) {
behaviorSet8(input);
});

function behaviorSet9(input) {
bp.registerBThread(""O_Player_Thread_9_1"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y)]});
bp.sync({waitFor:[X(input[3].x, input[3].y), X(input[2].x, input[2].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[0].x, input[0].y)]},2);
});

bp.registerBThread(""O_Player_Thread_9_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y), O(input[2].x, input[2].y)]},8);
});

}
var inputs_9 = [[{x: 2, y: 0}, {x: 1, y: 2}, {x: 1, y: 2}, {x: 0, y: 1}],
[{x: 2, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}],
[{x: 0, y: 0}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 2, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}, {x: 1, y: 2}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}],
[{x: 1, y: 2}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 1, y: 0}]]
inputs_9.forEach(function (input) {
behaviorSet9(input);
});

function behaviorSet10(input) {
bp.registerBThread(""O_Player_Thread_10_1"", function(){
bp.sync({waitFor:[X(input[5].x, input[5].y)]});
bp.sync({waitFor:[O(input[3].x, input[3].y), O(input[6].x, input[6].y), X(input[2].x, input[2].y), X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[5].x, input[5].y), O(input[7].x, input[7].y)]},6);
});

bp.registerBThread(""O_Player_Thread_10_2"", function(){
bp.sync({request:[O(input[6].x, input[6].y)]},2);
});

bp.registerBThread(""O_Player_Thread_10_3"", function(){
bp.sync({waitFor:[X(input[7].x, input[7].y), O(input[3].x, input[3].y), O(input[6].x, input[6].y), O(input[5].x, input[5].y)]});
bp.sync({waitFor:[O(input[7].x, input[7].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[4].x, input[4].y), O(input[3].x, input[3].y), O(input[6].x, input[6].y), O(input[4].x, input[4].y)]},5);
});

bp.registerBThread(""O_Player_Thread_10_4"", function(){
bp.sync({waitFor:[X(input[4].x, input[4].y)]});
bp.sync({waitFor:[X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[4].x, input[4].y), O(input[7].x, input[7].y), O(input[3].x, input[3].y), O(input[2].x, input[2].y)]},9);
});

bp.registerBThread(""O_Player_Thread_10_5"", function(){
bp.sync({waitFor:[X(input[5].x, input[5].y), O(input[2].x, input[2].y), O(input[6].x, input[6].y)]});
bp.sync({request:[O(input[5].x, input[5].y), O(input[0].x, input[0].y), O(input[7].x, input[7].y)]},1);
});

}
var inputs_10 = [[{x: 1, y: 1}, {x: 0, y: 2}, {x: 1, y: 2}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 2}, {x: 0, y: 1}],
[{x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 1}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 0, y: 1}, {x: 2, y: 2}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 1}],
[{x: 1, y: 0}, {x: 1, y: 0}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}],
[{x: 0, y: 0}, {x: 1, y: 0}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 2, y: 2}, {x: 0, y: 0}],
[{x: 2, y: 1}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 1, y: 2}, {x: 2, y: 1}, {x: 0, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 2, y: 2}, {x: 2, y: 2}],
[{x: 0, y: 1}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 2, y: 0}, {x: 2, y: 2}]]
inputs_10.forEach(function (input) {
behaviorSet10(input);
});

"
77,11.0,5.0,45.36206896551724,15.0,8.0,27.0,61.0,14.0,39.0,0.0,11.0,"function behaviorSet1(input) {
bp.registerBThread(""O_Player_Thread_1_1"", function(){
bp.sync({waitFor:[O(input[5].x, input[5].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[5].x, input[5].y)]},2);
});

}
var inputs_1 = [[{x: 0, y: 1}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 0, y: 2}, {x: 1, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 0}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 1, y: 0}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 2, y: 1}],
[{x: 0, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 1}],
[{x: 1, y: 1}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 1}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 1, y: 0}, {x: 0, y: 2}]]
inputs_1.forEach(function (input) {
behaviorSet1(input);
});

function behaviorSet2(input) {
bp.registerBThread(""O_Player_Thread_2_1"", function(){
bp.sync({request:[O(input[6].x, input[6].y), O(input[3].x, input[3].y), O(input[2].x, input[2].y), O(input[2].x, input[2].y)]},4);
});

bp.registerBThread(""O_Player_Thread_2_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[5].x, input[5].y), X(input[7].x, input[7].y)]});
bp.sync({request:[O(input[7].x, input[7].y)]},2);
});

bp.registerBThread(""O_Player_Thread_2_3"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[0].x, input[0].y)]},8);
});

}
var inputs_2 = [[{x: 1, y: 0}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 2, y: 2}, {x: 1, y: 2}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 2, y: 2}, {x: 1, y: 1}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 1, y: 0}],
[{x: 2, y: 2}, {x: 1, y: 2}, {x: 0, y: 2}, {x: 1, y: 2}, {x: 1, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 0, y: 2}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 0, y: 2}],
[{x: 1, y: 0}, {x: 0, y: 0}, {x: 0, y: 1}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 0, y: 2}]]
inputs_2.forEach(function (input) {
behaviorSet2(input);
});

function behaviorSet3(input) {
bp.registerBThread(""O_Player_Thread_3_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y)]},9);
});

bp.registerBThread(""O_Player_Thread_3_2"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), O(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y)]},4);
});

bp.registerBThread(""O_Player_Thread_3_3"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y), X(input[2].x, input[2].y), O(input[1].x, input[1].y), X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y)]},10);
});

bp.registerBThread(""O_Player_Thread_3_4"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[1].x, input[1].y)]});
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},11);
});

bp.registerBThread(""O_Player_Thread_3_5"", function(){
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},10);
});

}
var inputs_3 = [[{x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}],
[{x: 1, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}],
[{x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 0}]]
inputs_3.forEach(function (input) {
behaviorSet3(input);
});

function behaviorSet4(input) {
bp.registerBThread(""O_Player_Thread_4_1"", function(){
bp.sync({waitFor:[O(input[4].x, input[4].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_4_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[3].x, input[3].y)]},8);
});

}
var inputs_4 = [[{x: 2, y: 0}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 2, y: 1}, {x: 1, y: 0}],
[{x: 2, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 0, y: 0}],
[{x: 0, y: 2}, {x: 1, y: 2}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 0, y: 0}],
[{x: 1, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 2, y: 0}, {x: 0, y: 0}],
[{x: 2, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 2, y: 2}]]
inputs_4.forEach(function (input) {
behaviorSet4(input);
});

function behaviorSet5(input) {
bp.registerBThread(""O_Player_Thread_5_1"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[1].x, input[1].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},3);
});

bp.registerBThread(""O_Player_Thread_5_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},9);
});

bp.registerBThread(""O_Player_Thread_5_3"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({waitFor:[X(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y), O(input[1].x, input[1].y)]},11);
});

}
var inputs_5 = [[{x: 1, y: 0}, {x: 1, y: 1}, {x: 1, y: 2}],
[{x: 2, y: 2}, {x: 0, y: 2}, {x: 2, y: 1}]]
inputs_5.forEach(function (input) {
behaviorSet5(input);
});

function behaviorSet6(input) {
bp.registerBThread(""O_Player_Thread_6_1"", function(){
bp.sync({waitFor:[O(input[1].x, input[1].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_6_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[1].x, input[1].y), O(input[1].x, input[1].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_6_3"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_6_4"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[1].x, input[1].y)]},3);
});

}
var inputs_6 = [[{x: 0, y: 2}, {x: 1, y: 0}],
[{x: 0, y: 0}, {x: 1, y: 2}]]
inputs_6.forEach(function (input) {
behaviorSet6(input);
});

function behaviorSet7(input) {
bp.registerBThread(""O_Player_Thread_7_1"", function(){
bp.sync({request:[O(input[4].x, input[4].y), O(input[3].x, input[3].y), O(input[1].x, input[1].y), O(input[4].x, input[4].y)]},2);
});

}
var inputs_7 = [[{x: 0, y: 1}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 1, y: 2}, {x: 1, y: 2}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 1, y: 2}],
[{x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 0, y: 2}],
[{x: 0, y: 1}, {x: 0, y: 2}, {x: 1, y: 1}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 2, y: 0}],
[{x: 1, y: 2}, {x: 0, y: 2}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 0, y: 0}, {x: 1, y: 2}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 2}, {x: 2, y: 1}]]
inputs_7.forEach(function (input) {
behaviorSet7(input);
});

function behaviorSet8(input) {
bp.registerBThread(""O_Player_Thread_8_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[0].x, input[0].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_8_2"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[1].x, input[1].y)]},4);
});

bp.registerBThread(""O_Player_Thread_8_3"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[1].x, input[1].y), O(input[0].x, input[0].y), X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[1].x, input[1].y)]},3);
});

}
var inputs_8 = [[{x: 1, y: 2}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 2, y: 2}],
[{x: 2, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}],
[{x: 0, y: 0}, {x: 2, y: 2}]]
inputs_8.forEach(function (input) {
behaviorSet8(input);
});

function behaviorSet9(input) {
bp.registerBThread(""O_Player_Thread_9_1"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y)]});
bp.sync({waitFor:[X(input[3].x, input[3].y), X(input[2].x, input[2].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},2);
});

bp.registerBThread(""O_Player_Thread_9_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y), O(input[2].x, input[2].y)]},8);
});

}
var inputs_9 = [[{x: 2, y: 0}, {x: 1, y: 2}, {x: 1, y: 2}, {x: 0, y: 1}],
[{x: 2, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}],
[{x: 0, y: 0}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 2, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}, {x: 1, y: 2}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}],
[{x: 1, y: 2}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 1, y: 0}]]
inputs_9.forEach(function (input) {
behaviorSet9(input);
});

function behaviorSet10(input) {
bp.registerBThread(""O_Player_Thread_10_1"", function(){
bp.sync({waitFor:[X(input[5].x, input[5].y)]});
bp.sync({waitFor:[O(input[3].x, input[3].y), O(input[6].x, input[6].y), X(input[2].x, input[2].y), X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[5].x, input[5].y), O(input[7].x, input[7].y)]},6);
});

bp.registerBThread(""O_Player_Thread_10_2"", function(){
bp.sync({request:[O(input[6].x, input[6].y)]},2);
});

bp.registerBThread(""O_Player_Thread_10_3"", function(){
bp.sync({waitFor:[X(input[7].x, input[7].y), O(input[3].x, input[3].y), O(input[6].x, input[6].y), O(input[5].x, input[5].y)]});
bp.sync({waitFor:[O(input[7].x, input[7].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[4].x, input[4].y), O(input[3].x, input[3].y), O(input[6].x, input[6].y), O(input[4].x, input[4].y)]},5);
});

bp.registerBThread(""O_Player_Thread_10_4"", function(){
bp.sync({waitFor:[X(input[4].x, input[4].y)]});
bp.sync({waitFor:[X(input[5].x, input[5].y), O(input[2].x, input[2].y), O(input[6].x, input[6].y)]});
bp.sync({request:[O(input[4].x, input[4].y), O(input[7].x, input[7].y), O(input[3].x, input[3].y), O(input[2].x, input[2].y)]},9);
});

bp.registerBThread(""O_Player_Thread_10_5"", function(){
bp.sync({waitFor:[X(input[5].x, input[5].y), O(input[2].x, input[2].y), O(input[6].x, input[6].y)]});
bp.sync({request:[O(input[5].x, input[5].y), O(input[0].x, input[0].y), O(input[7].x, input[7].y)]},1);
});

}
var inputs_10 = [[{x: 1, y: 1}, {x: 0, y: 2}, {x: 1, y: 2}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 2}, {x: 0, y: 1}],
[{x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 1}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 0, y: 1}, {x: 2, y: 2}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 1}],
[{x: 1, y: 0}, {x: 1, y: 0}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}],
[{x: 0, y: 0}, {x: 1, y: 0}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 2, y: 2}, {x: 0, y: 0}],
[{x: 2, y: 1}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 1, y: 2}, {x: 2, y: 1}, {x: 0, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 2, y: 2}, {x: 2, y: 2}],
[{x: 0, y: 1}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 2, y: 0}, {x: 2, y: 2}]]
inputs_10.forEach(function (input) {
behaviorSet10(input);
});

"
78,11.0,3.0,43.07109940750494,15.0,4.0,31.0,61.0,16.0,37.0,0.0,15.0,"function behaviorSet1(input) {
bp.registerBThread(""O_Player_Thread_1_1"", function(){
bp.sync({waitFor:[O(input[5].x, input[5].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[5].x, input[5].y)]},2);
});

}
var inputs_1 = [[{x: 0, y: 1}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 0, y: 2}, {x: 1, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 0}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 1, y: 0}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 2, y: 1}],
[{x: 0, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 1}],
[{x: 1, y: 1}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 1}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 1, y: 0}, {x: 0, y: 2}]]
inputs_1.forEach(function (input) {
behaviorSet1(input);
});

function behaviorSet2(input) {
bp.registerBThread(""O_Player_Thread_2_1"", function(){
bp.sync({request:[O(input[6].x, input[6].y), O(input[3].x, input[3].y), O(input[2].x, input[2].y), O(input[2].x, input[2].y)]},4);
});

bp.registerBThread(""O_Player_Thread_2_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[5].x, input[5].y), X(input[7].x, input[7].y)]});
bp.sync({request:[O(input[7].x, input[7].y)]},2);
});

bp.registerBThread(""O_Player_Thread_2_3"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[0].x, input[0].y)]},8);
});

}
var inputs_2 = [[{x: 1, y: 0}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 2, y: 2}, {x: 1, y: 2}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 2, y: 2}, {x: 1, y: 1}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 1, y: 0}],
[{x: 2, y: 2}, {x: 1, y: 2}, {x: 0, y: 2}, {x: 1, y: 2}, {x: 1, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 0, y: 2}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 0, y: 2}],
[{x: 1, y: 0}, {x: 0, y: 0}, {x: 0, y: 1}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 0, y: 2}]]
inputs_2.forEach(function (input) {
behaviorSet2(input);
});

function behaviorSet3(input) {
bp.registerBThread(""O_Player_Thread_3_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y)]},9);
});

bp.registerBThread(""O_Player_Thread_3_2"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), O(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y)]},4);
});

bp.registerBThread(""O_Player_Thread_3_3"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y), X(input[2].x, input[2].y), O(input[1].x, input[1].y), X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y)]},10);
});

bp.registerBThread(""O_Player_Thread_3_4"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[1].x, input[1].y)]});
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},11);
});

bp.registerBThread(""O_Player_Thread_3_5"", function(){
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},10);
});

}
var inputs_3 = [[{x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}],
[{x: 1, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}],
[{x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 0}]]
inputs_3.forEach(function (input) {
behaviorSet3(input);
});

function behaviorSet4(input) {
bp.registerBThread(""O_Player_Thread_4_1"", function(){
bp.sync({waitFor:[O(input[4].x, input[4].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_4_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[3].x, input[3].y)]},8);
});

}
var inputs_4 = [[{x: 2, y: 0}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 2, y: 1}, {x: 1, y: 0}],
[{x: 2, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 0, y: 0}],
[{x: 0, y: 2}, {x: 1, y: 2}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 0, y: 0}],
[{x: 1, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 2, y: 0}, {x: 0, y: 0}],
[{x: 2, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 2, y: 2}]]
inputs_4.forEach(function (input) {
behaviorSet4(input);
});

function behaviorSet5(input) {
bp.registerBThread(""O_Player_Thread_5_1"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[1].x, input[1].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},3);
});

bp.registerBThread(""O_Player_Thread_5_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},9);
});

bp.registerBThread(""O_Player_Thread_5_3"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({waitFor:[X(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y), O(input[1].x, input[1].y)]},11);
});

}
var inputs_5 = [[{x: 1, y: 0}, {x: 1, y: 1}, {x: 1, y: 2}],
[{x: 2, y: 2}, {x: 0, y: 2}, {x: 2, y: 1}]]
inputs_5.forEach(function (input) {
behaviorSet5(input);
});

function behaviorSet6(input) {
bp.registerBThread(""O_Player_Thread_6_1"", function(){
bp.sync({waitFor:[O(input[1].x, input[1].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_6_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[1].x, input[1].y), O(input[1].x, input[1].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},10);
});

bp.registerBThread(""O_Player_Thread_6_3"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_6_4"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[1].x, input[1].y)]},3);
});

}
var inputs_6 = [[{x: 0, y: 2}, {x: 1, y: 0}],
[{x: 0, y: 0}, {x: 1, y: 2}]]
inputs_6.forEach(function (input) {
behaviorSet6(input);
});

function behaviorSet7(input) {
bp.registerBThread(""O_Player_Thread_7_1"", function(){
bp.sync({request:[O(input[4].x, input[4].y), O(input[3].x, input[3].y), O(input[1].x, input[1].y), O(input[4].x, input[4].y)]},2);
});

}
var inputs_7 = [[{x: 0, y: 1}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 1, y: 2}, {x: 1, y: 2}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 1, y: 2}],
[{x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 0, y: 2}],
[{x: 0, y: 1}, {x: 0, y: 2}, {x: 1, y: 1}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 2, y: 0}],
[{x: 1, y: 2}, {x: 0, y: 2}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 0, y: 0}, {x: 1, y: 2}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 2}, {x: 2, y: 1}]]
inputs_7.forEach(function (input) {
behaviorSet7(input);
});

function behaviorSet8(input) {
bp.registerBThread(""O_Player_Thread_8_1"", function(){
bp.sync({waitFor:[O(input[1].x, input[1].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_8_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[1].x, input[1].y), O(input[1].x, input[1].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_8_3"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_8_4"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[1].x, input[1].y)]},3);
});

}
var inputs_8 = [[{x: 1, y: 2}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 2, y: 2}],
[{x: 2, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}],
[{x: 0, y: 0}, {x: 2, y: 2}]]
inputs_8.forEach(function (input) {
behaviorSet8(input);
});

function behaviorSet9(input) {
bp.registerBThread(""O_Player_Thread_9_1"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y)]});
bp.sync({waitFor:[X(input[3].x, input[3].y), X(input[2].x, input[2].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},2);
});

bp.registerBThread(""O_Player_Thread_9_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y), O(input[2].x, input[2].y)]},8);
});

}
var inputs_9 = [[{x: 2, y: 0}, {x: 1, y: 2}, {x: 1, y: 2}, {x: 0, y: 1}],
[{x: 2, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}],
[{x: 0, y: 0}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 2, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}, {x: 1, y: 2}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}],
[{x: 1, y: 2}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 1, y: 0}]]
inputs_9.forEach(function (input) {
behaviorSet9(input);
});

function behaviorSet10(input) {
bp.registerBThread(""O_Player_Thread_10_1"", function(){
bp.sync({waitFor:[X(input[5].x, input[5].y)]});
bp.sync({waitFor:[O(input[3].x, input[3].y), O(input[6].x, input[6].y), X(input[2].x, input[2].y), X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[5].x, input[5].y), O(input[7].x, input[7].y)]},6);
});

bp.registerBThread(""O_Player_Thread_10_2"", function(){
bp.sync({request:[O(input[6].x, input[6].y)]},2);
});

bp.registerBThread(""O_Player_Thread_10_3"", function(){
bp.sync({waitFor:[X(input[7].x, input[7].y), O(input[3].x, input[3].y), O(input[6].x, input[6].y), O(input[5].x, input[5].y)]});
bp.sync({waitFor:[O(input[7].x, input[7].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[4].x, input[4].y), O(input[3].x, input[3].y), O(input[6].x, input[6].y), O(input[4].x, input[4].y)]},5);
});

bp.registerBThread(""O_Player_Thread_10_4"", function(){
bp.sync({waitFor:[X(input[4].x, input[4].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[4].x, input[4].y), O(input[7].x, input[7].y), O(input[3].x, input[3].y), O(input[2].x, input[2].y)]},9);
});

bp.registerBThread(""O_Player_Thread_10_5"", function(){
bp.sync({waitFor:[X(input[5].x, input[5].y), O(input[2].x, input[2].y), O(input[6].x, input[6].y)]});
bp.sync({request:[O(input[5].x, input[5].y), O(input[0].x, input[0].y), O(input[7].x, input[7].y)]},1);
});

}
var inputs_10 = [[{x: 1, y: 1}, {x: 0, y: 2}, {x: 1, y: 2}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 2}, {x: 0, y: 1}],
[{x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 1}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 0, y: 1}, {x: 2, y: 2}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 2, y: 2}, {x: 2, y: 2}],
[{x: 0, y: 0}, {x: 1, y: 0}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 2, y: 2}, {x: 0, y: 0}],
[{x: 2, y: 1}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 1, y: 2}, {x: 2, y: 1}, {x: 0, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 2, y: 2}, {x: 2, y: 2}],
[{x: 0, y: 1}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 2, y: 0}, {x: 2, y: 2}]]
inputs_10.forEach(function (input) {
behaviorSet10(input);
});

"
79,11.0,6.0,37.47572815533981,14.0,6.0,30.0,67.0,21.0,36.0,0.0,15.0,"function behaviorSet1(input) {
bp.registerBThread(""O_Player_Thread_1_1"", function(){
bp.sync({waitFor:[O(input[5].x, input[5].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[5].x, input[5].y)]},2);
});

}
var inputs_1 = [[{x: 0, y: 1}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 0, y: 2}, {x: 1, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 0}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 1, y: 0}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 2, y: 1}],
[{x: 0, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 0}, {x: 1, y: 1}],
[{x: 1, y: 1}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 1}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 1, y: 0}, {x: 0, y: 2}]]
inputs_1.forEach(function (input) {
behaviorSet1(input);
});

function behaviorSet2(input) {
bp.registerBThread(""O_Player_Thread_2_1"", function(){
bp.sync({request:[O(input[6].x, input[6].y), O(input[3].x, input[3].y), O(input[2].x, input[2].y), O(input[2].x, input[2].y)]},4);
});

bp.registerBThread(""O_Player_Thread_2_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[5].x, input[5].y), X(input[7].x, input[7].y)]});
bp.sync({request:[O(input[7].x, input[7].y)]},2);
});

bp.registerBThread(""O_Player_Thread_2_3"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[3].x, input[3].y), O(input[3].x, input[3].y), O(input[0].x, input[0].y)]},8);
});

}
var inputs_2 = [[{x: 1, y: 0}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 2, y: 2}, {x: 1, y: 2}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 0, y: 2}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 2, y: 2}, {x: 1, y: 1}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 1, y: 0}],
[{x: 2, y: 2}, {x: 1, y: 2}, {x: 0, y: 2}, {x: 1, y: 2}, {x: 1, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 0, y: 2}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 0, y: 2}],
[{x: 1, y: 0}, {x: 0, y: 0}, {x: 0, y: 1}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 2, y: 2}, {x: 0, y: 2}]]
inputs_2.forEach(function (input) {
behaviorSet2(input);
});

function behaviorSet3(input) {
bp.registerBThread(""O_Player_Thread_3_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y)]},9);
});

bp.registerBThread(""O_Player_Thread_3_2"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), O(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y)]},4);
});

bp.registerBThread(""O_Player_Thread_3_3"", function(){
bp.sync({waitFor:[X(input[2].x, input[2].y), X(input[2].x, input[2].y), O(input[1].x, input[1].y), X(input[2].x, input[2].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y)]},10);
});

bp.registerBThread(""O_Player_Thread_3_4"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[1].x, input[1].y)]});
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},11);
});

bp.registerBThread(""O_Player_Thread_3_5"", function(){
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},10);
});

}
var inputs_3 = [[{x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}],
[{x: 1, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}],
[{x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 0}]]
inputs_3.forEach(function (input) {
behaviorSet3(input);
});

function behaviorSet4(input) {
bp.registerBThread(""O_Player_Thread_4_1"", function(){
bp.sync({waitFor:[O(input[4].x, input[4].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_4_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[3].x, input[3].y)]},8);
});

}
var inputs_4 = [[{x: 2, y: 0}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 2, y: 1}, {x: 1, y: 0}],
[{x: 2, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 0, y: 0}],
[{x: 0, y: 2}, {x: 1, y: 2}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 0, y: 0}],
[{x: 1, y: 0}, {x: 0, y: 1}, {x: 0, y: 0}, {x: 2, y: 0}, {x: 0, y: 0}],
[{x: 2, y: 1}, {x: 0, y: 0}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 2, y: 2}]]
inputs_4.forEach(function (input) {
behaviorSet4(input);
});

function behaviorSet5(input) {
bp.registerBThread(""O_Player_Thread_5_1"", function(){
bp.sync({waitFor:[O(input[2].x, input[2].y)]});
bp.sync({waitFor:[O(input[1].x, input[1].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},3);
});

bp.registerBThread(""O_Player_Thread_5_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[2].x, input[2].y), O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},9);
});

bp.registerBThread(""O_Player_Thread_5_3"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({waitFor:[X(input[2].x, input[2].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y), O(input[1].x, input[1].y)]},11);
});

}
var inputs_5 = [[{x: 1, y: 0}, {x: 1, y: 1}, {x: 1, y: 2}],
[{x: 2, y: 2}, {x: 0, y: 2}, {x: 2, y: 1}]]
inputs_5.forEach(function (input) {
behaviorSet5(input);
});

function behaviorSet6(input) {
bp.registerBThread(""O_Player_Thread_6_1"", function(){
bp.sync({waitFor:[O(input[1].x, input[1].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_6_2"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[1].x, input[1].y), O(input[1].x, input[1].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[1].x, input[1].y)]},10);
});

bp.registerBThread(""O_Player_Thread_6_3"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_6_4"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[1].x, input[1].y), O(input[1].x, input[1].y)]},3);
});

}
var inputs_6 = [[{x: 0, y: 2}, {x: 1, y: 0}],
[{x: 0, y: 0}, {x: 1, y: 2}]]
inputs_6.forEach(function (input) {
behaviorSet6(input);
});

function behaviorSet7(input) {
bp.registerBThread(""O_Player_Thread_7_1"", function(){
bp.sync({request:[O(input[4].x, input[4].y), O(input[3].x, input[3].y), O(input[1].x, input[1].y), O(input[4].x, input[4].y)]},2);
});

}
var inputs_7 = [[{x: 0, y: 1}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 1, y: 2}, {x: 1, y: 2}],
[{x: 1, y: 1}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 2, y: 0}, {x: 1, y: 2}],
[{x: 2, y: 1}, {x: 1, y: 1}, {x: 0, y: 0}, {x: 0, y: 2}, {x: 2, y: 1}, {x: 0, y: 2}],
[{x: 0, y: 1}, {x: 0, y: 2}, {x: 1, y: 1}, {x: 0, y: 2}, {x: 2, y: 0}, {x: 2, y: 0}],
[{x: 1, y: 2}, {x: 0, y: 2}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 0, y: 0}, {x: 1, y: 2}, {x: 0, y: 1}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 2}, {x: 0, y: 1}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 0, y: 1}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 2}, {x: 2, y: 1}]]
inputs_7.forEach(function (input) {
behaviorSet7(input);
});

function behaviorSet8(input) {
bp.registerBThread(""O_Player_Thread_8_1"", function(){
bp.sync({waitFor:[X(input[1].x, input[1].y), O(input[0].x, input[0].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[0].x, input[0].y)]},7);
});

bp.registerBThread(""O_Player_Thread_8_2"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[0].x, input[0].y), X(input[1].x, input[1].y), X(input[0].x, input[0].y)]});
bp.sync({request:[O(input[1].x, input[1].y)]},4);
});

bp.registerBThread(""O_Player_Thread_8_3"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y), X(input[1].x, input[1].y), O(input[0].x, input[0].y), X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[1].x, input[1].y)]},3);
});

}
var inputs_8 = [[{x: 1, y: 2}, {x: 0, y: 1}],
[{x: 1, y: 0}, {x: 2, y: 2}],
[{x: 2, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}],
[{x: 0, y: 0}, {x: 2, y: 2}]]
inputs_8.forEach(function (input) {
behaviorSet8(input);
});

function behaviorSet9(input) {
bp.registerBThread(""O_Player_Thread_9_1"", function(){
bp.sync({waitFor:[X(input[0].x, input[0].y)]});
bp.sync({waitFor:[X(input[3].x, input[3].y), X(input[2].x, input[2].y), O(input[2].x, input[2].y)]});
bp.sync({request:[O(input[0].x, input[0].y), O(input[0].x, input[0].y)]},2);
});

bp.registerBThread(""O_Player_Thread_9_2"", function(){
bp.sync({request:[O(input[1].x, input[1].y), O(input[0].x, input[0].y), O(input[2].x, input[2].y), O(input[2].x, input[2].y)]},8);
});

}
var inputs_9 = [[{x: 2, y: 0}, {x: 1, y: 2}, {x: 1, y: 2}, {x: 0, y: 1}],
[{x: 2, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}, {x: 1, y: 0}],
[{x: 0, y: 0}, {x: 2, y: 0}, {x: 1, y: 0}, {x: 2, y: 1}],
[{x: 2, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}, {x: 1, y: 2}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 1}, {x: 1, y: 1}],
[{x: 1, y: 2}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 1, y: 0}]]
inputs_9.forEach(function (input) {
behaviorSet9(input);
});

function behaviorSet10(input) {
bp.registerBThread(""O_Player_Thread_10_1"", function(){
bp.sync({waitFor:[X(input[5].x, input[5].y)]});
bp.sync({waitFor:[O(input[3].x, input[3].y), O(input[6].x, input[6].y), X(input[2].x, input[2].y), X(input[1].x, input[1].y)]});
bp.sync({request:[O(input[2].x, input[2].y), O(input[5].x, input[5].y), O(input[7].x, input[7].y)]},6);
});

bp.registerBThread(""O_Player_Thread_10_2"", function(){
bp.sync({request:[O(input[6].x, input[6].y)]},2);
});

bp.registerBThread(""O_Player_Thread_10_3"", function(){
bp.sync({waitFor:[X(input[7].x, input[7].y), O(input[3].x, input[3].y), O(input[6].x, input[6].y), O(input[5].x, input[5].y)]});
bp.sync({waitFor:[O(input[7].x, input[7].y), O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[4].x, input[4].y), O(input[3].x, input[3].y), O(input[6].x, input[6].y), O(input[4].x, input[4].y)]},5);
});

bp.registerBThread(""O_Player_Thread_10_4"", function(){
bp.sync({waitFor:[X(input[4].x, input[4].y)]});
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[4].x, input[4].y), O(input[7].x, input[7].y), O(input[3].x, input[3].y), O(input[2].x, input[2].y)]},9);
});

bp.registerBThread(""O_Player_Thread_10_5"", function(){
bp.sync({waitFor:[O(input[0].x, input[0].y)]});
bp.sync({request:[O(input[5].x, input[5].y), O(input[0].x, input[0].y), O(input[7].x, input[7].y)]},1);
});

}
var inputs_10 = [[{x: 1, y: 1}, {x: 0, y: 2}, {x: 1, y: 2}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 2}, {x: 0, y: 1}],
[{x: 2, y: 0}, {x: 2, y: 2}, {x: 2, y: 1}, {x: 2, y: 2}, {x: 2, y: 2}, {x: 0, y: 1}, {x: 2, y: 2}, {x: 0, y: 1}],
[{x: 0, y: 0}, {x: 2, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 2, y: 2}, {x: 2, y: 2}],
[{x: 0, y: 0}, {x: 1, y: 0}, {x: 2, y: 0}, {x: 0, y: 1}, {x: 1, y: 0}, {x: 1, y: 1}, {x: 2, y: 2}, {x: 0, y: 0}],
[{x: 2, y: 1}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 0, y: 2}, {x: 0, y: 0}, {x: 1, y: 2}, {x: 2, y: 1}, {x: 0, y: 1}],
[{x: 2, y: 1}, {x: 2, y: 1}, {x: 2, y: 1}, {x: 0, y: 0}, {x: 1, y: 0}, {x: 1, y: 2}, {x: 2, y: 2}, {x: 2, y: 2}],
[{x: 0, y: 1}, {x: 1, y: 1}, {x: 1, y: 2}, {x: 2, y: 0}, {x: 2, y: 1}, {x: 2, y: 0}, {x: 2, y: 0}, {x: 2, y: 2}]]
inputs_10.forEach(function (input) {
behaviorSet10(input);
});

"
